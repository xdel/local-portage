--- a/skychart/library/chealpix/Makefile.linux	1970-01-01 00:00:00.000000000 -0000
+++ b/skychart/library/chealpix/Makefile.linux	2019-08-17 23:27:19.979999983 -0000
@@ -0,0 +1,18 @@
+##############################################################################
+
+CC=gcc
+CFLAGS += -w -fPIC
+SO_Name       = libchealpix.so
+LIBFLAGS      = -shared -lc -lm -lstdc++ -Wl,-soname,$(SO_Name) $(arch_flags)
+
+OBJS =	chealpix.o
+
+all: $(SO_Name)
+
+$(SO_Name): $(OBJS)
+	$(CC) $(CFLAGS) $(LDFLAGS) $(LIBFLAGS) -o $@ $(OBJS)
+
+chealpix.o:	chealpix.h chealpix.c
+
+clean:
+	rm -f *.a *.o $(SO_Name)
--- a/skychart/library/getdss/Makefile	2019-07-31 12:54:26.000000000 -0000
+++ b/skychart/library/getdss/Makefile	2019-08-17 23:29:33.493333337 -0000
@@ -1,4 +1,4 @@
-CPPFLAGS=-I. -O3 -fPIC $(arch_flags)
+CPPFLAGS=-I. -O3 -fPIC $(arch_flags)
 #### For Suns and similar wrong-endian computers, add -DWRONG_WAY_BYTE_ORDER.
 OSTYPE = $(shell uname)
 ifneq ($(findstring BSD,$(OSTYPE)),)
@@ -8,16 +8,16 @@
 endif
 ifneq ($(findstring Darwin,$(OSTYPE)),)
 SO_Name = libgetdss.dylib
-LDFLAGS=  $(arch_flags) -Wl,-single_module -dynamiclib  -lc -lm -lstdc++ -mmacosx-version-min=10.10
+LDFLAGS +=  $(arch_flags) -Wl -lc -lm -lstdc++
 else
 SO_Name = libgetdss.so
-LDFLAGS= -shared -lc -lm -lstdc++ -Wl,-soname,$(SO_Name) $(arch_flags)
+LDFLAGS += -shared -lc -lm -lstdc++ -Wl,-soname,$(SO_Name) $(arch_flags)
 endif
 
 OBJS = getdss_lib.o dss.o extr_fit.o getpiece.o \
 	hdcmprss.o bitinput.o decode.o dodecode.o hinv.o \
 	platelst.o qtreedec.o
-LIBS = -lm -lstdc++
+LIBS += -lm -lstdc++
 
 all: $(SO_Name)
 
--- a/skychart/library/plan404/Makefile
+++ b/skychart/library/plan404/Makefile
@@ -6,22 +6,22 @@
 CC            = gcc
 endif
 #CFLAGS        = -O3 -ffast-math (fast-math removed for better compatibility )
-CFLAGS        = -O3 -fPIC $(arch_flags)
+CFLAGS        += -O3 -fPIC $(arch_flags)
 ifneq ($(findstring Darwin,$(OSTYPE)),)
 SO_Name       = libplan404.dylib
-CFLAGS        = -O3 -fPIC $(arch_flags) -Wno-implicit-function-declaration
-LIBFLAGS      = $(arch_flags) -Wl,-single_module -dynamiclib  -lc -lm -mmacosx-version-min=10.10
+CFLAGS        += -O3 -fPIC $(arch_flags) -Wno-implicit-function-declaration
+LIBFLAGS      += $(arch_flags) -Wl  -lc -lm
 else
 SO_Name       = libplan404.so
-LIBFLAGS      = -shared -Wl,-soname,$(SO_Name) -lc -lm
+LIBFLAGS      += -shared -Wl,-soname,$(SO_Name) -lc -lm
 endif
 ifneq ($(findstring W32,$(OSTYPE)),)
 SO_Name       = libplan404.dll
-LIBFLAGS      = -shared -Wl,-soname,$(SO_Name)  -lm
+LIBFLAGS      += -shared -Wl,-soname,$(SO_Name)  -lm
 endif
 ifneq ($(findstring MINGW,$(OSTYPE)),)
 SO_Name       = libplan404.dll
-LIBFLAGS      = -shared -Wl,-soname,$(SO_Name)  -lm
+LIBFLAGS      += -shared -Wl,-soname,$(SO_Name)  -lm
 endif
 
 .PHONY: clean
@@ -40,7 +40,7 @@
 	$(CC) $(CFLAGS) -c $< -o $@
 
 $(SO_Name): $(OBJ)
-	$(CC) $(CFLAGS) $(LIBFLAGS) -o $@ $(OBJ)
+	$(CC) $(CFLAGS) $(LDFLAGS) $(LIBFLAGS) -o $@ $(OBJ)
 
 clean:
 	rm -f $(OBJ) $(SO_Name)
--- a/skychart/library/wcs/Makefile
+++ b/skychart/library/wcs/Makefile
@@ -1,4 +1,4 @@
-CFLAGS= -w -fPIC $(arch_flags)
+CFLAGS += -w -fPIC $(arch_flags)
 OSTYPE = $(shell uname)
 ifneq ($(findstring BSD,$(OSTYPE)),)
 CC            = cc
@@ -32,7 +32,7 @@
 all: $(SO_Name)
 
 $(SO_Name): $(OBJS)
-	$(CC) $(CFLAGS) $(LIBFLAGS) -o $@ $(OBJS)
+	$(CC) $(CFLAGS) $(LDFLAGS) $(LIBFLAGS) -o $@ $(OBJS)
 
 cdcwcs.o:	fitsfile.h wcs.h
 actread.o:	fitsfile.h wcscat.h wcs.h fitshead.h wcslib.h
--- a/skychart/library/Makefile.in
+++ b/skychart/library/Makefile.in
@@ -25,19 +25,10 @@
         $(MAKE) -C wcs -f Makefile.win64 all
         $(MAKE) -C chealpix -f Makefile.win64 all
  else
- ifeq ($(OS_TARGET),darwin)
-   ifeq ($(CPU_TARGET),i386)
-        $(MAKE) -C getdss all arch_flags=-m32
-        $(MAKE) -C plan404 all arch_flags=-m32
-        $(MAKE) -C wcs all arch_flags=-m32
-        $(MAKE) -C chealpix -f Makefile.darwin all
-   else
-        $(MAKE) -C getdss all arch_flags=-m64
-        $(MAKE) -C plan404 all arch_flags=-m64
-        $(MAKE) -C wcs all arch_flags=-m64
-        $(MAKE) -C chealpix -f Makefile.darwin64 all
-   endif
- endif
+        $(MAKE) -C getdss all
+        $(MAKE) -C plan404 all
+        $(MAKE) -C wcs all
+        $(MAKE) -C chealpix -f Makefile.linux all
  endif
 endif
 
@@ -54,11 +45,9 @@
         $(MAKE) -C wcs -f Makefile.win64 clean
         $(MAKE) -C chealpix -f Makefile.win64 clean
 else
-ifeq ($(OS_TARGET),darwin)
 	$(MAKE) -C getdss clean
 	$(MAKE) -C plan404 clean
 	$(MAKE) -C wcs clean
-	$(MAKE) -C chealpix -f Makefile.darwin clean
-endif
+	$(MAKE) -C chealpix -f Makefile.linux clean
 endif
 endif
