description: backwards compatibility for older versions of icu
author: Michael Gilbert <mgilbert@debian.org>

--- a/third_party/blink/renderer/platform/graphics/logging_canvas.cc
+++ b/third_party/blink/renderer/platform/graphics/logging_canvas.cc
@@ -528,8 +528,12 @@ String StringForUTF32LEText(const void*
   utf16 = icu::UnicodeString::fromUTF32(reinterpret_cast<const UChar32*>(text),
                                         static_cast<int32_t>(byte_length));
 #endif
+#if U_ICU_VERSION_MAJOR_NUM >= 59
   return String(icu::toUCharPtr(utf16.getBuffer()),
                 static_cast<unsigned>(utf16.length()));
+#else
+  return String(utf16.getBuffer(),static_cast<unsigned>(utf16.length()));
+#endif
 }
 
 String StringForText(const void* text,
--- a/components/url_formatter/idn_spoof_checker.cc
+++ b/components/url_formatter/idn_spoof_checker.cc
@@ -378,8 +378,8 @@ bool IDNSpoofChecker::SimilarToTopDomain
   if ((u04cf_pos = host.indexOf(0x4CF)) != -1) {
     icu::UnicodeString host_alt(host);
     size_t length = host_alt.length();
-    char16_t* buffer = host_alt.getBuffer(-1);
-    for (char16_t* uc = buffer + u04cf_pos ; uc < buffer + length; ++uc) {
+    UChar* buffer = host_alt.getBuffer(-1);
+    for (UChar* uc = buffer + u04cf_pos ; uc < buffer + length; ++uc) {
       if (*uc == 0x4CF)
         *uc = 0x6C;  // Lowercase L
     }
