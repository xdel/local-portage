diff --git a/dom/media/platforms/agnostic/VPXDecoder.h b/dom/media/platforms/agnostic/VPXDecoder.h
--- a/dom/media/platforms/agnostic/VPXDecoder.h
+++ b/dom/media/platforms/agnostic/VPXDecoder.h
@@ -10,7 +10,6 @@
 #  include "mozilla/Span.h"
 
 #  include <stdint.h>
-#  define VPX_DONT_DEFINE_STDINT_TYPES
 #  include "mozilla/gfx/Types.h"
 #  include "vpx/vp8dx.h"
 #  include "vpx/vpx_codec.h"
diff --git a/media/libvpx/aarch64-windows.patch b/media/libvpx/aarch64-windows.patch
deleted file mode 100644
--- a/media/libvpx/aarch64-windows.patch
+++ /dev/null
@@ -1,12 +0,0 @@
-diff --git a/media/libvpx/libvpx/configure b/media/libvpx/libvpx/configure
-index e5a74c6..12bab6c 100755
---- a/media/libvpx/libvpx/configure
-+++ b/media/libvpx/libvpx/configure
-@@ -159,6 +159,7 @@ all_platforms="${all_platforms} x86_64-win64-vs11"
- all_platforms="${all_platforms} x86_64-win64-vs12"
- all_platforms="${all_platforms} x86_64-win64-vs14"
- all_platforms="${all_platforms} x86_64-win64-vs15"
-+all_platforms="${all_platforms} aarch64-win64-vs12"
- all_platforms="${all_platforms} generic-gnu"
- 
- # all_targets is a list of all targets that can be configured
diff --git a/media/libvpx/bug1480092.patch b/media/libvpx/bug1480092.patch
deleted file mode 100644
--- a/media/libvpx/bug1480092.patch
+++ /dev/null
@@ -1,22 +0,0 @@
-diff --git a/media/libvpx/libvpx/vp8/common/postproc.c b/media/libvpx/libvpx/vp8/common/postproc.c
---- a/media/libvpx/libvpx/vp8/common/postproc.c
-+++ b/media/libvpx/libvpx/vp8/common/postproc.c
-@@ -60,17 +60,17 @@ static void vp8_de_mblock(YV12_BUFFER_CO
- }
- 
- void vp8_deblock(VP8_COMMON *cm, YV12_BUFFER_CONFIG *source,
-                  YV12_BUFFER_CONFIG *post, int q, int low_var_thresh,
-                  int flag) {
-   double level = 6.0e-05 * q * q * q - .0067 * q * q + .306 * q + .0065;
-   int ppl = (int)(level + .5);
- 
--  const MODE_INFO *mode_info_context = cm->show_frame_mi;
-+  const MODE_INFO *mode_info_context = cm->mi;
-   int mbr, mbc;
- 
-   /* The pixel thresholds are adjusted according to if or not the macroblock
-    * is a skipped block.  */
-   unsigned char *ylimits = cm->pp_limits_buffer;
-   unsigned char *uvlimits = cm->pp_limits_buffer + 16 * cm->mb_cols;
-   (void)low_var_thresh;
-   (void)flag;
diff --git a/media/libvpx/generate_sources_mozbuild.sh b/media/libvpx/generate_sources_mozbuild.sh
--- a/media/libvpx/generate_sources_mozbuild.sh
+++ b/media/libvpx/generate_sources_mozbuild.sh
@@ -17,6 +17,7 @@
 BASE_DIR=$(pwd)
 LIBVPX_SRC_DIR="libvpx"
 LIBVPX_CONFIG_DIR="config"
+DISABLE_AVX="--disable-avx512"
 
 # Print license header.
 # $1 - Output base name
diff --git a/media/libvpx/input_frame_validation.patch b/media/libvpx/input_frame_validation.patch
--- a/media/libvpx/input_frame_validation.patch
+++ b/media/libvpx/input_frame_validation.patch
@@ -10,9 +10,9 @@
 +++ b/media/libvpx/libvpx/vp8/vp8_cx_iface.c
 @@ -855,20 +855,29 @@ static vpx_codec_err_t vp8e_encode(vpx_codec_alg_priv_t *ctx,
      dst_time_stamp =
-         pts * 10000000 * ctx->cfg.g_timebase.num / ctx->cfg.g_timebase.den;
-     dst_end_time_stamp = (pts + duration) * 10000000 * ctx->cfg.g_timebase.num /
-                          ctx->cfg.g_timebase.den;
+         pts_val * ctx->timestamp_ratio.num / ctx->timestamp_ratio.den;
+     dst_end_time_stamp = (pts_val + (int64_t)duration) *
+                          ctx->timestamp_ratio.num / ctx->timestamp_ratio.den;
 
      if (img != NULL) {
        res = image2yuvconfig(img, &sd);
diff --git a/media/libvpx/rename_duplicate_files.patch b/media/libvpx/rename_duplicate_files.patch
--- a/media/libvpx/rename_duplicate_files.patch
+++ b/media/libvpx/rename_duplicate_files.patch
@@ -1,20 +1,19 @@
-diff --git a/libvpx/vpx_dsp/vpx_dsp.mk b/libvpx/vpx_dsp/vpx_dsp.mk
-index 84b529136ba9..7f3111320dc9 100644
---- a/libvpx/vpx_dsp/vpx_dsp.mk
-+++ b/libvpx/vpx_dsp/vpx_dsp.mk
-@@ -133,17 +133,17 @@ DSP_SRCS-$(HAVE_DSPR2)  += mips/convolve8_avg_dspr2.c
- DSP_SRCS-$(HAVE_DSPR2)  += mips/convolve8_avg_horiz_dspr2.c
- DSP_SRCS-$(HAVE_DSPR2)  += mips/convolve8_dspr2.c
+diff --git a/media/libvpx/libvpx/vpx_dsp/vpx_dsp.mk b/media/libvpx/libvpx/vpx_dsp/vpx_dsp.mk
+--- a/media/libvpx/libvpx/vpx_dsp/vpx_dsp.mk
++++ b/media/libvpx/libvpx/vpx_dsp/vpx_dsp.mk
+@@ -160,17 +160,17 @@ DSP_SRCS-$(HAVE_DSPR2)  += mips/convolve
  DSP_SRCS-$(HAVE_DSPR2)  += mips/convolve8_horiz_dspr2.c
  DSP_SRCS-$(HAVE_DSPR2)  += mips/convolve8_vert_dspr2.c
-
+ 
+ DSP_SRCS-$(HAVE_VSX)  += ppc/vpx_convolve_vsx.c
+ 
  # loop filters
  DSP_SRCS-yes += loopfilter.c
-
--DSP_SRCS-$(ARCH_X86)$(ARCH_X86_64)   += x86/loopfilter_sse2.c
-+DSP_SRCS-$(ARCH_X86)$(ARCH_X86_64)   += x86/loopfilter_intrin_sse2.c
- DSP_SRCS-$(HAVE_AVX2)                += x86/loopfilter_avx2.c
-
+ 
+-DSP_SRCS-$(HAVE_SSE2)  += x86/loopfilter_sse2.c
++DSP_SRCS-$(HAVE_SSE2)  += x86/loopfilter_intrin_sse2.c
+ DSP_SRCS-$(HAVE_AVX2)  += x86/loopfilter_avx2.c
+ 
  ifeq ($(HAVE_NEON_ASM),yes)
  DSP_SRCS-yes  += arm/loopfilter_16_neon$(ASM)
  DSP_SRCS-yes  += arm/loopfilter_8_neon$(ASM)
diff --git a/media/libvpx/stdint.patch b/media/libvpx/stdint.patch
deleted file mode 100644
--- a/media/libvpx/stdint.patch
+++ /dev/null
@@ -1,41 +0,0 @@
-diff --git a/media/libvpx/libvpx/vpx/vpx_integer.h b/media/libvpx/libvpx/vpx/vpx_integer.h
---- a/media/libvpx/libvpx/vpx/vpx_integer.h
-+++ b/media/libvpx/libvpx/vpx/vpx_integer.h
-@@ -18,16 +18,18 @@
- #define VPX_FORCE_INLINE __forceinline
- #define VPX_INLINE __inline
- #else
- #define VPX_FORCE_INLINE __inline__ __attribute__(always_inline)
- // TODO(jbb): Allow a way to force inline off for older compilers.
- #define VPX_INLINE inline
- #endif
- 
-+#if !defined(VPX_DONT_DEFINE_STDINT_TYPES)
-+
- #if defined(VPX_EMULATE_INTTYPES)
- typedef signed char int8_t;
- typedef signed short int16_t;
- typedef signed int int32_t;
-
- typedef unsigned char uint8_t;
- typedef unsigned short uint16_t;
- typedef unsigned int uint32_t;
-@@ -48,16 +50,18 @@ typedef size_t uintptr_t;
- #define __STDC_LIMIT_MACROS
- #endif
- #endif  // __cplusplus
-
- #include <stdint.h>
-
- #endif
-
-+#endif // VPX_DONT_DEFINE_STDINT_TYPES
-+
- /* VS2010 defines stdint.h, but not inttypes.h */
- #if defined(_MSC_VER) && _MSC_VER < 1800
- #define PRId64 "I64d"
- #else
- #include <inttypes.h>
- #endif
-
- #endif  // VPX_VPX_INTEGER_H_
diff --git a/media/libvpx/update.py b/media/libvpx/update.py
--- a/media/libvpx/update.py
+++ b/media/libvpx/update.py
@@ -9,29 +9,27 @@
 import sys
 import subprocess
 import tarfile
-import urllib
+import urllib.request
 from pprint import pprint
-from StringIO import StringIO
+from io import StringIO
 
 def prepare_upstream(prefix, commit=None):
     upstream_url = 'https://chromium.googlesource.com/webm/libvpx'
     shutil.rmtree(os.path.join(base, 'libvpx/'))
     print(upstream_url + '/+archive/' + commit + '.tar.gz')
-    urllib.urlretrieve(upstream_url + '/+archive/' + commit + '.tar.gz', 'libvpx.tar.gz')
+    urllib.request.urlretrieve(upstream_url + '/+archive/' + commit + '.tar.gz', 'libvpx.tar.gz')
     tarfile.open('libvpx.tar.gz').extractall(path='libvpx')
     os.remove(os.path.join(base, 'libvpx.tar.gz'))
     os.chdir(base)
     return commit
 
 def cleanup_upstream():
-    os.remove(os.path.join(base, 'libvpx/.gitattributes'))
-    os.remove(os.path.join(base, 'libvpx/.gitignore'))
-    os.remove(os.path.join(base, 'libvpx/build/.gitattributes'))
-    os.remove(os.path.join(base, 'libvpx/build/.gitignore'))
+    os.remove(os.path.join(base, 'libvpx', '.gitattributes'))
+    os.remove(os.path.join(base, 'libvpx', '.gitignore'))
+    shutil.rmtree(os.path.join(base, 'libvpx', 'third_party', 'libwebm'))
+    shutil.rmtree(os.path.join(base, 'libvpx', 'tools'))
 
 def apply_patches():
-    # Patch to permit vpx users to specify their own <stdint.h> types.
-    os.system("patch -p3 < stdint.patch")
     # Patch to fix a crash caused by MSVC 2013
     os.system("patch -p3 < bug1137614.patch")
     # Bug 1263384 - Check input frame resolution
@@ -39,13 +37,10 @@
     # Bug 1315288 - Check input frame resolution for vp9
     os.system("patch -p3 < input_frame_validation_vp9.patch")
     # Avoid c/asm name collision for loopfilter_sse2
-    os.system("patch -p1 < rename_duplicate_files.patch")
+    os.system("patch -p3 < rename_duplicate_files.patch")
     os.system("mv libvpx/vpx_dsp/x86/loopfilter_sse2.c libvpx/vpx_dsp/x86/loopfilter_intrin_sse2.c")
-    # Cherrypick fix from upstream
-    os.system("patch -p3 < bug1480092.patch")
-    # AArch64 Windows support
-    os.system("patch -p3 < aarch64-windows.patch")
-
+    # Ensure float_control_word.asm is included
+    os.system("patch -p3 < win64_build_fix.patch")
 
 def update_readme(commit):
     with open('README_MOZILLA') as f:
diff --git a/media/libvpx/win64_build_fix.patch b/media/libvpx/win64_build_fix.patch
new file mode 100644
--- /dev/null
+++ b/media/libvpx/win64_build_fix.patch
@@ -0,0 +1,22 @@
+diff --git a/media/libvpx/libvpx/vpx_ports/vpx_ports.mk b/media/libvpx/libvpx/vpx_ports/vpx_ports.mk
+--- a/media/libvpx/libvpx/vpx_ports/vpx_ports.mk
++++ b/media/libvpx/libvpx/vpx_ports/vpx_ports.mk
+@@ -21,17 +21,17 @@ ifeq ($(VPX_ARCH_X86),yes)
+ PORTS_SRCS-$(HAVE_MMX) += emms_mmx.c
+ endif
+ ifeq ($(VPX_ARCH_X86_64),yes)
+ # Visual Studio x64 does not support the _mm_empty() intrinsic.
+ PORTS_SRCS-$(HAVE_MMX) += emms_mmx.asm
+ endif
+ 
+ ifeq ($(VPX_ARCH_X86_64),yes)
+-PORTS_SRCS-$(CONFIG_MSVS) += float_control_word.asm
++PORTS_SRCS-yes += float_control_word.asm
+ endif
+ 
+ ifeq ($(VPX_ARCH_X86)$(VPX_ARCH_X86_64),yes)
+ PORTS_SRCS-yes += x86.h
+ PORTS_SRCS-yes += x86_abi_support.asm
+ endif
+ 
+ PORTS_SRCS-$(VPX_ARCH_ARM) += arm_cpudetect.c

