From aa32645fe665cc02f3584a4231bf0d653676a646 Mon Sep 17 00:00:00 2001
From: Hannes Schueller <hannes@yllr.net>
Date: Fri, 26 Dec 2014 11:06:38 +0100
Subject: [PATCH 02/20] bugfix: prevent externally edited textarea to remain
 disabled when losing focus for whatever reason

---
 main.c | 25 ++++++++++++++-----------
 1 file changed, 14 insertions(+), 11 deletions(-)

diff --git a/main.c b/main.c
index 92853af..9d9a292 100644
--- a/main.c
+++ b/main.c
@@ -1896,6 +1896,9 @@ open_editor(const Arg *arg) {
         g_free(message);
         return FALSE;
     }
+    jsapi_evaluate_script("editElem = document.activeElement", &value, &message);
+    g_free(value);
+    g_free(message);
 
     /* write text into temporary file */
     temp_file_handle = mkstemp(temp_file_name);
@@ -1935,10 +1938,10 @@ open_editor(const Arg *arg) {
    
     /* mark the active text box as "under processing" */
     jsapi_evaluate_script(
-        "document.activeElement.disabled = true;"
-        "document.activeElement.originalBackground = "
-        "   document.activeElement.style.background;"
-        "document.activeElement.style.background = '#aaaaaa';"
+        "editElem.disabled = true;"
+        "editElem.originalBackground = "
+        "   editElem.style.background;"
+        "editElem.style.background = '#aaaaaa';"
         ,&value, &message);
 
     g_child_watch_add(child_pid, _resume_from_editor, temp_file_name);
@@ -1961,7 +1964,7 @@ void
 _resume_from_editor(GPid child_pid, int child_status, gpointer data) {
     FILE *fp;
     GString *set_value_js = g_string_new(
-        "document.activeElement.value = \"");
+        "editElem.value = \"");
     g_spawn_close_pid(child_pid);
     gchar *value = NULL, *message = NULL;
     gchar *temp_file_name = data;
@@ -1970,8 +1973,8 @@ _resume_from_editor(GPid child_pid, int child_status, gpointer data) {
     int char_read;
 
     jsapi_evaluate_script(
-        "document.activeElement.disabled = true;"
-        "document.activeElement.style.background = '#aaaaaa';"
+        "editElem.disabled = true;"
+        "editElem.style.background = '#aaaaaa';"
         ,&value, &message);
     g_free(value);
     g_free(message);
@@ -1993,7 +1996,7 @@ _resume_from_editor(GPid child_pid, int child_status, gpointer data) {
         /* this would be too weird to even emit an error message */
         goto error_exit;
     }
-    jsapi_evaluate_script("document.activeElement.value = '';", 
+    jsapi_evaluate_script("editElem.value = '';", 
         &value, &message);
     g_free(value);
     g_free(message);
@@ -2028,9 +2031,9 @@ _resume_from_editor(GPid child_pid, int child_status, gpointer data) {
     /* Fall through, error and normal exit are identical */
 error_exit:
     jsapi_evaluate_script(
-        "document.activeElement.disabled = false;"
-        "document.activeElement.style.background ="
-        "   document.activeElement.originalBackground;"
+        "editElem.disabled = false;"
+        "editElem.style.background ="
+        "   editElem.originalBackground;"
         ,&value, &message);
 
     g_string_free(set_value_js, TRUE);
-- 
2.1.4

