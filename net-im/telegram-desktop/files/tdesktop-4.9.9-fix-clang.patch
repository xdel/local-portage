diff -ruN a/Telegram/lib_base/base/platform/linux/base_system_media_controls_linux.cpp b/Telegram/lib_base/base/platform/linux/base_system_media_controls_linux.cpp
--- a/Telegram/lib_base/base/platform/linux/base_system_media_controls_linux.cpp	2023-09-18 18:45:51.000000000 +0300
+++ b/Telegram/lib_base/base/platform/linux/base_system_media_controls_linux.cpp	2023-09-23 16:59:25.957069421 +0300
@@ -194,7 +194,7 @@
 	player().set_loop_status("None");
 	player().set_rate(1.0);
 	const auto executeCommand = [=](
-			GObject::Object,
+			gi::repository::GObject::Object,
 			Gio::DBusMethodInvocation invocation) {
 		base::Integration::Instance().enterFromEventLoop([&] {
 			_commandRequests.fire_copy(
@@ -234,16 +234,16 @@
 		return true;
 	});
 	player().property_loop_status().signal_notify().connect([=](
-			GObject::Object,
-			GObject::ParamSpec) {
+			gi::repository::GObject::Object,
+			gi::repository::GObject::ParamSpec) {
 		base::Integration::Instance().enterFromEventLoop([&] {
 			_commandRequests.fire_copy(
 				LoopStatusToCommand(player().get_loop_status().value_or("")));
 		});
 	});
 	player().property_shuffle().signal_notify().connect([=](
-			GObject::Object,
-			GObject::ParamSpec) {
+			gi::repository::GObject::Object,
+			gi::repository::GObject::ParamSpec) {
 		if (playerData().inSetShuffle) {
 			return;
 		}
@@ -252,8 +252,8 @@
 		});
 	});
 	player().property_volume().signal_notify().connect([=](
-			GObject::Object,
-			GObject::ParamSpec) {
+			gi::repository::GObject::Object,
+			gi::repository::GObject::ParamSpec) {
 		base::Integration::Instance().enterFromEventLoop([&] {
 			_volumeChangeRequests.fire_copy(player().get_volume());
 		});
