commit 5b720de634dd9ecae52bb4b0115088da179b4df5
Author: Petr Zima <zima@matfyz.cz>
Date:   Thu Apr 2 12:24:16 2020 +0200

    texinfo.patch

diff --git a/gcl/info/chap-1.texi b/gcl/info/chap-1.texi
index 2ecba9091..347e87abf 100644
--- a/gcl/info/chap-1.texi
+++ b/gcl/info/chap-1.texi
@@ -419,7 +419,7 @@ used in this manual.
 @node Notational Conventions, Error Terminology, Definitions, Definitions
 @subsection Notational Conventions
 
-@ITindex{notation}
+@ITindex notation
 
 The following notational conventions are used throughout this document.
 
@@ -442,7 +442,7 @@ The following notational conventions are used throughout this document.
 @node Font Key, Modified BNF Syntax, Notational Conventions, Notational Conventions
 @subsubsection Font Key
 
-@ITindex{font key}
+@ITindex font key
 
 Fonts are used in this document to convey information.
 
@@ -461,7 +461,7 @@ The subscript notation for Glossary terms is generally used where the
 context might be insufficient to disambiguate among the available definitions.
 
 @item @i{name}
-@IGindex{name}
+@IGindex name
 
 Denotes the introduction of a formal term locally to the current text.
 There is still a corresponding glossary entry, and is formally equivalent
@@ -497,7 +497,7 @@ input or output.
 @node Modified BNF Syntax, Splicing in Modified BNF Syntax, Font Key, Notational Conventions
 @subsubsection Modified BNF Syntax
 
-@ITindex{bnf key}
+@ITindex bnf key
 
 This specification uses an extended Backus Normal Form (BNF) to
 describe the syntax of @r{Common Lisp} @i{macro forms} and @i{special forms}.
@@ -813,7 +813,7 @@ but conventions may exist which convey a ``point of view'' or ``sense of intent.
 @node Case in Symbols, Numbers (Objects with Multiple Notations), Objects with Multiple Notations, Notational Conventions
 @subsubsection Case in Symbols
 
-@ITindex{case in symbol names}
+@ITindex case in symbol names
 
 While @i{case} is significant in the process of @i{interning} a @i{symbol},
 the @i{Lisp reader}, by default, attempts to canonicalize the case of a
@@ -872,11 +872,11 @@ and never to a four-letter symbol @t{"CAR."}
 @node NIL, Designators, Use of the Dot Character, Notational Conventions
 @subsubsection NIL
 
-@IGindex{nil}
+@IGindex nil
 
-@IGindex{()}
+@IGindex ()
 
-@IRindex{nil}
+@IRindex nil
 
 @b{nil} has a variety of meanings.
 It is a @i{symbol} in the @t{COMMON-LISP} @i{package} with the @i{name} @t{"NIL"},
@@ -934,7 +934,7 @@ Instead, these phrases are just traditional alternative ways of saying that the
 @subsubsection Designators
 
 A @i{designator}
-@IGindex{designator}
+@IGindex designator
  is an @i{object} that denotes another @i{object}.
 
 Where a @i{parameter} of an @i{operator} is described as a @i{designator},
@@ -988,13 +988,13 @@ from which the @i{value} of <<@i{parameter-name}>> was computed.
 @node Nonsense Words,  , Designators, Notational Conventions
 @subsubsection Nonsense Words
 
-@ICindex{foo}
+@ICindex foo
 
-@ICindex{bar}
+@ICindex bar
 
-@ICindex{baz}
+@ICindex baz
 
-@ICindex{quux}
+@ICindex quux
 
 When a word having no pre-attached semantics is required (@i{e.g.}, in an
 example), it is common in the Lisp community to use one of the words
@@ -1014,7 +1014,7 @@ is an attached semantics which they are overlooking---there is not.
 @node Error Terminology, Sections Not Formally Part Of This Standard, Notational Conventions, Definitions
 @subsection Error Terminology
 
-@IGindex{error terminology}
+@IGindex error terminology
 
 Situations in which errors might, should, or must be signaled are described
 in the standard.  The wording used to describe such situations is intended
@@ -1024,7 +1024,7 @@ to have precise meaning. The following list is a glossary of those meanings.
 
 @item @b{Safe code}  
 
-@IGindex{safe}
+@IGindex safe
 
 This is @i{code} processed with the @b{safety} optimization 
 at its highest setting (@t{3}).  @b{safety} is a lexical property
@@ -1036,7 +1036,7 @@ code signals the error.
 
 @item @b{Unsafe code}  
 
-@IGindex{unsafe}
+@IGindex unsafe
 
 This is code processed with lower safety levels.
 
@@ -1045,11 +1045,11 @@ treat all code as safe code all the time.
 
 @item @b{An error is signaled}  
 
-@IGindex{signal}
+@IGindex signal
 
-@ITindex{is signaled}
+@ITindex is signaled
 
-@ITindex{must signal}
+@ITindex must signal
 
 This means that an error is signaled in both safe and unsafe code.
 @i{Conforming code} may rely on the fact that the error is signaled
@@ -1062,9 +1062,9 @@ If an explicit error type is not specified, the default is @b{error}.
 
 @item @b{An error should be signaled}  
 
-@IGindex{signal}
+@IGindex signal
 
-@ITindex{should signal}
+@ITindex should signal
 
 This means that an error is signaled in safe code, and an error
 might be signaled in unsafe code.  @i{Conforming code} may rely on the
@@ -1076,9 +1076,9 @@ if any argument is not of @i{type} @b{number}.''
 
 @item @b{Should be prepared to signal an error}  
 
-@IGindex{signal}
+@IGindex signal
 
-@ITindex{prepared to signal}
+@ITindex prepared to signal
 
 This is similar to ``should be signaled'' except that it does not
 imply that `extra effort' has to be taken on the part of an @i{operator}
@@ -1128,9 +1128,9 @@ correct operation of the @i{operator}.
 
 @item @b{The consequences are unspecified}  
 
-@ITindex{consequences}
+@ITindex consequences
 
-@ITindex{unspecified consequences}
+@ITindex unspecified consequences
 
 This means that the consequences are unpredictable but harmless.
 Implementations are permitted to specify the consequences of this
@@ -1143,9 +1143,9 @@ specifies a name that does not correspond to any @i{slots}
 
 @item @b{The consequences are undefined}  
 
-@ITindex{consequences}
+@ITindex consequences
 
-@ITindex{undefined consequences}
+@ITindex undefined consequences
 
 This means that the consequences are unpredictable. The consequences
 may range from harmless to fatal.  No @i{conforming code} may depend on
@@ -1162,9 +1162,9 @@ variable has undefined consequences.''
 
 @item @b{An error might be signaled}  
 
-@IGindex{signal}
+@IGindex signal
 
-@ITindex{might signal}
+@ITindex might signal
 
 This means that the situation has undefined consequences;
 however, if an error is signaled, it is of the specified @i{type}.
@@ -1172,7 +1172,7 @@ For example, ``@b{open} might signal an error of @i{type} @b{file-error}.''
 
 @item @b{The return values are unspecified}  
 
-@ITindex{unspecified values}
+@ITindex unspecified values
 
 This means that only the number and nature of the return values of a
 @i{form} are not specified.  However, the issue of whether or not
@@ -1186,7 +1186,7 @@ rely on any particular aspect of the value or values returned by @t{F}.
 
 @item @b{Implementations may be extended to cover this situation}  
 
-@ITindex{extensions}
+@ITindex extensions
 
 This means that the @i{situation} has undefined consequences;
 however, a @i{conforming implementation} is free to treat
@@ -1206,7 +1206,7 @@ specifiers to have a corresponding @i{class}.''
 
 @item @b{Implementations are free to extend the syntax}  
 
-@ITindex{extensions}
+@ITindex extensions
 
 This means that in this situation implementations are permitted to
 define unambiguous extensions to the syntax of the @i{form} being
@@ -1219,7 +1219,7 @@ example, ``no implementation is free to extend the syntax of
 
 @item @b{A warning might be issued}  
 
-@ITindex{warning}
+@ITindex warning
 
 This means that @i{implementations} are encouraged to issue a warning
 if the context is appropriate (@i{e.g.}, when compiling).  However, a
@@ -1799,7 +1799,7 @@ In addition, it imposes requirements on @i{conforming programs}.
 @subsection Conforming Implementations
 
 A @i{conforming implementation}
-@IGindex{conforming implementation}
+@IGindex conforming implementation
  shall adhere to the requirements outlined
 in this section.
 
@@ -1906,9 +1906,9 @@ standard, then the conformance statement shall be
 @node Conforming Programs,  , Conforming Implementations, Conformance
 @subsection Conforming Programs
 
-@IGindex{conforming program}
+@IGindex conforming program
 
-@IGindex{conforming code}
+@IGindex conforming code
 
 Code conforming with the requirements of this standard shall adhere to the
 following:
@@ -1989,7 +1989,7 @@ presence of the feature @t{ACME} really implies that a function named
 @t{acme:initialize-something} is present in the environment.  In effect,
 using @t{#+} or @t{#-} in a @i{conforming program} means that the variable
 @b{*features*}
-@IRindex{*features*}
+@IRindex *features*
 
 becomes just one more piece of input data to that 
 program.  Like any other data coming into a program, the programmer
@@ -2177,7 +2177,7 @@ should be used if that is what is desired.
 
 The figures on the next twelve pages contain a complete enumeration
 of the 978 @i{external} @i{symbols} in the @t{COMMON-LISP} @i{package}.
-@IPindex{common-lisp}
+@IPindex common-lisp
 
 @format
 @group
diff --git a/gcl/info/chap-11.texi b/gcl/info/chap-11.texi
index b6d10c89e..e8707ea99 100644
--- a/gcl/info/chap-11.texi
+++ b/gcl/info/chap-11.texi
@@ -22,11 +22,11 @@
 @subsection Introduction to Packages
 
 A @i{package}
-@IGindex{package}
+@IGindex package
  establishes a mapping from names to @i{symbols}. 
 At any given time, one @i{package} is current.
 The @i{current package}
-@IGindex{current package}
+@IGindex current package
  is the one that is the @i{value} of @b{*package*}.
 When using the @i{Lisp reader},
 it is possible to refer to @i{symbols} in @i{packages} 
@@ -99,14 +99,14 @@ specified by the caller.
 The mappings in a @i{package} are divided into two classes, external and internal.
 The @i{symbols} targeted by these different mappings 
 are called @i{external symbols} and @i{internal symbols}
-@IGindex{internal symbol}
+@IGindex internal symbol
  of the
 @i{package}. Within a @i{package}, a name refers to one
 @i{symbol} or to none; if it does refer
 to a @i{symbol}, then it is either external or internal in that
 @i{package}, but not both.
 @i{External symbols}
-@IGindex{external symbol}
+@IGindex external symbol
 
 are part of the package's public interface to other @i{packages}.
 @i{Symbols} become @i{external symbols} of a given
@@ -127,7 +127,7 @@ However, some of these mappings might be established within the @i{package}
 itself, while other mappings are inherited from other @i{packages} 
 via @b{use-package}.
 A @i{symbol} is said to be @i{present}
-@IGindex{present}
+@IGindex present
  in a @i{package} 
 if the mapping is in the @i{package} itself and is
 not inherited from somewhere else.
@@ -143,7 +143,7 @@ to refer to an @i{internal symbol} using the @i{Lisp reader},
 @subsubsection Accessibility of Symbols in a Package
 
 A @i{symbol} becomes @i{accessible}
-@IGindex{accessible}
+@IGindex accessible
  in a @i{package} 
     if that is its @i{home package} when it is created,
  or if it is @i{imported} into that @i{package},
@@ -246,7 +246,7 @@ never signal a name-conflict error.
 do not need to do any name-conflict checking.
 @b{unintern} does name-conflict checking only when a @i{symbol} 
 being @i{uninterned} is a @i{shadowing symbol}
-@IGindex{shadowing symbol}
+@IGindex shadowing symbol
 .
 
 @item --  
@@ -293,7 +293,7 @@ with the @i{same} @i{name} (under @b{string=})
 from two other @i{packages} can be resolved in
 favor of either @i{symbol} by importing it into the using
 @i{package} and making it a @i{shadowing symbol}
-@IGindex{shadowing symbol}
+@IGindex shadowing symbol
 ,
 just as with @b{use-package}.
 @end table
@@ -335,9 +335,9 @@ is given in Figure 11--2.
 @node The COMMON-LISP Package, Constraints on the COMMON-LISP Package for Conforming Implementations, Standardized Packages, Standardized Packages
 @subsubsection The COMMON-LISP Package
 
-@IPindex{common-lisp}
+@IPindex common-lisp
 
-@IPindex{cl}
+@IPindex cl
 
 The @t{COMMON-LISP} @i{package} contains the primitives of the @r{Common Lisp} system as
 defined by this specification.  Its @i{external} @i{symbols} include
@@ -397,7 +397,7 @@ or a @i{symbol} that is otherwise @i{accessible} in the @t{COMMON-LISP-USER} @i{
 @node Constraints on the COMMON-LISP Package for Conforming Programs, Some Exceptions to Constraints on the COMMON-LISP Package for Conforming Programs, Constraints on the COMMON-LISP Package for Conforming Implementations, Standardized Packages
 @subsubsection Constraints on the COMMON-LISP Package for Conforming Programs
 
-@ITindex{redefinition}
+@ITindex redefinition
 
 Except where explicitly allowed, the consequences are undefined if any
 of the following actions are performed on an @i{external symbol} 
@@ -542,9 +542,9 @@ and to declare the @b{ftype} of that @i{binding}.
 @node The COMMON-LISP-USER Package, The KEYWORD Package, Some Exceptions to Constraints on the COMMON-LISP Package for Conforming Programs, Standardized Packages
 @subsubsection The COMMON-LISP-USER Package
 
-@IPindex{common-lisp-user}
+@IPindex common-lisp-user
 
-@IPindex{cl-user}
+@IPindex cl-user
 
 The @t{COMMON-LISP-USER} @i{package} is the @i{current package} when 
 a @r{Common Lisp} system starts up.  This @i{package} @i{uses} the @t{COMMON-LISP} @i{package}.
@@ -556,7 +556,7 @@ it can @i{use} other @i{implementation-defined} @i{packages}.
 @node The KEYWORD Package, Interning a Symbol in the KEYWORD Package, The COMMON-LISP-USER Package, Standardized Packages
 @subsubsection The KEYWORD Package
 
-@IPindex{keyword}
+@IPindex keyword
 
 The @t{KEYWORD} @i{package} contains @i{symbols}, called @i{keywords}_1,
 that are typically used as special markers in @i{programs} 
diff --git a/gcl/info/chap-12.texi b/gcl/info/chap-12.texi
index 2df8fd8fd..c918f90eb 100644
--- a/gcl/info/chap-12.texi
+++ b/gcl/info/chap-12.texi
@@ -4823,9 +4823,9 @@ in a given @i{place}.
 The order of evaluation, when an @b{ldb} form is supplied
 to @b{setf}, is exactly left-to-right.
 
-@ITindex{order of evaluation}
+@ITindex order of evaluation
 
-@ITindex{evaluation order}
+@ITindex evaluation order
 
 The effect is to perform a @b{dpb} operation
 and then store the result back into the @i{place}.
diff --git a/gcl/info/chap-13.texi b/gcl/info/chap-13.texi
index a58e923e3..f12b52d10 100644
--- a/gcl/info/chap-13.texi
+++ b/gcl/info/chap-13.texi
@@ -30,7 +30,7 @@
 @subsection Introduction to Characters
 
 A @i{character}
-@IGindex{character}
+@IGindex character
  is an @i{object} that represents a unitary token 
 (@i{e.g.}, a letter, a special symbol, or a ``control character'')
 in an aggregate quantity of text
@@ -112,7 +112,7 @@ Whether and how the @i{script} or @i{scripts} used by any given
 @subsubsection Character Repertoires
 
 A @i{repertoire}
-@IGindex{repertoire}
+@IGindex repertoire
  is a @i{type specifier} for a @i{subtype} of @i{type} @b{character}.
 
 This term is generally used when describing a collection of @i{characters}
@@ -152,7 +152,7 @@ in some other, @i{implementation-defined} way.
 For any @i{implementation-defined} @i{attribute}
 there is a distinguished value
 called the @i{null}
-@IGindex{null}
+@IGindex null
  value for that @i{attribute}. 
 A @i{character} for which each @i{implementation-defined} @i{attribute}
 has the null value for that @i{attribute} is called a @i{simple} @i{character}.
@@ -198,7 +198,7 @@ which might have been enabled in the @i{current readtable}.
 @subsubsection Graphic Characters
 
 @i{Characters} that are classified as @i{graphic}
-@IGindex{graphic}
+@IGindex graphic
 , or displayable, are each
 associated with a glyph, a visual representation of the @i{character}.
 
@@ -212,7 +212,7 @@ Of the @i{standard characters},
  and all others are @i{graphic}; see @ref{Standard Characters}.
 
 @i{Characters} that are not @i{graphic} are called @i{non-graphic}
-@IGindex{non-graphic}
+@IGindex non-graphic
 .
 
 @i{Non-graphic} @i{characters} are sometimes informally called
diff --git a/gcl/info/chap-14.texi b/gcl/info/chap-14.texi
index 00b0ef27e..7f4acddeb 100644
--- a/gcl/info/chap-14.texi
+++ b/gcl/info/chap-14.texi
@@ -14,7 +14,7 @@
 @c including concept-conses
 
 A @i{cons}
-@IGindex{cons}
+@IGindex cons
  is a compound data @i{object} 
 having two components called the @i{car} and the @i{cdr}.
 
@@ -43,13 +43,13 @@ support each of these various views.
 @subsection Conses as Trees
 
 A @i{tree}
-@IGindex{tree}
+@IGindex tree
  is a binary recursive data structure made up of
 @i{conses} and @i{atoms}:
 the @i{conses} are themselves also @i{trees}
 (sometimes called ``subtrees'' or ``branches''), and the @i{atoms}
 are terminal nodes (sometimes called @i{leaves}
-@IGindex{leaves}
+@IGindex leaves
 ). 
 Typically, the @i{leaves} represent data while the branches 
 establish some relationship among that data.
@@ -91,30 +91,30 @@ if that @i{tree} is circular.
 @subsection Conses as Lists
 
 A @i{list}
-@IGindex{list}
+@IGindex list
  is a chain of @i{conses} in which the @i{car} of each
 @i{cons} is an @i{element} of the @i{list}, 
 and the @i{cdr} of each @i{cons} is either the next
 link in the chain or a terminating @i{atom}.  
 
 A @i{proper list}
-@IGindex{proper list}
+@IGindex proper list
  is a @i{list} terminated by the @i{empty list}.
 The @i{empty list} is a @i{proper list}, but is not a @i{cons}.
 
 An @i{improper list}
-@IGindex{improper list}
+@IGindex improper list
  is a @i{list} that is not a @i{proper list};
 that is, it is a @i{circular list} or a @i{dotted list}.
 
 A @i{dotted list}
-@IGindex{dotted list}
+@IGindex dotted list
  is a @i{list} that has a terminating @i{atom}
 that is not the @i{empty list}.  A @i{non-nil} @i{atom} by itself
 is not considered to be a @i{list} of any kind---not even a @i{dotted list}.
 
 A @i{circular list}
-@IGindex{circular list}
+@IGindex circular list
  is a chain of @i{conses} that has no termination 
 because some @i{cons} in the chain is the @i{cdr} of a later @i{cons}.
 
@@ -147,7 +147,7 @@ because some @i{cons} in the chain is the @i{cdr} of a later @i{cons}.
 @subsubsection Lists as Association Lists
 
 An @i{association list}
-@IGindex{association list}
+@IGindex association list
  is a @i{list} of @i{conses} 
 representing an association of @i{keys} with @i{values}, 
 where the @i{car} of each @i{cons} is the @i{key} 
@@ -269,24 +269,24 @@ if that @i{list} is @i{circular}.
 @subsubheading  Description::
 
 A @i{list}
-@IGindex{list}
+@IGindex list
  is a chain of @i{conses} in which the @i{car} of each
 @i{cons} is an @i{element} of the @i{list}, and the @i{cdr} of
 each @i{cons} is either the next link in the chain or a terminating
 @i{atom}.
 
 A @i{proper list}
-@IGindex{proper list}
+@IGindex proper list
  is a chain of @i{conses} terminated by 
 the @i{empty list}
-@IGindex{empty list}
+@IGindex empty list
 , @t{()}, which is  itself a @i{proper list}.
 A @i{dotted list}
-@IGindex{dotted list}
+@IGindex dotted list
  is a @i{list} which has a terminating @i{atom} 
 that is not the @i{empty list}.
 A @i{circular list}
-@IGindex{circular list}
+@IGindex circular list
  is a chain of @i{conses} that has no termination
 because some @i{cons} in the chain is the @i{cdr} of a later @i{cons}.
 
diff --git a/gcl/info/chap-15.texi b/gcl/info/chap-15.texi
index 4ee5f2d6e..3f9131992 100644
--- a/gcl/info/chap-15.texi
+++ b/gcl/info/chap-15.texi
@@ -51,7 +51,7 @@ less than the corresponding @i{array} @i{dimension}.
 @subsubsection Array Dimensions
 
 An axis of an @i{array} is called a @i{dimension}
-@IGindex{dimension}
+@IGindex dimension
 .
 
 Each @i{dimension} is a non-negative 
@@ -76,7 +76,7 @@ but there is a minimum requirement on that limit.  See the @i{variable} @b{array
 
 An @i{array} can have any number of @i{dimensions} (including zero).
 The number of @i{dimensions} is called the @i{rank}
-@IGindex{rank}
+@IGindex rank
 .
 
 If the rank of an @i{array} is zero then the @i{array} is said to have
@@ -88,21 +88,21 @@ is then 1; a zero-rank @i{array} therefore has a single element.
 
 An @i{array} of @i{rank} one (@i{i.e.}, a one-dimensional @i{array})
 is called a @i{vector}
-@IGindex{vector}
+@IGindex vector
 .
 
 @node Fill Pointers, Multidimensional Arrays, Vectors, Array Elements
 @subsubsection Fill Pointers
 
 A @i{fill pointer}
-@IGindex{fill pointer}
+@IGindex fill pointer
  is a non-negative @i{integer} no
 larger than the total number of @i{elements} in a @i{vector}.
 Not all @i{vectors} have @i{fill pointers}.
 See the @i{functions} @b{make-array} and @b{adjust-array}.
 
 An @i{element} of a @i{vector} is said to be @i{active}
-@IGindex{active}
+@IGindex active
  if it has
 an index that is greater than or equal to zero, 
 but less than the @i{fill pointer} (if any).
@@ -175,7 +175,7 @@ creation, @i{access}, and information operations.
 @subsubsection Array Upgrading
 
 The @i{upgraded array element type}
-@IGindex{upgraded array element type}
+@IGindex upgraded array element type
  of a @i{type} T_1
 is a @i{type} T_2 that is a @i{supertype} of T_1
 and that is used instead of T_1 whenever T_1
@@ -185,11 +185,11 @@ for object creation or type discrimination.
 During creation of an @i{array},
 the @i{element type} that was requested 
 is called the @i{expressed array element type}
-@IGindex{expressed array element type}
+@IGindex expressed array element type
 .
 The @i{upgraded array element type} of the @i{expressed array element type}
 becomes the @i{actual array element type}
-@IGindex{actual array element type}
+@IGindex actual array element type
  of the @i{array} that is created.
 
 @i{Type} @i{upgrading} implies a movement upwards in the type hierarchy lattice.
@@ -218,7 +218,7 @@ will @i{upgrade} a given @i{type}.
 @b{character} or a @i{subtype} of @b{character}
 
 are called @i{strings}
-@IGindex{string}
+@IGindex string
 . 
 @i{Strings} are of @i{type} @b{string}.
 Figure 15--2 lists some @i{defined names} related to @i{strings}.
@@ -250,7 +250,7 @@ see instead @ref{Strings}.
 
 @i{Vectors} whose @i{elements} are restricted to @i{type}
 @b{bit} are called @i{bit vectors}
-@IGindex{bit vector}
+@IGindex bit vector
 .
 @i{Bit vectors} are of @i{type} @b{bit-vector}.
 Figure 15--3 lists some @i{defined names} for operations on @i{bit arrays}.
diff --git a/gcl/info/chap-17.texi b/gcl/info/chap-17.texi
index dd1c74d20..43b2560b5 100644
--- a/gcl/info/chap-17.texi
+++ b/gcl/info/chap-17.texi
@@ -15,7 +15,7 @@
 @c including concept-sequences
 
 A @i{sequence}
-@IGindex{sequence}
+@IGindex sequence
  is an ordered collection of @i{elements},
 implemented as either a @i{vector} or a @i{list}.
 
@@ -25,7 +25,7 @@ of @i{types} that are @i{subtypes} of @b{sequence}
 (@i{e.g.}, @b{list}, @b{make-list}, @b{mapcar}, and @b{vector}).
 
 A @i{sequence function}
-@IGindex{sequence function}
+@IGindex sequence function
  is a @i{function} 
    defined by this specification
 or added as an extension by the @i{implementation} 
@@ -131,7 +131,7 @@ is a @i{designator} for a  @i{function}
 of two @i{arguments}, O and Z_i.
 An E_i is said (or, sometimes, an O and an E_i are said)
 to @i{satisfy the test}
-@IGindex{satisfy the test}
+@IGindex satisfy the test
 
 if this @t{:test} @i{function} returns a @i{generalized boolean} representing 
 @i{true}.
@@ -141,7 +141,7 @@ is @i{designator} for a @i{function}
 of two @i{arguments}, O and Z_i.
 An E_i is said (or, sometimes, an O and an E_i are said)
 to @i{satisfy the test}
-@IGindex{satisfy the test}
+@IGindex satisfy the test
 
 if this @t{:test-not} @i{function}
 returns a @i{generalized boolean} representing @i{false}.
@@ -226,7 +226,7 @@ and @i{yielding} an @i{object} Z_i to be used for comparison.
 ends in ``@t{-if}'' accept a first @i{argument} that is a @i{designator} for a 
 @i{function} of one @i{argument}, Z_i.
 An E_i is said to @i{satisfy the test}
-@IGindex{satisfy the test}
+@IGindex satisfy the test
  if this @t{:test} @i{function}
 returns a @i{generalized boolean} representing @i{true}.
 
@@ -234,7 +234,7 @@ returns a @i{generalized boolean} representing @i{true}.
 ends in ``@t{-if-not}'' accept a first @i{argument} that is a @i{designator} for a 
 @i{function} of one @i{argument}, Z_i.
 An E_i is said to @i{satisfy the test}
-@IGindex{satisfy the test}
+@IGindex satisfy the test
  if this @t{:test} @i{function}
 returns a @i{generalized boolean} representing @i{false}.
 
diff --git a/gcl/info/chap-19.texi b/gcl/info/chap-19.texi
index 284e4f6d4..7ffa6ee2e 100644
--- a/gcl/info/chap-19.texi
+++ b/gcl/info/chap-19.texi
@@ -37,7 +37,7 @@ as @i{namestrings} and as @i{pathnames}.
 @subsection Namestrings as Filenames
 
 A @i{namestring}
-@IGindex{namestring}
+@IGindex namestring
  is a @i{string} that represents a @i{filename}.
 
 In general, the syntax of @i{namestrings} involves the use of 
@@ -62,7 +62,7 @@ or @b{parse-namestring}.
 @subsection Pathnames as Filenames
 
 @i{Pathnames}
-@IGindex{pathname}
+@IGindex pathname
  are structured @i{objects} that can represent,
 in an @i{implementation-independent} way,
 the @i{filenames} that are used natively by an underlying @i{file system}.
@@ -317,7 +317,7 @@ relating to @i{pathnames} that permit a @t{:case} argument:
 
 For the functions in @i{Figure~19--2},
 a value of @t{:local}
-@c @IKindex{local}
+@c @IKindex local
  for the @t{:case} argument 
 (the default for these functions)
 indicates that the functions should receive and yield @i{strings} in component values
@@ -334,7 +334,7 @@ the @i{strings} will be translated to that @i{case}.
 
 For the functions in @i{Figure~19--2},
 a value of @t{:common}
-@c @IKindex{common}
+@c @IKindex common
  for the @t{:case} argument 
 that these @i{functions} should receive 
 and yield @i{strings} in component values according to the following conventions:
@@ -372,7 +372,7 @@ rather than an actual @b{nil} in some @i{implementations}.
 @subsubsection :WILD as a Component Value
 
 If @t{:wild}
-@c @IKindex{wild}
+@c @IKindex wild
  is the value of a @i{pathname} component,
 that component is considered to be a wildcard, which matches anything.
 
@@ -391,13 +391,13 @@ of a @i{pathname}, the effect is equivalent to specifying the list
 @t{(:absolute :wild-inferiors)},
 or the same as @t{(:absolute :wild)} in a @i{file system} that does not support
 @t{:wild-inferiors}.
-@c @IKindex{wild-inferiors}
+@c @IKindex wild-inferiors
 
 @node ->UNSPECIFIC as a Component Value, Relation between component values NIL and ->UNSPECIFIC, ->WILD as a Component Value, Interpreting Pathname Component Values
 @subsubsection :UNSPECIFIC as a Component Value
 
 If @t{:unspecific}
-@c @IKindex{unspecific}
+@c @IKindex unspecific
  is the value of a @i{pathname} component,
 the component is considered to be ``absent'' 
 or to ``have no meaning''
@@ -511,10 +511,10 @@ The directory might be a @i{string},
 The directory can be a @i{list} of @i{strings} and @i{symbols}. 
 
 The @i{car} of the @i{list} is one of the symbols @t{:absolute}
-@c @IKindex{absolute}
+@c @IKindex absolute
  or 
 @t{:relative}
-@c @IKindex{relative}
+@c @IKindex relative
 , meaning:
 
 @table @asis
@@ -554,13 +554,13 @@ to a file system for which it does not make sense
 signals an error of @i{type} @b{file-error}.
 For example, Unix does not support @t{:wild-inferiors} in most implementations.
 
-@c @IKindex{wild}
+@c @IKindex wild
 
-@c @IKindex{wild-inferiors}
+@c @IKindex wild-inferiors
 
-@c @IKindex{up}
+@c @IKindex up
 
-@c @IKindex{back}
+@c @IKindex back
 
 @format
 @group
diff --git a/gcl/info/chap-2.texi b/gcl/info/chap-2.texi
index fa99abfc2..08b391169 100644
--- a/gcl/info/chap-2.texi
+++ b/gcl/info/chap-2.texi
@@ -20,7 +20,7 @@ interprets them as a printed representation of an @i{object},
 constructs that @i{object}, and returns it.
 
 The syntax described by this chapter is called the @i{standard syntax}
-@IGindex{standard syntax}
+@IGindex standard syntax
 .
 Operations are provided by @r{Common Lisp} so that
 various aspects of the syntax information represented by a @i{readtable} 
@@ -40,7 +40,7 @@ the syntax used throughout this document is @i{standard syntax}.
 
 Syntax information for use by the @i{Lisp reader} is embodied in an
 @i{object} called a @i{readtable}
-@IGindex{readtable}
+@IGindex readtable
 .  Among other things, 
 the @i{readtable} contains the association between @i{characters} 
 and @i{syntax types}.
@@ -74,7 +74,7 @@ Figure 2--1 lists some @i{defined names} that are applicable to
 
 Several @i{readtables} describing different syntaxes can exist,
 but at any given time only one, called the @i{current readtable}
-@IGindex{current readtable}
+@IGindex current readtable
 , 
 affects the way in which @i{expressions}_2 are parsed 
 into @i{objects} by the @i{Lisp reader}.
@@ -87,7 +87,7 @@ To make a different @i{readtable} become the @i{current readtable},
 @subsubsection The Standard Readtable
 
 The @i{standard readtable}
-@IGindex{standard readtable}
+@IGindex standard readtable
  conforms to @i{standard syntax}.
 The consequences are undefined if an attempt is made
 to modify the @i{standard readtable}.
@@ -100,7 +100,7 @@ The @i{readtable case} of the @i{standard readtable} is @t{:upcase}.
 @subsubsection The Initial Readtable
 
 The @i{initial readtable}
-@IGindex{initial readtable}
+@IGindex initial readtable
  is
 the @i{readtable} that is the @i{current readtable}
 at the time when the @i{Lisp image} starts.
@@ -135,7 +135,7 @@ the @i{variables} that influence the behavior of the @i{Lisp reader}.
 All @i{implementations} must support a @i{character} @i{repertoire}
 called @b{standard-char}; @i{characters} that are members of that
 @i{repertoire} are called @i{standard characters}
-@IGindex{standard character}
+@IGindex standard character
 .
 
 The @b{standard-char} @i{repertoire} consists of
@@ -261,7 +261,7 @@ for a more general user-written parser.
 When the @i{Lisp reader} is invoked, it reads a single character from 
 the @i{input} @i{stream} and dispatches according to the
 @i{syntax type}
-@IGindex{syntax type}
+@IGindex syntax type
  of that @i{character}.
 Every @i{character} that can appear in the @i{input} @i{stream}
 is of one of the @i{syntax types} shown in @i{Figure~2--6}.
@@ -357,7 +357,7 @@ The following are descriptions of each kind of @i{syntax type}.
 
 @i{Constituent} @i{characters} are used in @i{tokens}.
 A @i{token}
-@IGindex{token}
+@IGindex token
  is a representation of a @i{number} or a @i{symbol}.  
 Examples of @i{constituent} @i{characters} are letters and digits.
 
@@ -473,7 +473,7 @@ is performed.
 
 A @i{macro character} has an associated @i{function}
 called a @i{reader macro function}
-@IGindex{reader macro function}
+@IGindex reader macro function
  that implements its specialized parsing behavior.
 An association of this kind can be established or modified under control of
 a @i{conforming program} by using 
@@ -494,7 +494,7 @@ A @i{macro character} is either @i{terminating} or @i{non-terminating}.
 The difference between @i{terminating} and @i{non-terminating} @i{macro characters} 
 lies in what happens when such characters occur in the middle of a @i{token}.  
 If a @i{non-terminating}
-@IGindex{non-terminating}
+@IGindex non-terminating
  @i{macro character} occurs in the middle of a @i{token},
 the @i{function} associated 
 with the @i{non-terminating} @i{macro character} is not called,
@@ -502,7 +502,7 @@ and the
 @i{non-terminating} @i{macro character} does not terminate the @i{token}'s name; it
 becomes part of the name as if the @i{macro character} were really a constituent
 character.  A @i{terminating}
-@IGindex{terminating}
+@IGindex terminating
  @i{macro character} terminates any @i{token},
 and its associated @i{reader macro function}
 is called no matter where the @i{character} appears.
@@ -536,7 +536,7 @@ see @ref{Standard Macro Characters}.
 @subsubsection Multiple Escape Characters
 
 A pair of @i{multiple escape}
-@IGindex{multiple escape}
+@IGindex multiple escape
  @i{characters}
 is used to indicate that an enclosed sequence of characters,
 including possible @i{macro characters} and @i{whitespace}_2 @i{characters},
@@ -565,7 +565,7 @@ in @i{standard syntax}.
 @subsubsection Single Escape Character
 
 A @i{single escape}
-@IGindex{single escape}
+@IGindex single escape
  is used to indicate that 
 the next @i{character} is to be treated as 
 an @i{alphabetic}_2 @i{character}
diff --git a/gcl/info/chap-20.texi b/gcl/info/chap-20.texi
index f72adf7d7..e9b591100 100644
--- a/gcl/info/chap-20.texi
+++ b/gcl/info/chap-20.texi
@@ -16,13 +16,13 @@
 This section describes the @r{Common Lisp} interface to file systems.
 The model used by this interface assumes 
      that @i{files}
-@IGindex{file}
+@IGindex file
  are named by @i{filenames}
-@IGindex{filename}
+@IGindex filename
 ,
      that a @i{filename} can be represented by a @i{pathname} @i{object}, 
  and that given a @i{pathname} a @i{stream}
-@IGindex{stream}
+@IGindex stream
  can be constructed 
       that connects to a @i{file} whose @i{filename} it represents.
 
@@ -56,10 +56,10 @@ that are applicable to @i{files} and directories.
 @subsection Coercion of Streams to Pathnames
 
 A @i{stream associated with a file}
-@IGindex{stream associated with a file}
+@IGindex stream associated with a file
  is either a @i{file stream}
 or a @i{synonym stream} whose target is a @i{stream associated with a file}
-@IGindex{stream associated with a file}
+@IGindex stream associated with a file
 .
 Such streams can be used as @i{pathname designators}.
 
@@ -128,7 +128,7 @@ Even where multiple names are possible, most @i{file systems} have a convention
 for generating a canonical @i{filename} in such situations.  Such a canonical
 @i{filename} (or the @i{pathname} representing such a @i{filename}) is
 called a @i{truename}
-@IGindex{truename}
+@IGindex truename
 .  
 
 The @i{truename} of a @i{file} may differ from other @i{filenames}
diff --git a/gcl/info/chap-21.texi b/gcl/info/chap-21.texi
index 377dea520..99ce2f548 100644
--- a/gcl/info/chap-21.texi
+++ b/gcl/info/chap-21.texi
@@ -24,19 +24,19 @@
 @subsection Introduction to Streams
 
 A @i{stream}
-@IGindex{stream}
+@IGindex stream
  is an @i{object} that can be used with an input or output
 function to identify an appropriate source or sink of @i{characters} or 
 @i{bytes} for that operation.
 A @i{character}
-@IGindex{character}
+@IGindex character
  @i{stream}
-@IGindex{stream}
+@IGindex stream
  is a source or sink of @i{characters}.
 A @i{binary}
-@IGindex{binary}
+@IGindex binary
  @i{stream}
-@IGindex{stream}
+@IGindex stream
  is a source or sink of @i{bytes}.
 
 Some operations may be performed on any kind of @i{stream};
@@ -79,14 +79,14 @@ and @b{read-byte} is only defined for @i{binary} @i{streams}.
 
 A @i{stream}, whether a @i{character} @i{stream} or a @i{binary} @i{stream},
 can be an @i{input}
-@IGindex{input}
+@IGindex input
  @i{stream}
-@IGindex{stream}
+@IGindex stream
  (source of data),
        an @i{output}
-@IGindex{output}
+@IGindex output
  @i{stream}
-@IGindex{stream}
+@IGindex stream
  (sink for data),
        both, 
     or (@i{e.g.}, when ``@t{:direction :probe}'' is given to @b{open}) neither.
@@ -129,9 +129,9 @@ Figure 21--3 shows @i{operators} relating to
 
 A @i{stream} that is both an @i{input} @i{stream} and an @i{output} @i{stream}
 is called a @i{bidirectional}
-@IGindex{bidirectional}
+@IGindex bidirectional
  @i{stream}
-@IGindex{stream}
+@IGindex stream
 .
 See the @i{functions} @b{input-stream-p} and @b{output-stream-p}.
 
@@ -155,9 +155,9 @@ shows a list of @i{operators} that relate specificaly to
 @subsubsection Open and Closed Streams
 
 @i{Streams} are either @i{open}
-@IGindex{open}
+@IGindex open
  or @i{closed}
-@IGindex{closed}
+@IGindex closed
 .  
 
 Except as explicitly specified otherwise,
@@ -182,7 +182,7 @@ and for that same @i{stream} once it has been @i{closed}.
 @subsubsection Interactive Streams
 
 An @i{interactive stream}
-@IGindex{interactive stream}
+@IGindex interactive stream
  is one on which it makes sense to perform
 interactive querying.
 
@@ -223,7 +223,7 @@ so interactive queries to such streams might not have the expected effect.
 @subsubsection File Streams
 
 Some @i{streams}, called @i{file streams}
-@IGindex{file stream}
+@IGindex file stream
 , provide access to @i{files}.
 An @i{object} of @i{class} @b{file-stream} is used to represent a @i{file stream}.
 
@@ -276,7 +276,7 @@ about these subclasses.
 
 @i{Variables} whose @i{values} must be @i{streams} are sometimes called 
 @i{stream variables}
-@IGindex{stream variable}
+@IGindex stream variable
 .
 
 Certain @i{stream variables} are defined by this specification 
diff --git a/gcl/info/chap-22.texi b/gcl/info/chap-22.texi
index 9fc34c6e7..61c86b49d 100644
--- a/gcl/info/chap-22.texi
+++ b/gcl/info/chap-22.texi
@@ -79,7 +79,7 @@ program-readable.
 
 A number of option variables, called
 @i{printer control variables}
-@IGindex{printer control variable}
+@IGindex printer control variable
 ,
 are provided to permit control of individual aspects of the 
 printed representation of @i{objects}.
@@ -133,7 +133,7 @@ is that the @i{Lisp printer} behaves as if @b{*print-escape*} were also @i{true}
 For notational convenience, we say that 
 if the value of either @b{*print-readably*} or @b{*print-escape*} is @i{true}, 
 then @i{printer escaping}
-@IGindex{printer escaping}
+@IGindex printer escaping
  is ``enabled'';
 and we say that
 if the values of both @b{*print-readably*} and @b{*print-escape*} are @i{false}, 
@@ -205,7 +205,7 @@ see @ref{Syntax of an Integer}.
 @node Printing Ratios, Printing Floats, Printing Integers, Default Print-Object Methods
 @subsubsection Printing Ratios
 
-@IRindex{ratio}
+@IRindex ratio
 
 @i{Ratios} are printed as follows:
 the absolute value of the numerator is printed, as for an @i{integer};
@@ -224,7 +224,7 @@ see @ref{Syntax of a Ratio}.
 @node Printing Floats, Printing Complexes, Printing Ratios, Default Print-Object Methods
 @subsubsection Printing Floats
 
-@IRindex{float}
+@IRindex float
 
 If the magnitude of the @i{float} is either zero or between 10^@r{-3} (inclusive)
 and 10^7 (exclusive), it is printed as the integer part of the number,
@@ -263,7 +263,7 @@ see @ref{Syntax of a Float}.
 @node Printing Complexes, Note about Printing Numbers, Printing Floats, Default Print-Object Methods
 @subsubsection Printing Complexes
 
-@IRindex{complex}
+@IRindex complex
 
 A @i{complex} is printed as @t{#C}, an open parenthesis,
 the printed representation of its real part, a space,
@@ -929,7 +929,7 @@ see @ref{Sharpsign Dot}.
 @subsection Pretty Printer Concepts
 
 The facilities provided by the @i{pretty printer}
-@IGindex{pretty printer}
+@IGindex pretty printer
  permit
 @i{programs} to redefine the way in which @i{code} is displayed, 
 and allow the full power of @i{pretty printing} to be applied 
@@ -971,13 +971,13 @@ The actions of the @i{pretty printer} when a piece of output is too
 large to fit in the space available can be precisely controlled.
 Three concepts underlie 
 the way these operations work---@i{logical blocks}
-@IGindex{logical blocks}
+@IGindex logical blocks
 ,
 			        @i{conditional newlines}
-@IGindex{conditional newlines}
+@IGindex conditional newlines
 ,
 			    and @i{sections}
-@IGindex{sections}
+@IGindex sections
 .
 Before proceeding further, it is important to define these terms.
 
@@ -1080,7 +1080,7 @@ The @b{formatter} @i{macro} provides the efficiency of using a @i{compiled funct
 to do that same printing but without losing the textual compactness of @i{format strings}.
 
 A @i{format control}
-@IGindex{format control}
+@IGindex format control
  is either a @i{format string} or a @i{function}
 that was returned by the the @b{formatter} @i{macro}.
 
@@ -1088,7 +1088,7 @@ that was returned by the the @b{formatter} @i{macro}.
 @subsubsection Pretty Print Dispatch Tables
 
 A @i{pprint dispatch table}
-@IGindex{pprint dispatch table}
+@IGindex pprint dispatch table
  is a mapping from keys to pairs of values.  
 Each key is a @i{type specifier}.  
 The values associated with a key are
@@ -1099,7 +1099,7 @@ of keys being tested by @b{equal}.
 
 When @b{*print-pretty*} is @i{true}, 
 the @i{current pprint dispatch table}
-@IGindex{current pprint dispatch table}
+@IGindex current pprint dispatch table
  (in @b{*print-pprint-dispatch*})
 controls how @i{objects} are printed.
 The information in this table takes precedence over
@@ -1170,7 +1170,7 @@ If the line width available is greater than or equal to @t{26}, then all of the
 output appears on one line.  If the line width available is reduced to @t{25},
 a line break is inserted at the 
 linear-style conditional newline
-@ITindex{linear-style conditional newline}
+@ITindex linear-style conditional newline
 
 before the
 @i{expression} @t{(* x y)}, producing the output shown.  The
@@ -1197,7 +1197,7 @@ If @b{*print-miser-width*} were greater than or equal to 14, the example
 output above would have been as follows, because all indentation changes 
 are ignored in miser mode and line breaks are inserted at 
 miser-style conditional newlines.
-@ITindex{miser-style conditional newline}
+@ITindex miser-style conditional newline
 
 @example
  (DEFUN
@@ -1234,7 +1234,7 @@ be produced no matter whether the list corresponding to the pair has one element
 two elements, or (being malformed) has more than two elements.)   
 A space and a 
 fill-style conditional newline
-@ITindex{fill-style conditional newline}
+@ITindex fill-style conditional newline
 
 are placed after
 each pair except the last.  The loop at the end of the topmost
@@ -3698,7 +3698,7 @@ This @i{parameter} is treated as follows:
 @item @t{:linear}  
 This specifies a
 ``linear-style'' @i{conditional newline}.
-@ITindex{linear-style conditional newline}
+@ITindex linear-style conditional newline
 
 A line break is inserted 
 if and only if the immediately containing @i{section}
@@ -3710,7 +3710,7 @@ or at none of them.
 @item @t{:miser}  
 This specifies a 
 ``miser-style'' @i{conditional newline}.
-@ITindex{miser-style conditional newline}
+@ITindex miser-style conditional newline
 
 A line break is inserted
 if and only if the immediately containing @i{section}
@@ -3727,7 +3727,7 @@ is less than or equal to
 @item @t{:fill}  
 This specifies a
 ``fill-style'' @i{conditional newline}.
-@ITindex{fill-style conditional newline}
+@ITindex fill-style conditional newline
 
 A line break is inserted if and only if
 either (a) the following @i{section} cannot be printed 
@@ -3746,7 +3746,7 @@ fill-style conditional newlines act like linear-style conditional newlines.
 @item @t{:mandatory}  
 This specifies a
 ``mandatory-style'' @i{conditional newline}.
-@ITindex{mandatory-style conditional newline}
+@ITindex mandatory-style conditional newline
 
 A line break is always inserted.
 This implies that  none of the containing @i{sections}
@@ -4511,7 +4511,7 @@ The initial @i{value} of @b{*print-radix*} is @i{false}.
 @b{*print-base*} and @b{*print-radix*} control the printing
 of @i{rationals}.
 The @i{value} of @b{*print-base*} is called the @i{current output base}
-@IGindex{current output base}
+@IGindex current output base
 .
 
 The @i{value} of @b{*print-base*} is the @i{radix} in which the printer 
diff --git a/gcl/info/chap-23.texi b/gcl/info/chap-23.texi
index 9e887004f..b71f73cf9 100644
--- a/gcl/info/chap-23.texi
+++ b/gcl/info/chap-23.texi
@@ -1174,7 +1174,7 @@ Controls the interpretation of tokens by @b{read} as being
 @i{integers} or @i{ratios}.  
 
 The @i{value} of @b{*read-base*}, called the @i{current input base}
-@IGindex{current input base}
+@IGindex current input base
 ,
 is the radix in which @i{integers} and
 @i{ratios} are to be read by the @i{Lisp reader}.
diff --git a/gcl/info/chap-24.texi b/gcl/info/chap-24.texi
index 89a930a01..4e2952f1c 100644
--- a/gcl/info/chap-24.texi
+++ b/gcl/info/chap-24.texi
@@ -24,20 +24,20 @@
 To @b{load} a @i{file} is to treat its contents as @i{code}
 and @i{execute} that @i{code}.
 The @i{file} may contain @i{source code}
-@IGindex{source code}
+@IGindex source code
  or @i{compiled code}
-@IGindex{compiled code}
+@IGindex compiled code
 .
 
 A @i{file} containing @i{source code} is called a @i{source file}
-@IGindex{source file}
+@IGindex source file
 .
 @i{Loading} a @i{source file} is accomplished essentially 
 by sequentially @i{reading}_2 the @i{forms} in the file,
 @i{evaluating} each immediately after it is @i{read}.
 
 A @i{file} containing @i{compiled code} is called a @i{compiled file}
-@IGindex{compiled file}
+@IGindex compiled file
 .
 @i{Loading} a @i{compiled file} is similar to @i{loading} a @i{source file},
 except that the @i{file} does not contain text but rather an
@@ -53,7 +53,7 @@ is @i{implementation-dependent}.
 @subsection Features
 
 A @i{feature}
-@IGindex{feature}
+@IGindex feature
  is an aspect or attribute
      of @r{Common Lisp}, 
      of the @i{implementation},
@@ -61,12 +61,12 @@ A @i{feature}
 A @i{feature} is identified by a @i{symbol}.
 
 A @i{feature} is said to be @i{present}
-@IGindex{present}
+@IGindex present
  in a @i{Lisp image}
 if and only if the @i{symbol} naming it is an @i{element} of the
 @i{list} held by the @i{variable} @b{*features*}, 
 which is called the @i{features list}
-@IGindex{features list}
+@IGindex features list
 .
 
 @menu
@@ -78,7 +78,7 @@ which is called the @i{features list}
 @subsubsection Feature Expressions
 
 Boolean combinations of @i{features}, called @i{feature expressions}
-@IGindex{feature expression}
+@IGindex feature expression
 ,
 are used by the @t{#+} and @t{#-} @i{reader macros} in order to
 direct conditional @i{reading} of @i{expressions} by the @i{Lisp reader}.
diff --git a/gcl/info/chap-25.texi b/gcl/info/chap-25.texi
index ad6d16634..4852ad6ab 100644
--- a/gcl/info/chap-25.texi
+++ b/gcl/info/chap-25.texi
@@ -141,7 +141,7 @@ Figure 25--4 shows @i{defined names} relating to @i{time}.
 @subsubsection Decoded Time
 
 A @i{decoded time}
-@IGindex{decoded time}
+@IGindex decoded time
  is an ordered series of nine values that, taken together,
 represent a point in calendar time (ignoring @i{leap seconds}):
 
@@ -206,7 +206,7 @@ Figure 25--5 shows @i{defined names} relating to @i{decoded time}.
 @subsubsection Universal Time
 
 @i{Universal time}
-@IGindex{universal time}
+@IGindex universal time
  is an @i{absolute} @i{time} represented as a
 single non-negative @i{integer}---the number of seconds since
 midnight, January 1, 1900 GMT (ignoring @i{leap seconds}).
@@ -237,7 +237,7 @@ times before the base time of midnight, January 1, 1900 GMT cannot be processed
 @subsubsection Internal Time
 
 @i{Internal time}
-@IGindex{internal time}
+@IGindex internal time
  represents time as a single @i{integer},
 in terms of an @i{implementation-dependent} unit called an @i{internal time unit}.
 Relative time is measured as a number of these units.
diff --git a/gcl/info/chap-26.texi b/gcl/info/chap-26.texi
index a055b6558..3950b6958 100644
--- a/gcl/info/chap-26.texi
+++ b/gcl/info/chap-26.texi
@@ -122,7 +122,7 @@ transitive verb
 @subheading @b{Non-alphabetic}
 @table @asis
 
-@IGindex{()}
+@IGindex ()
 @item @b{()}
  pronounced 'nil , @i{n.}
   an alternative notation for writing the symbol~@b{nil}, used to emphasize
@@ -132,7 +132,7 @@ transitive verb
 @subheading @b{A}
 @table @asis
 
-@IGindex{absolute}
+@IGindex absolute
 @item @b{absolute}
  @i{adj.}
   1. (of a @i{time})
@@ -141,7 +141,7 @@ transitive verb
      representing a specific position in a directory hierarchy.
   See @i{relative}.
 
-@IGindex{access}
+@IGindex access
 @item @b{access}
  @i{n.}, @i{v.t.}
   1. @i{v.t.} (a @i{place}, or @i{array})
@@ -151,12 +151,12 @@ transitive verb
   2. @i{n.} (of a @i{place})
      an attempt to @i{access}_1 the @i{value} of the @i{place}.
 
-@IGindex{accessibility}
+@IGindex accessibility
 @item @b{accessibility}
  @i{n.}
   the state of being @i{accessible}.
 
-@IGindex{accessible}
+@IGindex accessible
 @item @b{accessible}
  @i{adj.} 
   1. (of an @i{object}) capable of being @i{referenced}.
@@ -169,13 +169,13 @@ transitive verb
      when that @i{package} is current, regardless of whether the
      @i{symbol} is @i{present} in that @i{package} or is @i{inherited}.
 
-@IGindex{accessor}
+@IGindex accessor
 @item @b{accessor}
  @i{n.}
   an @i{operator} that performs an @i{access}.
   See @i{reader} and @i{writer}.
 
-@IGindex{active}
+@IGindex active
 @item @b{active}
  @i{adj.} 
   1. (of a @i{handler}, a @i{restart}, or a @i{catch tag})
@@ -186,19 +186,19 @@ transitive verb
      For an @i{array} that has no @i{fill pointer},
      all @i{elements} are considered @i{active}.
 
-@IGindex{actual adjustability}
+@IGindex actual adjustability
 @item @b{actual adjustability}
  @i{n.} (of an @i{array})
   a @i{generalized boolean} that is associated with the @i{array}, 
   representing whether the @i{array} is @i{actually adjustable}.
   See also @i{expressed adjustability} and @b{adjustable-array-p}.
 
-@IGindex{actual argument}
+@IGindex actual argument
 @item @b{actual argument}
  @i{n.} @i{Trad.} 
   an @i{argument}.
 
-@IGindex{actual array element type}
+@IGindex actual array element type
 @item @b{actual array element type}
  @i{n.} (of an @i{array})
   the @i{type} for which the @i{array} is actually specialized,
@@ -206,19 +206,19 @@ transitive verb
   the @i{expressed array element type} of the @i{array}.
   See the @i{function} @b{array-element-type}.
 
-@IGindex{actual complex part type}
+@IGindex actual complex part type
 @item @b{actual complex part type}
  @i{n.} (of a @i{complex})
   the @i{type} in which the real and imaginary parts of the @i{complex}
   are actually represented, which is the @i{upgraded complex part type} of the
   @i{expressed complex part type} of the @i{complex}.
 
-@IGindex{actual parameter}
+@IGindex actual parameter
 @item @b{actual parameter}
  @i{n.} @i{Trad.} 
   an @i{argument}.
 
-@IGindex{actually adjustable}
+@IGindex actually adjustable
 @item @b{actually adjustable}
  @i{adj.} (of an @i{array})
   such that @b{adjust-array} can adjust its characteristics
@@ -228,29 +228,29 @@ transitive verb
   only if either that @i{array} is known to have been @i{expressly adjustable}
   or if that @i{array} has been explicitly tested by @b{adjustable-array-p}.
 
-@IGindex{adjustability}
+@IGindex adjustability
 @item @b{adjustability}
  @i{n.} (of an @i{array})
   1. @i{expressed adjustability}.
   2. @i{actual adjustability}.
 
-@IGindex{adjustable}
+@IGindex adjustable
 @item @b{adjustable}
  @i{adj.} (of an @i{array})
   1. @i{expressly adjustable}.
   2. @i{actually adjustable}.
 
-@IGindex{after method}
+@IGindex after method
 @item @b{after method}
  @i{n.}
   a @i{method} having the @i{qualifier} @t{:after}.
 
-@IGindex{alist}
+@IGindex alist
 @item @b{alist}
  pronounced '\=a ,list , @i{n.} 
   an @i{association list}.
 
-@IGindex{alphabetic}
+@IGindex alphabetic
 @item @b{alphabetic}
  @i{n.}, @i{adj.}
   1. @i{adj.} (of a @i{character})
@@ -268,25 +268,25 @@ transitive verb
 	  and that has the @i{constituent trait} @i{alphabetic}_@{2a@}.
 	See @i{Figure~2--8}.
 
-@IGindex{alphanumeric}
+@IGindex alphanumeric
 @item @b{alphanumeric}
  @i{adj.} (of a @i{character})
   being either an @i{alphabetic}_1 @i{character}
             or a @i{numeric} @i{character}.
 
-@IGindex{ampersand}
+@IGindex ampersand
 @item @b{ampersand}
  @i{n.}
   the @i{standard character} that is called ``ampersand'' (@t{&}).
   See @i{Figure~2--5}.
 
-@IGindex{anonymous}
+@IGindex anonymous
 @item @b{anonymous}
  @i{adj.} 
   1. (of a @i{class} or @i{function}) having no @i{name}
   2. (of a @i{restart}) having a @i{name} of @b{nil}.
 
-@IGindex{apparently uninterned}
+@IGindex apparently uninterned
 @item @b{apparently uninterned}
  @i{adj.} 
   having a @i{home package} of @b{nil}.  (An @i{apparently uninterned} @i{symbol} 
@@ -295,20 +295,20 @@ transitive verb
   from their @i{home package} also have a @i{home package} of @b{nil},
   even though they might still be @i{interned} in some other @i{package}.)
 
-@IGindex{applicable}
+@IGindex applicable
 @item @b{applicable}
  @i{adj.}
   1. (of a @i{handler}) being an @i{applicable handler}.
   2. (of a @i{method}) being an @i{applicable method}.
   3. (of a @i{restart}) being an @i{applicable restart}.
 
-@IGindex{applicable handler}
+@IGindex applicable handler
 @item @b{applicable handler}
  @i{n.} (for a @i{condition} being @i{signaled})
   an @i{active} @i{handler} for which the associated type contains the
   @i{condition}.
 
-@IGindex{applicable method}
+@IGindex applicable method
 @item @b{applicable method}
  @i{n.} (of a @i{generic function}
 				     called with @i{arguments})
@@ -317,7 +317,7 @@ transitive verb
   of that @i{method}.
   See @ref{Selecting the Applicable Methods}.
 
-@IGindex{applicable restart}
+@IGindex applicable restart
 @item @b{applicable restart}
  @i{n.}
   1. (for a @i{condition})
@@ -327,7 +327,7 @@ transitive verb
      an @i{active} @i{handler} for which the associated test returns 
      @i{true} when given @b{nil} as an argument.
 
-@IGindex{apply}
+@IGindex apply
 @item @b{apply}
  @i{v.t.} (a @i{function} to a @i{list})
   to @i{call} the @i{function} with arguments that are the @i{elements}
@@ -335,7 +335,7 @@ transitive verb
   ``Applying the function @b{+} to a list of integers returns
 	    the sum of the elements of that list.''
 
-@IGindex{argument}
+@IGindex argument
 @item @b{argument}
  @i{n.}
   1. (of a @i{function}) an @i{object} which is offered as data
@@ -343,31 +343,31 @@ transitive verb
 
   2. (of a @i{format control}) a @i{format argument}.
 
-@IGindex{argument evaluation order}
+@IGindex argument evaluation order
 @item @b{argument evaluation order}
  @i{n.} 
   the order in which @i{arguments} are evaluated in a function call.
   ``The argument evaluation order for Common Lisp is left to right.''
   See @ref{Evaluation}.
 
-@IGindex{argument precedence order}
+@IGindex argument precedence order
 @item @b{argument precedence order}
  @i{n.}
   the order in which the @i{arguments} to a @i{generic function} are
   considered when sorting the @i{applicable methods} into precedence order.
 
-@IGindex{around method}
+@IGindex around method
 @item @b{around method}
  @i{n.}
   a @i{method} having the @i{qualifier} @t{:around}.
 
-@IGindex{array}
+@IGindex array
 @item @b{array}
  @i{n.}
   an @i{object} of @i{type} @b{array}, which serves as a container for other
   @i{objects} arranged in a Cartesian coordinate system.
 
-@IGindex{array element type}
+@IGindex array element type
 @item @b{array element type}
  @i{n.} (of an @i{array})
   1. a @i{type} associated with the @i{array}, 
@@ -376,21 +376,21 @@ transitive verb
   2. the @i{actual array element type} of the @i{array}.
   3. the @i{expressed array element type} of the @i{array}.
 
-@IGindex{array total size}
+@IGindex array total size
 @item @b{array total size}
  @i{n.} 
   the total number of @i{elements} in an @i{array}, computed by taking 
   the product of the @i{dimensions} of the @i{array}.
   (The size of a zero-dimensional @i{array} is therefore one.)
 
-@IGindex{assign}
+@IGindex assign
 @item @b{assign}
  @i{v.t.} (a @i{variable})
   to change the @i{value} of the @i{variable} in a @i{binding}
   that has already been @i{established}.
   See the @i{special operator} @b{setq}.
 
-@IGindex{association list}
+@IGindex association list
 @item @b{association list}
  @i{n.} 
   a @i{list} of @i{conses} representing an association 
@@ -398,7 +398,7 @@ transitive verb
   @i{cons} is the @i{key} and the @i{cdr} is the
   @i{value} associated with that @i{key}.
 
-@IGindex{asterisk}
+@IGindex asterisk
 @item @b{asterisk}
  @i{n.}
   the @i{standard character} that is variously called
@@ -406,7 +406,7 @@ transitive verb
    or ``star'' (@t{*}).
   See @i{Figure~2--5}.
 
-@IGindex{at-sign}
+@IGindex at-sign
 @item @b{at-sign}
  @i{n.}
   the @i{standard character} that is variously called
@@ -414,26 +414,26 @@ transitive verb
   or ``at sign'' (@t{@@}).
   See @i{Figure~2--5}.
 
-@IGindex{atom}
+@IGindex atom
 @item @b{atom}
  @i{n.}
   any @i{object} that is not a @i{cons}.
   ``A vector is an atom.''
 
-@IGindex{atomic}
+@IGindex atomic
 @item @b{atomic}
  @i{adj.} 
   being an @i{atom}.
   ``The number 3, the symbol @t{foo}, and @b{nil} are atomic.''
 
-@IGindex{atomic type specifier}
+@IGindex atomic type specifier
 @item @b{atomic type specifier}
  @i{n.}
   a @i{type specifier} that is @i{atomic}.
   For every @i{atomic type specifier}, @i{x}, there is an equivalent
   @i{compound type specifier} with no arguments supplied, @t{(@i{x})}.
 
-@IGindex{attribute}
+@IGindex attribute
 @item @b{attribute}
  @i{n.} (of a @i{character})
   a program-visible aspect of the @i{character}.
@@ -445,7 +445,7 @@ transitive verb
             might make font information an attribute of a character,
             while others might represent font information separately from characters.''
 
-@IGindex{aux variable}
+@IGindex aux variable
 @item @b{aux variable}
  @i{n.}
   a @i{variable} that occurs in the part of a @i{lambda list}
@@ -453,7 +453,7 @@ transitive verb
   introduced by a @i{lambda-list}, @i{aux variables} are not 
   @i{parameters}.
 
-@IGindex{auxiliary method}
+@IGindex auxiliary method
 @item @b{auxiliary method}
  @i{n.}
   a member of one of two sets of @i{methods} 
@@ -467,7 +467,7 @@ transitive verb
 @subheading @b{B}
 @table @asis
 
-@IGindex{backquote}
+@IGindex backquote
 @item @b{backquote}
  @i{n.}
   the @i{standard character} that is variously called
@@ -475,7 +475,7 @@ transitive verb
     or ``backquote'' (@t{`}).
   See @i{Figure~2--5}.
 
-@IGindex{backslash}
+@IGindex backslash
 @item @b{backslash}
  @i{n.}
   the @i{standard character} that is variously called
@@ -483,29 +483,29 @@ transitive verb
     or ``backslash'' (@t{\}).
   See @i{Figure~2--5}.
 
-@IGindex{base character}
+@IGindex base character
 @item @b{base character}
  @i{n.}
   a @i{character}
 
   of @i{type} @b{base-char}.
 
-@IGindex{base string}
+@IGindex base string
 @item @b{base string}
  @i{n.}
   a @i{string} of @i{type} @b{base-string}.
 
-@IGindex{before method}
+@IGindex before method
 @item @b{before method}
  @i{n.}
   a @i{method} having the @i{qualifier} @t{:before}.
 
-@IGindex{bidirectional}
+@IGindex bidirectional
 @item @b{bidirectional}
  @i{adj.} (of a @i{stream})
   being both an @i{input} @i{stream} and an @i{output} @i{stream}.
 
-@IGindex{binary}
+@IGindex binary
 @item @b{binary}
  @i{adj.} 
   1. (of a @i{stream})
@@ -520,12 +520,12 @@ transitive verb
       of the @i{file}, or whether any given @i{character} @i{file} can be
       treated as a @i{binary} @i{file}.)
 
-@IGindex{bind}
+@IGindex bind
 @item @b{bind}
  @i{v.t.} (a @i{variable})
   to establish a @i{binding} for the @i{variable}.
 
-@IGindex{binding}
+@IGindex binding
 @item @b{binding}
  @i{n.} 
   an association between a @i{name} and that which the @i{name} 
@@ -533,25 +533,25 @@ transitive verb
   ``A lexical binding is a lexical association between a 
             name and its value.''
 
-@IGindex{bit}
+@IGindex bit
 @item @b{bit}
  @i{n.} 
   an @i{object} of @i{type} @b{bit}; 
   that is, the @i{integer} @t{0} or the @i{integer} @t{1}.
 
-@IGindex{bit array}
+@IGindex bit array
 @item @b{bit array}
  @i{n.}
   a specialized @i{array} that is of @i{type} @t{(array bit)},
   and whose elements are of @i{type} @b{bit}.
 
-@IGindex{bit vector}
+@IGindex bit vector
 @item @b{bit vector}
  @i{n.} 
   a specialized @i{vector} that is of @i{type} @b{bit-vector},
   and whose elements are of @i{type} @b{bit}.
 
-@IGindex{bit-wise logical operation specifier}
+@IGindex bit-wise logical operation specifier
 @item @b{bit-wise logical operation specifier}
  @i{n.} 
   an @i{object} which names one of the sixteen possible bit-wise logical
@@ -567,7 +567,7 @@ transitive verb
   @b{boole-andc1},   @b{boole-andc2},
   @b{boole-orc1}, or @b{boole-orc2}.
 
-@IGindex{block}
+@IGindex block
 @item @b{block}
  @i{n.}
   a named lexical @i{exit point}, 
@@ -577,7 +577,7 @@ transitive verb
   to which control and values may be transfered by 
   using a @b{return-from} @i{form} with the name of the @i{block}.
 
-@IGindex{block tag}
+@IGindex block tag
 @item @b{block tag}
  @i{n.} 
   the @i{symbol} that, within the @i{lexical scope} 
@@ -585,14 +585,14 @@ transitive verb
   @i{established} by that @b{block} @i{form}.
   See @b{return} or @b{return-from}.
 
-@IGindex{boa lambda list}
+@IGindex boa lambda list
 @item @b{boa lambda list}
  @i{n.}
   a @i{lambda list} that is syntactically like an @i{ordinary lambda list},
   but that is processed in ``@b{b}y @b{o}rder of @b{a}rgument'' style.
   See @ref{Boa Lambda Lists}.
 
-@IGindex{body parameter}
+@IGindex body parameter
 @item @b{body parameter}
  @i{n.}
   a @i{parameter} available in certain @i{lambda lists}
@@ -605,7 +605,7 @@ transitive verb
   slightly differently than @i{forms} for @i{operators} which were 
   defined using @i{rest parameters}.)
 
-@IGindex{boolean}
+@IGindex boolean
 @item @b{boolean}
  @i{n.} 
   an @i{object} of @i{type} @b{boolean};
@@ -614,13 +614,13 @@ transitive verb
     or the symbol~@b{nil} (representing @i{false}).
   See @i{generalized boolean}.
 
-@IGindex{boolean equivalent}
+@IGindex boolean equivalent
 @item @b{boolean equivalent}
  @i{n.} (of an @i{object} O_1)
   any @i{object} O_2 that has the same truth value as O_1
   when both O_1 and O_2 are viewed as @i{generalized booleans}.
 
-@IGindex{bound}
+@IGindex bound
 @item @b{bound}
  @i{adj.}, @i{v.t.} 
   1. @i{adj.} having an associated denotation in a @i{binding}.
@@ -633,7 +633,7 @@ transitive verb
                the @b{princ} function.''
   3. @i{v.t.} the past tense of @i{bind}.
 
-@IGindex{bound declaration}
+@IGindex bound declaration
 @item @b{bound declaration}
  @i{n.} 
   a @i{declaration} that refers to or is associated with a @i{variable}
@@ -649,7 +649,7 @@ transitive verb
    the @i{declaration} is what the @i{scope} of the 
    @i{binding} would have been if it were lexical rather than dynamic.)
 
-@IGindex{bounded}
+@IGindex bounded
 @item @b{bounded}
  @i{adj.} (of a @i{sequence} S,
 			      by an ordered pair
@@ -658,7 +658,7 @@ transitive verb
   beginning with (and including) the one indexed by i_@{start@} and
   continuing up to (but not including) the one indexed by i_@{end@}.
 
-@IGindex{bounding index}
+@IGindex bounding index
 @item @b{bounding index}
  @i{n.} (of a @i{sequence} with @i{length} n)
   either of a conceptual pair of @i{integers}, i_@{start@} and i_@{end@},
@@ -666,7 +666,7 @@ transitive verb
   such that 0 <= i_@{start@} <= i_@{end@} <= n, and which therefore delimit
   a subrange of the @i{sequence} @i{bounded} by i_@{start@} and i_@{end@}.
 
-@IGindex{bounding index designator}
+@IGindex bounding index designator
 @item @b{bounding index designator}
  (for a @i{sequence})
   one of two @i{objects} that, taken together as an ordered pair, 
@@ -677,7 +677,7 @@ transitive verb
        (denoting the @i{length} of the @i{sequence}),
    or two @i{integers} (each denoting themselves).
 
-@IGindex{break loop}
+@IGindex break loop
 @item @b{break loop}
  @i{n.}
   A variant of the normal @i{Lisp read-eval-print loop} that is recursively
@@ -686,22 +686,22 @@ transitive verb
   provides the ability to exit in such a way as to continue the suspended computation.
   See the @i{function} @b{break}.
 
-@IGindex{broadcast stream}
+@IGindex broadcast stream
 @item @b{broadcast stream}
  @i{n.}
   an @i{output} @i{stream} of @i{type} @b{broadcast-stream}.
 
-@IGindex{built-in class}
+@IGindex built-in class
 @item @b{built-in class}
  @i{n.}
   a @i{class} that is a @i{generalized instance} of @i{class} @b{built-in-class}.
 
-@IGindex{built-in type}
+@IGindex built-in type
 @item @b{built-in type}
  @i{n.}
    one of the @i{types} in @i{Figure~4--2}.
 
-@IGindex{byte}
+@IGindex byte
 @item @b{byte}
  @i{n.}
   1. adjacent bits within an @i{integer}.
@@ -711,7 +711,7 @@ transitive verb
      (The specific range can vary from point to point in the program;
       see the @i{functions} @b{open} and @b{write-byte}.)
 
-@IGindex{byte specifier}
+@IGindex byte specifier
 @item @b{byte specifier}
  @i{n.}
   An @i{object} of @i{implementation-dependent} nature 
@@ -723,12 +723,12 @@ transitive verb
 @subheading @b{C}
 @table @asis
 
-@IGindex{cadr}
+@IGindex cadr
 @item @b{cadr}
  pronounced 'ka ,de r , @i{n.} (of an @i{object})
   the @i{car} of the @i{cdr} of that @i{object}.
 
-@IGindex{call}
+@IGindex call
 @item @b{call}
  @i{v.t.}, @i{n.} 
   1. @i{v.t.} (a @i{function} with @i{arguments})
@@ -740,7 +740,7 @@ transitive verb
                @t{5} and @t{1} yields a value of @t{6}.''
   2. @i{n.} a @i{situation} in which a @i{function} is called.
 
-@IGindex{captured initialization form}
+@IGindex captured initialization form
 @item @b{captured initialization form}
  @i{n.}
   an @i{initialization form} along with the @i{lexical environment}
@@ -750,7 +750,7 @@ transitive verb
             the captured initialization form for the slot that was specified
             in the @b{defclass} form for the new class.''
 
-@IGindex{car}
+@IGindex car
 @item @b{car}
  @i{n.}
   1. a. (of a @i{cons}) 
@@ -764,7 +764,7 @@ transitive verb
   2. the @i{object} that is held in the @i{car}_1.
      ``The function @b{car} returns the car of a cons.''
 
-@IGindex{case}
+@IGindex case
 @item @b{case}
  @i{n.} (of a @i{character})
   the property of being either @i{uppercase} or @i{lowercase}.
@@ -773,13 +773,13 @@ transitive verb
 	    but the character @t{#\$} has no case.''
   See @ref{Characters With Case} and the @i{function} @b{both-case-p}.
 
-@IGindex{case sensitivity mode}
+@IGindex case sensitivity mode
 @item @b{case sensitivity mode}
  @i{n.}
   one of the @i{symbols}
   @t{:upcase}, @t{:downcase}, @t{:preserve}, or @t{:invert}.
 
-@IGindex{catch}
+@IGindex catch
 @item @b{catch}
  @i{n.}
   an @i{exit point} which is @i{established} by a @b{catch}
@@ -787,7 +787,7 @@ transitive verb
   which is named by a @i{catch tag},
   and to which control and @i{values} may be @i{thrown}.
 
-@IGindex{catch tag}
+@IGindex catch tag
 @item @b{catch tag}
  @i{n.}
   an @i{object} which names an @i{active} @i{catch}.
@@ -795,14 +795,14 @@ transitive verb
    it is only possible to @i{throw} to the innermost such @i{catch}
    because the outer one is @i{shadowed}_2.)
 
-@IGindex{cddr}
+@IGindex cddr
 @item @b{cddr}
  pronounced 'kud e ,de r  or
 	      pronounced 'ke ,dude r , @i{n.} 
 	      (of an @i{object})
   the @i{cdr} of the @i{cdr} of that @i{object}.
 
-@IGindex{cdr}
+@IGindex cdr
 @item @b{cdr}
  pronounced 'ku ,de r , @i{n.} 
   1. a. (of a @i{cons}) 
@@ -816,7 +816,7 @@ transitive verb
   2. the @i{object} that is held in the @i{cdr}_1.
      ``The function @b{cdr} returns the cdr of a cons.''
 
-@IGindex{cell}
+@IGindex cell
 @item @b{cell}
  @i{n.} @i{Trad.} (of an @i{object})
   a conceptual @i{slot} of that @i{object}.
@@ -824,7 +824,7 @@ transitive verb
   of a @i{symbol} are sometimes referred to as its @i{value cell}
   and @i{function cell}, respectively.
 
-@IGindex{character}
+@IGindex character
 @item @b{character}
  @i{n.}, @i{adj.}
   1. @i{n.} an @i{object} of @i{type} @b{character}; that is,
@@ -842,14 +842,14 @@ transitive verb
          of the @i{file}, or whether any given @i{binary} @i{file} can be
          treated as a @i{character} @i{file}.)
 
-@IGindex{character code}
+@IGindex character code
 @item @b{character code}
  @i{n.}
   1. one of possibly several @i{attributes} of a @i{character}.
   2. a non-negative @i{integer} less than the @i{value} of @b{char-code-limit}
      that is suitable for use as a @i{character code}_1.
 
-@IGindex{character designator}
+@IGindex character designator
 @item @b{character designator}
  @i{n.}
   a @i{designator} for a @i{character}; that is,
@@ -860,7 +860,7 @@ transitive verb
 
     or a @i{character} (denoting itself).
 
-@IGindex{circular}
+@IGindex circular
 @item @b{circular}
  @i{adj.}
   1. (of a @i{list}) a @i{circular list}.
@@ -869,13 +869,13 @@ transitive verb
      or @i{subexpression} (as appropriate to the context) 
      that is the @i{object} itself.
 
-@IGindex{circular list}
+@IGindex circular list
 @item @b{circular list}
  @i{n.} 
   a chain of @i{conses} that has no termination because some
  @i{cons} in the chain is the @i{cdr} of a later @i{cons}.
 
-@IGindex{class}
+@IGindex class
 @item @b{class}
  @i{n.}
   1. an @i{object} that uniquely determines the structure and behavior of 
@@ -899,7 +899,7 @@ transitive verb
       ``its @i{class} is the @i{class} named @t{foo}''---in both
       cases, a @i{class} @i{object} (not a @i{symbol}) is denoted.)
 
-@IGindex{class designator}
+@IGindex class designator
 @item @b{class designator}
  @i{n.}
   a @i{designator} for a @i{class}; that is,
@@ -909,7 +909,7 @@ transitive verb
 		        see the @i{function} @b{find-class})
     or a @i{class} (denoting itself).
 
-@IGindex{class precedence list}
+@IGindex class precedence list
 @item @b{class precedence list}
  @i{n.}
   a unique total ordering on a @i{class}
@@ -918,7 +918,7 @@ transitive verb
   @i{superclasses}.
   For detailed information, see @ref{Determining the Class Precedence List}.
 
-@IGindex{close}
+@IGindex close
 @item @b{close}
  @i{v.t.} (a @i{stream})
   to terminate usage of the @i{stream} as a source or sink of data,
@@ -926,7 +926,7 @@ transitive verb
   and to free any external resources which might have been locked by the
  @i{stream} when it was opened.
 
-@IGindex{closed}
+@IGindex closed
 @item @b{closed}
  @i{adj.} (of a @i{stream})
   having been @i{closed} (see @i{close}).
@@ -934,12 +934,12 @@ transitive verb
   are not valid on @i{closed} @i{streams}.
   See @ref{File Operations on Open and Closed Streams}.
 
-@IGindex{closure}
+@IGindex closure
 @item @b{closure}
  @i{n.}
   a @i{lexical closure}.
 
-@IGindex{coalesce}
+@IGindex coalesce
 @item @b{coalesce}
  @i{v.t.} (@i{literal objects} that are @i{similar})
   to consolidate the identity of those @i{objects},
@@ -947,7 +947,7 @@ transitive verb
   @i{object}.
   See @ref{Compiler Terminology}.
 
-@IGindex{code}
+@IGindex code
 @item @b{code}
  @i{n.}
   1. @i{Trad.} 
@@ -963,7 +963,7 @@ transitive verb
   2. (of a @i{character})
      a @i{character code}.
 
-@IGindex{coerce}
+@IGindex coerce
 @item @b{coerce}
  @i{v.t.} (an @i{object} to a @i{type})
   to produce an @i{object} from the given @i{object},
@@ -976,24 +976,24 @@ transitive verb
   the result is a @i{rational} 
   rather than a @i{complex}---see @ref{Rule of Canonical Representation for Complex Rationals}.
 
-@IGindex{colon}
+@IGindex colon
 @item @b{colon}
  @i{n.}
   the @i{standard character} that is called ``colon'' (@t{:}).
   See @i{Figure~2--5}.
 
-@IGindex{comma}
+@IGindex comma
 @item @b{comma}
  @i{n.}
   the @i{standard character} that is called ``comma'' (@t{,}).
   See @i{Figure~2--5}.
 
-@IGindex{compilation}
+@IGindex compilation
 @item @b{compilation}
  @i{n.}
   the process of @i{compiling} @i{code} by the @i{compiler}.
 
-@IGindex{compilation environment}
+@IGindex compilation environment
 @item @b{compilation environment}
  @i{n.} 
   1. An @i{environment} that represents information known by the
@@ -1005,13 +1005,13 @@ transitive verb
      (which supplies a @i{value} for any @b{&environment} @i{parameter}
       in the @i{macro function}'s definition).
 
-@IGindex{compilation unit}
+@IGindex compilation unit
 @item @b{compilation unit}
  @i{n.}
   an interval during which a single unit of compilation is occurring.
   See the @i{macro} @b{with-compilation-unit}.
 
-@IGindex{compile}
+@IGindex compile
 @item @b{compile}
  @i{v.t.} 
   1. (@i{code})
@@ -1028,31 +1028,31 @@ transitive verb
      to produce a @i{compiled file} from a @i{source file}.
      See the @i{function} @b{compile-file}.
 
-@IGindex{compile time}
+@IGindex compile time
 @item @b{compile time}
  @i{n.} 
   the duration of time that the @i{compiler} is processing @i{source code}.
 
-@IGindex{compile-time definition}
+@IGindex compile-time definition
 @item @b{compile-time definition}
  @i{n.}
   a definition in the @i{compilation environment}.
 
-@IGindex{compiled code}
+@IGindex compiled code
 @item @b{compiled code}
  @i{n.}
   1. @i{compiled functions}.
   2. @i{code} that represents @i{compiled functions},
      such as the contents of a @i{compiled file}.
 
-@IGindex{compiled file}
+@IGindex compiled file
 @item @b{compiled file}
  @i{n.}
   a @i{file} which represents the results of @i{compiling} the 
   @i{forms} which appeared in a corresponding @i{source file},
   and which can be @i{loaded}.  See the @i{function} @b{compile-file}.
 
-@IGindex{compiled function}
+@IGindex compiled function
 @item @b{compiled function}
  @i{n.}
   an @i{object} of @i{type} @b{compiled-function}, which is a @i{function}
@@ -1060,7 +1060,7 @@ transitive verb
   must be expanded at run time, and which contains no unresolved references 
   to @i{load time values}.
 
-@IGindex{compiler}
+@IGindex compiler
 @item @b{compiler}
  @i{n.}
   a facility that is part of Lisp and that translates @i{code}
@@ -1069,7 +1069,7 @@ transitive verb
   The functions @b{compile} and @b{compile-file}
   permit programs to invoke the @i{compiler}.
 
-@IGindex{compiler macro}
+@IGindex compiler macro
 @item @b{compiler macro}
  @i{n.}
   an auxiliary macro definition for a globally defined @i{function}
@@ -1081,14 +1081,14 @@ transitive verb
   provides an alternate implementation strategy for some existing syntax
   or functionality.)
 
-@IGindex{compiler macro expansion}
+@IGindex compiler macro expansion
 @item @b{compiler macro expansion}
  @i{n.}
   1. the process of translating a @i{form} into another @i{form}
      by a @i{compiler macro}.
   2. the @i{form} resulting from this process.
 
-@IGindex{compiler macro form}
+@IGindex compiler macro form
 @item @b{compiler macro form}
  @i{n.}
   a @i{function form} or @i{macro form} whose @i{operator}
@@ -1097,7 +1097,7 @@ transitive verb
   @b{function} @i{form} whose @i{argument} is the @i{name}
   of a @i{function} that has a definition as a @i{compiler macro}.
 
-@IGindex{compiler macro function}
+@IGindex compiler macro function
 @item @b{compiler macro function}
  @i{n.} 
   a @i{function} of two arguments, a @i{form} and an 
@@ -1106,12 +1106,12 @@ transitive verb
   argument @i{form} or else @b{nil}, indicating that the original @i{form}
   should not be replaced.  See @ref{Compiler Macros}.
 
-@IGindex{complex}
+@IGindex complex
 @item @b{complex}
  @i{n.}
   an @i{object} of @i{type} @b{complex}.
 
-@IGindex{complex float}
+@IGindex complex float
 @item @b{complex float}
  @i{n.}
   an @i{object} of @i{type} @b{complex} which has a @i{complex part type}
@@ -1119,7 +1119,7 @@ transitive verb
   A @i{complex float} is a @i{complex},
   but it is not a @i{float}.
 
-@IGindex{complex part type}
+@IGindex complex part type
 @item @b{complex part type}
  @i{n.} (of a @i{complex})
   1. the @i{type} which is used to represent both the real part 
@@ -1127,7 +1127,7 @@ transitive verb
   2. the @i{actual complex part type} of the @i{complex}.
   3. the @i{expressed complex part type} of the @i{complex}.
 
-@IGindex{complex rational}
+@IGindex complex rational
 @item @b{complex rational}
  @i{n.}
   an @i{object} of @i{type} @b{complex} which has a @i{complex part type}
@@ -1137,7 +1137,7 @@ transitive verb
   number is always represented by @r{Common Lisp} as an @i{object} of @i{type} @b{rational};
   see @ref{Rule of Canonical Representation for Complex Rationals}.
 
-@IGindex{complex single float}
+@IGindex complex single float
 @item @b{complex single float}
  @i{n.}
   an @i{object} of @i{type} @b{complex} which has a @i{complex part type}
@@ -1145,13 +1145,13 @@ transitive verb
   A @i{complex single float} is a @i{complex},
   but it is not a @i{single float}.
 
-@IGindex{composite stream}
+@IGindex composite stream
 @item @b{composite stream}
  @i{n.}
   a @i{stream} that is composed of one or more other @i{streams}.
   ``@b{make-synonym-stream} creates a composite stream.''
 
-@IGindex{compound form}
+@IGindex compound form
 @item @b{compound form}
  @i{n.}
   a @i{non-empty} @i{list} which is a @i{form}:
@@ -1160,26 +1160,26 @@ transitive verb
   a @i{macro form}, 
   or a @i{function form}.
 
-@IGindex{compound type specifier}
+@IGindex compound type specifier
 @item @b{compound type specifier}
  @i{n.}
   a @i{type specifier} that is a @i{cons};
   @i{i.e.}, a @i{type specifier} that is not an @i{atomic type specifier}.
   ``@t{(vector single-float)} is a compound type specifier.''
 
-@IGindex{concatenated stream}
+@IGindex concatenated stream
 @item @b{concatenated stream}
  @i{n.}
   an @i{input} @i{stream} of @i{type} @b{concatenated-stream}.
 
-@IGindex{condition}
+@IGindex condition
 @item @b{condition}
  @i{n.}
   1. an @i{object} which represents a @i{situation}---usually,
      but not necessarily, during @i{signaling}.
   2. an @i{object} of @i{type} @b{condition}.
 
-@IGindex{condition designator}
+@IGindex condition designator
 @item @b{condition designator}
  @i{n.}
   one or more @i{objects} that, taken together, 
@@ -1187,7 +1187,7 @@ transitive verb
 	     or a @i{condition} @i{object} to be implicitly created.
   For details, see @ref{Condition Designators}.
 
-@IGindex{condition handler}
+@IGindex condition handler
 @item @b{condition handler}
  @i{n.}
   a @i{function} that might be invoked by the act of @i{signaling},
@@ -1195,14 +1195,14 @@ transitive verb
   and that is permitted to @i{handle} the @i{condition} 
   or to @i{decline}.  See @ref{Signaling}.
 
-@IGindex{condition reporter}
+@IGindex condition reporter
 @item @b{condition reporter}
  @i{n.}
   a @i{function} that describes how a @i{condition} is to be printed
   when the @i{Lisp printer} is invoked while @b{*print-escape*} 
   is @i{false}.  See @ref{Printing Conditions}.
 
-@IGindex{conditional newline}
+@IGindex conditional newline
 @item @b{conditional newline}
  @i{n.}
   a point in output where a @i{newline} might be inserted at the
@@ -1214,18 +1214,18 @@ transitive verb
      and ``mandatory-style.''
   See the @i{function} @b{pprint-newline} and @ref{Dynamic Control of the Arrangement of Output}.
 
-@IGindex{conformance}
+@IGindex conformance
 @item @b{conformance}
  @i{n.}
   a state achieved by proper and complete adherence to the requirements
   of this specification.  See @ref{Conformance}.
 
-@IGindex{conforming code}
+@IGindex conforming code
 @item @b{conforming code}
  @i{n.}
   @i{code} that is all of part of a @i{conforming program}.
 
-@IGindex{conforming implementation}
+@IGindex conforming implementation
 @item @b{conforming implementation}
  @i{n.}
   an @i{implementation}, used to emphasize complete and correct
@@ -1239,25 +1239,25 @@ transitive verb
   provided that no extension interferes with the correct function of any
   @i{conforming program}.
 
-@IGindex{conforming processor}
+@IGindex conforming processor
 @item @b{conforming processor}
  @i{n.} @i{ANSI} 
   a @i{conforming implementation}.
 
-@IGindex{conforming program}
+@IGindex conforming program
 @item @b{conforming program}
  @i{n.}
   a @i{program}, used to emphasize the fact that the @i{program}
   depends for its correctness only upon documented aspects of @r{Common Lisp}, and
   can therefore be expected to run correctly in any @i{conforming implementation}.
 
-@IGindex{congruent}
+@IGindex congruent
 @item @b{congruent}
  @i{n.} 
   conforming to the rules of @i{lambda list} congruency, as detailed in 
   @ref{Congruent Lambda-lists for all Methods of a Generic Function}.
 
-@IGindex{cons}
+@IGindex cons
 @item @b{cons}
  @i{n.}@i{v.} 
   1. @i{n.} a compound data @i{object} having two components called the
@@ -1265,7 +1265,7 @@ transitive verb
   2. @i{v.} to create such an @i{object}.
   3. @i{v.} @i{Idiom.} to create any @i{object}, or to allocate storage.
 
-@IGindex{constant}
+@IGindex constant
 @item @b{constant}
  @i{n.}
   1. a @i{constant form}.
@@ -1273,7 +1273,7 @@ transitive verb
   3. a @i{constant object}.
   4. a @i{self-evaluating object}.
 
-@IGindex{constant form}
+@IGindex constant form
 @item @b{constant form}
  @i{n.}
   any @i{form}
@@ -1289,7 +1289,7 @@ transitive verb
   ``A @b{car} form in which the argument is a
             @b{quote} form is a constant form.''
 
-@IGindex{constant object}
+@IGindex constant object
 @item @b{constant object}
  @i{n.}
   an @i{object} that is constrained (@i{e.g.}, by its context in a @i{program}
@@ -1297,7 +1297,7 @@ transitive verb
   ``A literal object that has been processed by @b{compile-file}
 	    is a constant object.''
 
-@IGindex{constant variable}
+@IGindex constant variable
 @item @b{constant variable}
  @i{n.}
   a @i{variable}, the @i{value} of which can never change;
@@ -1305,7 +1305,7 @@ transitive verb
   ``The symbols @b{t}, @b{nil}, @t{:direction}, and
             @b{most-positive-fixnum} are constant variables.''
 
-@IGindex{constituent}
+@IGindex constituent
 @item @b{constituent}
  @i{n.}, @i{adj.}
   1. a. @i{n.} the @i{syntax type} of a @i{character} that is part of a @i{token}.
@@ -1317,13 +1317,13 @@ transitive verb
      one of possibly several @i{objects} that collectively comprise
      the source or sink of that @i{stream}.
 
-@IGindex{constituent trait}
+@IGindex constituent trait
 @item @b{constituent trait}
  @i{n.} (of a @i{character})
   one of several classifications of a @i{constituent} @i{character}
   in a @i{readtable}.  See @ref{Constituent Characters}.
 
-@IGindex{constructed stream}
+@IGindex constructed stream
 @item @b{constructed stream}
  @i{n.} 
   a @i{stream} whose source or sink is a Lisp @i{object}.
@@ -1331,7 +1331,7 @@ transitive verb
   @i{composite streams} are considered @i{constructed streams}.
   ``A string stream is a constructed stream.''
 
-@IGindex{contagion}
+@IGindex contagion
 @item @b{contagion}
  @i{n.}
   a process whereby operations on @i{objects} of differing @i{types}
@@ -1340,19 +1340,19 @@ transitive verb
   @i{type} over the @i{types} of the other @i{arguments}.
   See @ref{Contagion in Numeric Operations}.
 
-@IGindex{continuable}
+@IGindex continuable
 @item @b{continuable}
  @i{n.} (of an @i{error})
   an @i{error} that is @i{correctable} by the @t{continue} restart.
 
-@IGindex{control form}
+@IGindex control form
 @item @b{control form}
  @i{n.}
   1. a @i{form} that establishes one or more places to which control
      can be transferred.
   2. a @i{form} that transfers control.
 
-@IGindex{copy}
+@IGindex copy
 @item @b{copy}
  @i{n.}
   1. (of a @i{cons} C)
@@ -1388,7 +1388,7 @@ transitive verb
    given @i{list}'' or ``copy of the @i{list} @i{x}'' imply the
    second definition.)
 
-@IGindex{correctable}
+@IGindex correctable
 @item @b{correctable}
  @i{adj.} (of an @i{error})
   1. (by a @i{restart} other than @b{abort} 
@@ -1411,46 +1411,46 @@ transitive verb
 	       if any of the imported symbols has the same name as
 	        some distinct symbol already accessible in the package.''
 
-@IGindex{current input base}
+@IGindex current input base
 @item @b{current input base}
  @i{n.} (in a @i{dynamic environment})
   the @i{radix} that is the @i{value} of @b{*read-base*} in that @i{environment}, 
   and that is the default @i{radix} employed by the @i{Lisp reader}
   and its related @i{functions}.
 
-@IGindex{current logical block}
+@IGindex current logical block
 @item @b{current logical block}
  @i{n.}
   the context of the innermost lexically enclosing use of @b{pprint-logical-block}.
 
-@IGindex{current output base}
+@IGindex current output base
 @item @b{current output base}
  @i{n.} (in a @i{dynamic environment})
   the @i{radix} that is the @i{value} of @b{*print-base*} in that @i{environment}, 
   and that is the default @i{radix} employed by the @i{Lisp printer}
   and its related @i{functions}.
 
-@IGindex{current package}
+@IGindex current package
 @item @b{current package}
  @i{n.} (in a @i{dynamic environment})
   the @i{package} that is the @i{value} of @b{*package*} in that @i{environment}, 
   and that is the default @i{package} employed by the @i{Lisp reader} 
   and @i{Lisp printer}, and their related @i{functions}.
 
-@IGindex{current pprint dispatch table}
+@IGindex current pprint dispatch table
 @item @b{current pprint dispatch table}
  @i{n.} (in a @i{dynamic environment})
   the @i{pprint dispatch table} that is the @i{value} of @b{*print-pprint-dispatch*}
   in that @i{environment}, and that is the default @i{pprint dispatch table}
   employed by the @i{pretty printer}.
 
-@IGindex{current random state}
+@IGindex current random state
 @item @b{current random state}
  @i{n.} (in a @i{dynamic environment})
   the @i{random state} that is the @i{value} of @b{*random-state*} in that @i{environment}, 
   and that is the default @i{random state} employed by @b{random}.
 
-@IGindex{current readtable}
+@IGindex current readtable
 @item @b{current readtable}
  @i{n.} (in a @i{dynamic environment})
   the @i{readtable} that is the @i{value} of @b{*readtable*} in that @i{environment}, 
@@ -1461,18 +1461,18 @@ transitive verb
 @subheading @b{D}
 @table @asis
 
-@IGindex{data type}
+@IGindex data type
 @item @b{data type}
  @i{n.} @i{Trad.} 
   a @i{type}.
 
-@IGindex{debug I/O}
+@IGindex debug I/O
 @item @b{debug I/O}
  @i{n.} 
   the @i{bidirectional} @i{stream} 
   that is the @i{value} of the @i{variable} @b{*debug-io*}.
 
-@IGindex{debugger}
+@IGindex debugger
 @item @b{debugger}
  @i{n.}
   a facility that allows the @i{user} to handle a @i{condition} interactively.
@@ -1481,12 +1481,12 @@ transitive verb
   and it might perform additional @i{implementation-defined} services
   for the purposes of debugging.
 
-@IGindex{declaration}
+@IGindex declaration
 @item @b{declaration}
  @i{n.}
   a @i{global declaration} or @i{local declaration}.
 
-@IGindex{declaration identifier}
+@IGindex declaration identifier
 @item @b{declaration identifier}
  @i{n.}
   one of the @i{symbols}
@@ -1505,7 +1505,7 @@ transitive verb
      to be a @i{declaration identifier} by using a @b{declaration}
      @i{declaration}.
 
-@IGindex{declaration specifier}
+@IGindex declaration specifier
 @item @b{declaration specifier}
  @i{n.}
   an @i{expression} that can appear at top level of a @b{declare} 
@@ -1514,20 +1514,20 @@ transitive verb
   and which has a @i{cdr} that is data interpreted according to rules
   specific to the @i{declaration identifier}.
 
-@IGindex{declare}
+@IGindex declare
 @item @b{declare}
  @i{v.} 
   to @i{establish} a @i{declaration}.
   See @b{declare}, @b{declaim}, or @b{proclaim}.
 
-@IGindex{decline}
+@IGindex decline
 @item @b{decline}
  @i{v.} (of a @i{handler})
   to return normally without having @i{handled} the @i{condition}
   being @i{signaled}, permitting the signaling process to continue
   as if the @i{handler} had not been present.
 
-@IGindex{decoded time}
+@IGindex decoded time
 @item @b{decoded time}
  @i{n.}
   @i{absolute} @i{time}, represented as an ordered series of
@@ -1536,14 +1536,14 @@ transitive verb
   that @i{leap seconds} are ignored).
   See @ref{Decoded Time}.
 
-@IGindex{default method}
+@IGindex default method
 @item @b{default method}
  @i{n.}
   a @i{method} having no @i{parameter specializers} other than
   the @i{class} @b{t}.  Such a @i{method} is always an @i{applicable method}
   but might be @i{shadowed}_2 by a more specific @i{method}.
 
-@IGindex{defaulted initialization argument list}
+@IGindex defaulted initialization argument list
 @item @b{defaulted initialization argument list}
  @i{n.}
   a @i{list} of alternating initialization argument @i{names} and
@@ -1551,31 +1551,31 @@ transitive verb
   defaulted, used in the protocol for initializing and reinitializing 
   @i{instances} of @i{classes}.
 
-@IGindex{define-method-combination arguments lambda list}
+@IGindex define-method-combination arguments lambda list
 @item @b{define-method-combination arguments lambda list}
  @i{n.}
   a @i{lambda list} used by the @t{:arguments} option 
   to @b{define-method-combination}.
   See @ref{Define-method-combination Arguments Lambda Lists}.
 
-@IGindex{define-modify-macro lambda list}
+@IGindex define-modify-macro lambda list
 @item @b{define-modify-macro lambda list}
  @i{n.}
   a @i{lambda list} used by @b{define-modify-macro}.
   See @ref{Define-modify-macro Lambda Lists}.
 
-@IGindex{defined name}
+@IGindex defined name
 @item @b{defined name}
  @i{n.}
   a @i{symbol} the meaning of which is defined by @r{Common Lisp}.
 
-@IGindex{defining form}
+@IGindex defining form
 @item @b{defining form}
  @i{n.}
   a @i{form} that has the side-effect of @i{establishing} a definition.
   ``@b{defun} and @b{defparameter} are defining forms.''
 
-@IGindex{defsetf lambda list}
+@IGindex defsetf lambda list
 @item @b{defsetf lambda list}
  @i{n.}
   a @i{lambda list} that is like an @i{ordinary lambda list} 
@@ -1583,7 +1583,7 @@ transitive verb
      and that it permits use of @b{&environment}.
   See @ref{Defsetf Lambda Lists}.
 
-@IGindex{deftype lambda list}
+@IGindex deftype lambda list
 @item @b{deftype lambda list}
  @i{n.}
   a @i{lambda list} that is like a @i{macro lambda list}
@@ -1591,7 +1591,7 @@ transitive verb
   and @i{keyword parameters} is the @i{symbol} @b{*} (rather than @b{nil}).
   See @ref{Deftype Lambda Lists}.
 
-@IGindex{denormalized}
+@IGindex denormalized
 @item @b{denormalized}
  @i{adj.}, @i{ANSI}, @i{IEEE} (of a @i{float})
   conforming to the description of ``denormalized'' as described by 
@@ -1603,7 +1603,7 @@ transitive verb
   or @t{0.1e-9}.  By their nature, @i{denormalized} @i{floats} generally
   have less precision than @i{normalized} @i{floats}.
 
-@IGindex{derived type}
+@IGindex derived type
 @item @b{derived type}
  @i{n.}
   a @i{type specifier} which is defined in terms of an expansion into another
@@ -1611,12 +1611,12 @@ transitive verb
   and there may be other @i{implementation-defined} @i{operators}
   which do so as well.
 
-@IGindex{derived type specifier}
+@IGindex derived type specifier
 @item @b{derived type specifier}
  @i{n.}
   a @i{type specifier} for a @i{derived type}.
 
-@IGindex{designator}
+@IGindex designator
 @item @b{designator}
  @i{n.} 
   an @i{object} that denotes another @i{object}.
@@ -1627,7 +1627,7 @@ transitive verb
   that is, that the @i{parameter} is already of the denoted @i{type}.
   For more detailed information, see @ref{Designators}.
 
-@IGindex{destructive}
+@IGindex destructive
 @item @b{destructive}
  @i{adj.} (of an @i{operator})
   capable of modifying some program-visible aspect of one or more
@@ -1635,21 +1635,21 @@ transitive verb
   @i{operator} or that can be obtained directly or indirectly 
   from the @i{global environment} by the @i{operator}.
 
-@IGindex{destructuring lambda list}
+@IGindex destructuring lambda list
 @item @b{destructuring lambda list}
  @i{n.}
   an @i{extended lambda list} used in @b{destructuring-bind} and
   nested within @i{macro lambda lists}.  
   See @ref{Destructuring Lambda Lists}.
 
-@IGindex{different}
+@IGindex different
 @item @b{different}
  @i{adj.} 
   not the @i{same}
   ``The strings @t{"FOO"} and @t{"foo"} are different under
 	    @b{equal} but not under @b{equalp}.''
 
-@IGindex{digit}
+@IGindex digit
 @item @b{digit}
  @i{n.} (in a @i{radix})
   a @i{character} that is among the possible digits (@t{0} to @t{9},
@@ -1657,7 +1657,7 @@ transitive verb
   associated numeric weight as a digit in that @i{radix}.
   See @ref{Digits in a Radix}.
 
-@IGindex{dimension}
+@IGindex dimension
 @item @b{dimension}
  @i{n.}
   1. a non-negative @i{integer} indicating the number of
@@ -1668,7 +1668,7 @@ transitive verb
   2. an axis of an array.
      ``This array has six dimensions.''
 
-@IGindex{direct instance}
+@IGindex direct instance
 @item @b{direct instance}
  @i{n.} (of a @i{class} C)
   an @i{object} whose @i{class} is C itself,
@@ -1677,19 +1677,19 @@ transitive verb
   	    direct instance of the class which is (or is named by)
 	    its first argument.''
 
-@IGindex{direct subclass}
+@IGindex direct subclass
 @item @b{direct subclass}
  @i{n.} (of a @i{class} C_1)
   a @i{class} C_2,
   such that C_1 is a @i{direct superclass} of C_2.
 
-@IGindex{direct superclass}
+@IGindex direct superclass
 @item @b{direct superclass}
  @i{n.} (of a @i{class} C_1)
   a @i{class} C_2 which was explicitly designated as 
   a @i{superclass} of C_1 in the definition of C_1.
 
-@IGindex{disestablish}
+@IGindex disestablish
 @item @b{disestablish}
  @i{v.t.} 
   to withdraw the @i{establishment} of 
@@ -1701,12 +1701,12 @@ transitive verb
       a  @i{restart}, 
    or an @i{environment}.
 
-@IGindex{disjoint}
+@IGindex disjoint
 @item @b{disjoint}
  @i{n.} (of @i{types})
   having no @i{elements} in common.
 
-@IGindex{dispatching macro character}
+@IGindex dispatching macro character
 @item @b{dispatching macro character}
  @i{n.} 
   a @i{macro character} that has an associated table that specifies 
@@ -1714,7 +1714,7 @@ transitive verb
   seen following the @i{dispatching macro character}.
   See the @i{function} @b{make-dispatch-macro-character}.
 
-@IGindex{displaced array}
+@IGindex displaced array
 @item @b{displaced array}
  @i{n.}
   an @i{array} which has no storage of its own, but which is instead
@@ -1723,12 +1723,12 @@ transitive verb
   to @i{access} the @i{displaced array} implicitly references the 
   @i{target} @i{array}.
 
-@IGindex{distinct}
+@IGindex distinct
 @item @b{distinct}
  @i{adj.}
   not @i{identical}.
 
-@IGindex{documentation string}
+@IGindex documentation string
 @item @b{documentation string}
  @i{n.} (in a defining @i{form}) 
   A @i{literal} @i{string} which because of the context in which
@@ -1740,7 +1740,7 @@ transitive verb
   ``The body of code in a @b{defmacro} form can be preceded 
 	    by a documentation string of kind @b{function}.''
 
-@IGindex{dot}
+@IGindex dot
 @item @b{dot}
  @i{n.}
   the @i{standard character} that is variously called
@@ -1749,25 +1749,25 @@ transitive verb
   or ``dot'' (@t{.}).
   See @i{Figure~2--5}.
 
-@IGindex{dotted list}
+@IGindex dotted list
 @item @b{dotted list}
  @i{n.}
   a @i{list} which has a terminating @i{atom} that is not @b{nil}.
   (An @i{atom} by itself is not a @i{dotted list}, however.)
 
-@IGindex{dotted pair}
+@IGindex dotted pair
 @item @b{dotted pair}
  @i{n.}
   1. a @i{cons} whose @i{cdr} is a @i{non-list}.
   2. any @i{cons}, used to emphasize the use of the @i{cons}
      as a symmetric data pair.
 
-@IGindex{double float}
+@IGindex double float
 @item @b{double float}
  @i{n.}
   an @i{object} of @i{type} @b{double-float}.
 
-@IGindex{double-quote}
+@IGindex double-quote
 @item @b{double-quote}
  @i{n.}
   the @i{standard character} that is variously called
@@ -1775,12 +1775,12 @@ transitive verb
    or ``double quote'' (@t{"}).
   See @i{Figure~2--5}.
 
-@IGindex{dynamic binding}
+@IGindex dynamic binding
 @item @b{dynamic binding}
  @i{n.} 
   a @i{binding} in a @i{dynamic environment}.
 
-@IGindex{dynamic environment}
+@IGindex dynamic environment
 @item @b{dynamic environment}
  @i{n.}
   that part of an @i{environment} that contains @i{bindings} 
@@ -1795,7 +1795,7 @@ transitive verb
     and
       @i{restarts}.  
 
-@IGindex{dynamic extent}
+@IGindex dynamic extent
 @item @b{dynamic extent}
  @i{n.}
   an @i{extent} whose duration is bounded by points of 
@@ -1803,12 +1803,12 @@ transitive verb
   of a particular @i{form}.  See @i{indefinite extent}.
   ``Dynamic variable bindings have dynamic extent.''
 
-@IGindex{dynamic scope}
+@IGindex dynamic scope
 @item @b{dynamic scope}
  @i{n.}
   @i{indefinite scope} along with @i{dynamic extent}.
 
-@IGindex{dynamic variable}
+@IGindex dynamic variable
 @item @b{dynamic variable}
  @i{n.}
   a @i{variable} the @i{binding} for which is in the @i{dynamic environment}.
@@ -1818,19 +1818,19 @@ transitive verb
 @subheading @b{E}
 @table @asis
 
-@IGindex{echo stream}
+@IGindex echo stream
 @item @b{echo stream}
  @i{n.}
   a @i{stream} of @i{type} @b{echo-stream}.
 
-@IGindex{effective method}
+@IGindex effective method
 @item @b{effective method}
  @i{n.}
   the combination of @i{applicable methods} that are executed
   when a @i{generic function} is invoked with a particular sequence
   of @i{arguments}.
 
-@IGindex{element}
+@IGindex element
 @item @b{element}
  @i{n.}
   1. (of a @i{list}) 
@@ -1858,13 +1858,13 @@ transitive verb
      or @b{write-byte}, as appropriate to the @i{stream}).
   7. (of a @i{class}) a @i{generalized instance} of the @i{class}.
 
-@IGindex{element type}
+@IGindex element type
 @item @b{element type}
  @i{n.} 
   1. (of an @i{array}) the @i{array element type} of the @i{array}.
   2. (of a @i{stream}) the @i{stream element type} of the @i{stream}.
 
-@IGindex{em}
+@IGindex em
 @item @b{em}
  @i{n.} @i{Trad.} 
   a context-dependent unit of measure commonly used in typesetting,
@@ -1880,19 +1880,19 @@ transitive verb
   @i{ems} wide; in a variable width font, @i{n} @i{ems} is the
   expected upper bound on the width of such a line.
 
-@IGindex{empty list}
+@IGindex empty list
 @item @b{empty list}
  @i{n.}
   the @i{list} containing no @i{elements}. See @i{()}.
 
-@IGindex{empty type}
+@IGindex empty type
 @item @b{empty type}
  @i{n.}
   the @i{type} that contains no @i{elements}, and that is
   a @i{subtype} of all @i{types} (including itself).
   See @i{nil}.
 
-@IGindex{end of file}
+@IGindex end of file
 @item @b{end of file}
  @i{n.}
   1. the point in an @i{input} @i{stream} beyond which there is
@@ -1902,14 +1902,14 @@ transitive verb
   2. a @i{situation} that occurs upon an attempt to obtain data from an
      @i{input stream} that is at the @i{end of file}_1.
 
-@IGindex{environment}
+@IGindex environment
 @item @b{environment}
  @i{n.}
   1. a set of @i{bindings}. See @ref{Introduction to Environments}.
   2. an @i{environment object}.
      ``@b{macroexpand} takes an optional environment argument.''
 
-@IGindex{environment object}
+@IGindex environment object
 @item @b{environment object}
  @i{n.}
   an @i{object} representing a set of @i{lexical bindings},
@@ -1925,7 +1925,7 @@ transitive verb
       is to be expanded.)
      See @ref{Environment Objects}.
 
-@IGindex{environment parameter}
+@IGindex environment parameter
 @item @b{environment parameter}
  @i{n.}
   A @i{parameter} in a @i{defining form} f for which there is no corresponding
@@ -1933,7 +1933,7 @@ transitive verb
   @i{environment} @i{object} which corresponds to the
   @i{lexical environment} in which the @i{defining form} f appeared.
 
-@IGindex{error}
+@IGindex error
 @item @b{error}
  @i{n.}
   1. (only in the phrase ``is an error'')
@@ -1943,19 +1943,19 @@ transitive verb
      See @ref{Error Terminology}.
   3. an @i{object} of @i{type} @b{error}.
 
-@IGindex{error output}
+@IGindex error output
 @item @b{error output}
  @i{n.} 
   the @i{output} @i{stream} which is the @i{value} of the @i{dynamic variable}
   @b{*error-output*}.
 
-@IGindex{escape}
+@IGindex escape
 @item @b{escape}
  @i{n.}, @i{adj.}
   1. @i{n.} a @i{single escape} or a @i{multiple escape}.
   2. @i{adj.} @i{single escape} or @i{multiple escape}.
 
-@IGindex{establish}
+@IGindex establish
 @item @b{establish}
  @i{v.t.} 
   to build or bring into being 
@@ -1968,7 +1968,7 @@ transitive verb
    or an @i{environment}. 
   ``@b{let} establishes lexical bindings.''
 
-@IGindex{evaluate}
+@IGindex evaluate
 @item @b{evaluate}
  @i{v.t.} (a @i{form} or an @i{implicit progn})
   to @i{execute} the @i{code} represented by the @i{form}
@@ -1976,7 +1976,7 @@ transitive verb
   by applying the rules of @i{evaluation},
   returning zero or more values.
 
-@IGindex{evaluation}
+@IGindex evaluation
 @item @b{evaluation}
  @i{n.}
   a model whereby @i{forms} are @i{executed}, returning zero or more values.
@@ -1989,7 +1989,7 @@ transitive verb
   might legitimately have only a compiler and no interpreter, or vice versa.
   See @ref{The Evaluation Model}.
 
-@IGindex{evaluation environment}
+@IGindex evaluation environment
 @item @b{evaluation environment}
  @i{n.}
   a @i{run-time environment} in which macro expanders 
@@ -1997,29 +1997,29 @@ transitive verb
   are evaluated.  All evaluations initiated by the @i{compiler} 
   take place in the @i{evaluation environment}.
 
-@IGindex{execute}
+@IGindex execute
 @item @b{execute}
  @i{v.t.} @i{Trad.} (@i{code})
   to perform the imperative actions represented by the @i{code}.
 
-@IGindex{execution time}
+@IGindex execution time
 @item @b{execution time}
  @i{n.}
   the duration of time that @i{compiled code} is being @i{executed}.
 
-@IGindex{exhaustive partition}
+@IGindex exhaustive partition
 @item @b{exhaustive partition}
  @i{n.} (of a @i{type})
   a set of @i{pairwise} @i{disjoint} @i{types} that form an 
   @i{exhaustive union}.
 
-@IGindex{exhaustive union}
+@IGindex exhaustive union
 @item @b{exhaustive union}
  @i{n.} (of a @i{type})
   a set of @i{subtypes} of the @i{type},
   whose union contains all @i{elements} of that @i{type}.
 
-@IGindex{exit point}
+@IGindex exit point
 @item @b{exit point}
  @i{n.}
   a point in a @i{control form}
@@ -2039,13 +2039,13 @@ transitive verb
 	    operators such as @b{throw}, @b{return-from},
             and @b{go}.''
 
-@IGindex{explicit return}
+@IGindex explicit return
 @item @b{explicit return}
  @i{n.} 
   the act of transferring control (and possibly @i{values}) 
   to a @i{block} by using @b{return-from} (or @b{return}).
 
-@IGindex{explicit use}
+@IGindex explicit use
 @item @b{explicit use}
  @i{n.} (of a @i{variable} V in a @i{form} F)
   a reference to V that is directly apparent in the normal semantics of F;
@@ -2054,7 +2054,7 @@ transitive verb
   References to V exposed by expanding @i{subforms} of F are, however,
   considered to be @i{explicit uses} of V.
 
-@IGindex{exponent marker}
+@IGindex exponent marker
 @item @b{exponent marker}
  @i{n.}
   a character that is used in the textual notation for a @i{float}
@@ -2081,18 +2081,18 @@ transitive verb
 @end group
 @end format
 
-@IGindex{export}
+@IGindex export
 @item @b{export}
  @i{v.t.} (a @i{symbol} in a @i{package})
   to add the @i{symbol} to the list of @i{external symbols} of the
   @i{package}.
 
-@IGindex{exported}
+@IGindex exported
 @item @b{exported}
  @i{adj.} (of a @i{symbol} in a @i{package})
   being an @i{external symbol} of the @i{package}.
 
-@IGindex{expressed adjustability}
+@IGindex expressed adjustability
 @item @b{expressed adjustability}
  @i{n.} (of an @i{array})
   a @i{generalized boolean} that is conceptually (but not necessarily actually)
@@ -2100,7 +2100,7 @@ transitive verb
   is @i{expressly adjustable}.
   See also @i{actual adjustability}.
 
-@IGindex{expressed array element type}
+@IGindex expressed array element type
 @item @b{expressed array element type}
  @i{n.} (of an @i{array})
   the @i{type} which is the @i{array element type}
@@ -2116,7 +2116,7 @@ transitive verb
    @i{upgraded array element type} of the
    @i{expressed array element type}.)
 
-@IGindex{expressed complex part type}
+@IGindex expressed complex part type
 @item @b{expressed complex part type}
  @i{n.} (of a @i{complex})
   the @i{type} which is implied as the @i{complex part type}
@@ -2131,7 +2131,7 @@ transitive verb
    the @i{upgraded complex part type} of the
    @i{expressed complex part type}.)
 
-@IGindex{expression}
+@IGindex expression
 @item @b{expression}
  @i{n.}
   1. an @i{object}, often used to emphasize the use 
@@ -2142,7 +2142,7 @@ transitive verb
   2. the textual notation used to notate an @i{object} in a source file.
      ``The expression @t{'sample} is equivalent to @t{(quote sample)}.''
 
-@IGindex{expressly adjustable}
+@IGindex expressly adjustable
 @item @b{expressly adjustable}
  @i{adj.} (of an @i{array})
   being @i{actually adjustable} by virtue of an explicit request for this
@@ -2151,7 +2151,7 @@ transitive verb
   are @i{actually adjustable},
   but not necessarily vice versa.
 
-@IGindex{extended character}
+@IGindex extended character
 @item @b{extended character}
  @i{n.}
   a @i{character} 
@@ -2160,7 +2160,7 @@ transitive verb
 
   a @i{character} that is not a @i{base character}.
 
-@IGindex{extended function designator}
+@IGindex extended function designator
 @item @b{extended function designator}
  @i{n.}
   a @i{designator} for a @i{function}; that is,
@@ -2177,7 +2177,7 @@ transitive verb
      that has a global definition as a @i{macro} or a @i{special form}.
   See also @i{function designator}.
 
-@IGindex{extended lambda list}
+@IGindex extended lambda list
 @item @b{extended lambda list}
  @i{n.}
   a list resembling an @i{ordinary lambda list} in form and purpose, but 
@@ -2185,13 +2185,13 @@ transitive verb
   @i{ordinary lambda list}.
   ``@b{defmacro} uses extended lambda lists.''
 
-@IGindex{extension}
+@IGindex extension
 @item @b{extension}
  @i{n.}
   a facility in an @i{implementation} of @r{Common Lisp} 
   that is not specified by this standard.
 
-@IGindex{extent}
+@IGindex extent
 @item @b{extent}
  @i{n.}
   the interval of time during which a @i{reference} to 
@@ -2203,14 +2203,14 @@ transitive verb
       a  @i{restart},
    or an @i{environment} is defined.
 
-@IGindex{external file format}
+@IGindex external file format
 @item @b{external file format}
  @i{n.}
   an @i{object} of @i{implementation-dependent} nature which determines
   one of possibly several @i{implementation-dependent} ways in which
   @i{characters} are encoded externally in a @i{character} @i{file}.
 
-@IGindex{external file format designator}
+@IGindex external file format designator
 @item @b{external file format designator}
  @i{n.}
   a @i{designator} for an @i{external file format}; that is,
@@ -2227,7 +2227,7 @@ transitive verb
       an @i{external file format} 
          (denoting itself).
 
-@IGindex{external symbol}
+@IGindex external symbol
 @item @b{external symbol}
  @i{n.} (of a @i{package})
   a @i{symbol} that is part of the `external interface' to the @i{package}
@@ -2242,7 +2242,7 @@ transitive verb
     from the @i{package} @i{name} by a double @i{package marker};
   see @ref{Symbols as Tokens}.
 
-@IGindex{externalizable object}
+@IGindex externalizable object
 @item @b{externalizable object}
  @i{n.}
   an @i{object} that can be used as a @i{literal} @i{object} 
@@ -2252,13 +2252,13 @@ transitive verb
 @subheading @b{F}
 @table @asis
 
-@IGindex{false}
+@IGindex false
 @item @b{false}
  @i{n.}
   the @i{symbol} @b{nil},
   used to represent the failure of a @i{predicate} test.
 
-@IGindex{fbound}
+@IGindex fbound
 @item @b{fbound}
  pronounced 'ef ,baund  @i{adj.} 
 							 (of a @i{function name})
@@ -2275,7 +2275,7 @@ transitive verb
 
   See the @i{functions} @b{fboundp} and @b{symbol-function}.
 
-@IGindex{feature}
+@IGindex feature
 @item @b{feature}
  @i{n.}
   1. an aspect or attribute 
@@ -2286,7 +2286,7 @@ transitive verb
   See @ref{Features}.
   ``The @t{:ansi-cl} feature is present in all conforming implementations.''
 
-@IGindex{feature expression}
+@IGindex feature expression
 @item @b{feature expression}
  @i{n.}
   A boolean combination of @i{features} used by the @t{#+} and @t{#-} 
@@ -2294,18 +2294,18 @@ transitive verb
   @i{expressions} by the @i{Lisp reader}.
   See @ref{Feature Expressions}.
 
-@IGindex{features list}
+@IGindex features list
 @item @b{features list}
  @i{n.}
   the @i{list} that is the @i{value} of @b{*features*}.
 
-@IGindex{file}
+@IGindex file
 @item @b{file}
  @i{n.}
   a named entry in a @i{file system},
   having an @i{implementation-defined} nature.
 
-@IGindex{file compiler}
+@IGindex file compiler
 @item @b{file compiler}
  @i{n.}
   any @i{compiler} which @i{compiles} @i{source code} contained in a @i{file},
@@ -2314,7 +2314,7 @@ transitive verb
   but there might be other, @i{implementation-defined} mechanisms for 
   invoking the @i{file compiler}.
 
-@IGindex{file position}
+@IGindex file position
 @item @b{file position}
  @i{n.} (in a @i{stream})
   a non-negative @i{integer} that represents a position in the @i{stream}.
@@ -2328,7 +2328,7 @@ transitive verb
   between @i{file positions} corresponding to any two successive characters
   in the @i{stream} is @i{implementation-dependent}.
 
-@IGindex{file position designator}
+@IGindex file position designator
 @item @b{file position designator}
  @i{n.} (in a @i{stream})
   a @i{designator} for a @i{file position} in that @i{stream}; that is,
@@ -2339,19 +2339,19 @@ transitive verb
 	 @i{i.e.}, the position following the last @i{element} of the @i{stream}),
    or a @i{file position} (denoting itself).
 
-@IGindex{file stream}
+@IGindex file stream
 @item @b{file stream}
  @i{n.}
   an @i{object} of @i{type} @b{file-stream}.
 
-@IGindex{file system}
+@IGindex file system
 @item @b{file system}
  @i{n.}
   a facility which permits aggregations of data to be stored in named
   @i{files} on some medium that is external to the @i{Lisp image}
   and that therefore persists from @i{session} to @i{session}.
 
-@IGindex{filename}
+@IGindex filename
 @item @b{filename}
  @i{n.}
   a handle, not necessarily ever directly represented as an @i{object},
@@ -2359,7 +2359,7 @@ transitive verb
   @i{Pathnames} and @i{namestrings} are two kinds of @i{objects} 
   that substitute for @i{filenames} in @r{Common Lisp}.  
 
-@IGindex{fill pointer}
+@IGindex fill pointer
 @item @b{fill pointer}
  @i{n.} (of a @i{vector})
   an @i{integer} associated with a @i{vector} that represents the
@@ -2368,30 +2368,30 @@ transitive verb
    larger than the total number of @i{elements} in the @i{vector}.
    Not all @i{vectors} have @i{fill pointers}.)
 
-@IGindex{finite}
+@IGindex finite
 @item @b{finite}
  @i{adj.} (of a @i{type})
   having a finite number of @i{elements}.
   ``The type specifier @t{(integer 0 5)} denotes a finite type,
 	    but the type specifiers @b{integer} and @t{(integer 0)} do not.''
 
-@IGindex{fixnum}
+@IGindex fixnum
 @item @b{fixnum}
  @i{n.} 
   an @i{integer} of @i{type} @b{fixnum}.
 
-@IGindex{float}
+@IGindex float
 @item @b{float}
  @i{n.}
   an @i{object} of @i{type} @b{float}.
 
-@IGindex{for-value}
+@IGindex for-value
 @item @b{for-value}
  @i{adj.} (of a @i{reference} to a @i{binding})
   being a @i{reference} that @i{reads}_1
   the @i{value} of the @i{binding}.
 
-@IGindex{form}
+@IGindex form
 @item @b{form}
  @i{n.}
   1. any @i{object} meant to be @i{evaluated}.
@@ -2402,29 +2402,29 @@ transitive verb
      a @i{compound form} having that @i{operator} as its first element.
      ``A @b{quote} form is a constant form.''
 
-@IGindex{formal argument}
+@IGindex formal argument
 @item @b{formal argument}
  @i{n.} @i{Trad.} 
   a @i{parameter}.
 
-@IGindex{formal parameter}
+@IGindex formal parameter
 @item @b{formal parameter}
  @i{n.} @i{Trad.} 
   a @i{parameter}.
 
-@IGindex{format}
+@IGindex format
 @item @b{format}
  @i{v.t.} (a @i{format control} and @i{format arguments})
   to perform output as if by @b{format},
   using the @i{format string} and @i{format arguments}.
 
-@IGindex{format argument}
+@IGindex format argument
 @item @b{format argument}
  @i{n.}
   an @i{object} which is used as data by functions such as @b{format}
   which interpret @i{format controls}.
 
-@IGindex{format control}
+@IGindex format control
 @item @b{format control}
  @i{n.}
      a @i{format string},
@@ -2432,7 +2432,7 @@ transitive verb
      for a @i{function} returned by the @b{formatter} @i{macro}.
   See @ref{Compiling Format Strings}.
 
-@IGindex{format directive}
+@IGindex format directive
 @item @b{format directive}
  @i{n.}
   1. a sequence of @i{characters} in a @i{format string}
@@ -2448,20 +2448,20 @@ transitive verb
      ``Both @t{"~3d"} and @t{"~3,'0D"} are valid uses of the
 	       `@t{~D}' format directive.''
 
-@IGindex{format string}
+@IGindex format string
 @item @b{format string}
  @i{n.}
   a @i{string} which can contain both ordinary text and @i{format directives},
   and which is used in conjunction with @i{format arguments} to describe how 
   text output should be formatted by certain functions, such as @b{format}.
 
-@IGindex{free declaration}
+@IGindex free declaration
 @item @b{free declaration}
  @i{n.}
   a declaration that is not a @i{bound declaration}.
   See @b{declare}.
 
-@IGindex{fresh}
+@IGindex fresh
 @item @b{fresh}
  @i{adj.} 
   1. (of an @i{object} @i{yielded} by a @i{function})
@@ -2472,7 +2472,7 @@ transitive verb
   2. (of a @i{binding} for a @i{name})
      newly-allocated; not shared with other @i{bindings} for that @i{name}.
 
-@IGindex{freshline}
+@IGindex freshline
 @item @b{freshline}
  @i{n.}
   a conceptual operation on a @i{stream}, implemented by the @i{function} @b{fresh-line}
@@ -2482,12 +2482,12 @@ transitive verb
   unless the @i{stream} is already known to be positioned at the beginning of a line.
   Unlike @i{newline}, @i{freshline} is not a @i{character}.
 
-@IGindex{funbound}
+@IGindex funbound
 @item @b{funbound}
  pronounced 'ef unbaund @i{n.} (of a @i{function name})
   not @i{fbound}.
 
-@IGindex{function}
+@IGindex function
 @item @b{function}
  @i{n.}
 
@@ -2496,7 +2496,7 @@ transitive verb
      and which produces zero or more @i{values}.
   2. an @i{object} of @i{type} @b{function}.
 
-@IGindex{function block name}
+@IGindex function block name
 @item @b{function block name}
  @i{n.} (of a @i{function name})
   The @i{symbol} that would be used as the name of an @i{implicit block}
@@ -2509,7 +2509,7 @@ transitive verb
   An @i{implementation} which supports additional kinds of @i{function names}
   must specify for each how the corresponding @i{function block name} is computed.
 
-@IGindex{function cell}
+@IGindex function cell
 @item @b{function cell}
  @i{n.} @i{Trad.} (of a @i{symbol})
   The @i{place} which holds the @i{definition} of the
@@ -2517,7 +2517,7 @@ transitive verb
   and which is @i{accessed} by @b{symbol-function}.
   See @i{cell}.
 
-@IGindex{function designator}
+@IGindex function designator
 @item @b{function designator}
  @i{n.}
   a @i{designator} for a @i{function}; that is,
@@ -2532,7 +2532,7 @@ transitive verb
   or it has a global definition as a @i{macro} or a @i{special form}.
   See also @i{extended function designator}.
 
-@IGindex{function form}
+@IGindex function form
 @item @b{function form}
  @i{n.}
   a @i{form} that is a @i{list} and that has a first element 
@@ -2540,13 +2540,13 @@ transitive verb
   @i{arguments} which are the result of @i{evaluating} subsequent
   elements of the @i{function form}.
 
-@IGindex{function name}
+@IGindex function name
 @item @b{function name}
  @i{n.} (in an @i{environment})
   A @i{symbol} or a @i{list} @t{(setf @i{symbol})} 
   that is the @i{name} of a @i{function} in that @i{environment}.
 
-@IGindex{functional evaluation}
+@IGindex functional evaluation
 @item @b{functional evaluation}
  @i{n.} 
   the process of extracting a @i{functional value} from a @i{function name}
@@ -2560,7 +2560,7 @@ transitive verb
   use of the @i{function} @b{symbol-function} to extract the @i{functional value}
   of a @i{symbol} is considered a @i{functional evaluation}.
 
-@IGindex{functional value}
+@IGindex functional value
 @item @b{functional value}
  @i{n.} 
   1. (of a @i{function name} N in an @i{environment} E)
@@ -2578,7 +2578,7 @@ transitive verb
       nature of its @i{functional value} is @i{implementation-dependent};
       in particular, it might or might not be a @i{function}.)
 
-@IGindex{further compilation}
+@IGindex further compilation
 @item @b{further compilation}
  @i{n.} 
   @i{implementation-dependent} compilation beyond @i{minimal compilation}.
@@ -2590,20 +2590,20 @@ transitive verb
 @subheading @b{G}
 @table @asis
 
-@IGindex{general}
+@IGindex general
 @item @b{general}
  @i{adj.} (of an @i{array})
   having @i{element type} @b{t},
    and consequently able to have any @i{object} as an @i{element}.
 
-@IGindex{generalized boolean}
+@IGindex generalized boolean
 @item @b{generalized boolean}
  @i{n.} 
   an @i{object} used as a truth value, where the symbol~@b{nil} 
   represents @i{false} and all other @i{objects} represent @i{true}.
   See @i{boolean}.
 
-@IGindex{generalized instance}
+@IGindex generalized instance
 @item @b{generalized instance}
  @i{n.} (of a @i{class})
   an @i{object} the @i{class} of which is either that @i{class} itself,
@@ -2614,14 +2614,14 @@ transitive verb
   The former terminology emphasizes the view of X as a @i{class}
   while the latter emphasizes the view of X as a @i{type specifier}.)
 
-@IGindex{generalized reference}
+@IGindex generalized reference
 @item @b{generalized reference}
  @i{n.}
   a reference to a location storing an @i{object} as if to a @i{variable}.
   (Such a reference can be either to @i{read} or @i{write} the location.)
   See @ref{Generalized Reference}.  See also @i{place}.
 
-@IGindex{generalized synonym stream}
+@IGindex generalized synonym stream
 @item @b{generalized synonym stream}
  @i{n.} (with a @i{synonym stream symbol})
   1. (to a @i{stream}) 
@@ -2633,7 +2633,7 @@ transitive verb
      or a @i{composite stream} which has as a target 
      a @i{generalized synonym stream} to the @i{symbol}.
 
-@IGindex{generic function}
+@IGindex generic function
 @item @b{generic function}
  @i{n.}
   a @i{function} whose behavior depends on the @i{classes} or
@@ -2641,63 +2641,63 @@ transitive verb
   other things, a set of @i{methods}, a @i{lambda list}, and a
   @i{method combination} type.
 
-@IGindex{generic function lambda list}
+@IGindex generic function lambda list
 @item @b{generic function lambda list}
  @i{n.}
   A @i{lambda list} that is used to describe data flow into a @i{generic function}.
   See @ref{Generic Function Lambda Lists}.
 
-@IGindex{gensym}
+@IGindex gensym
 @item @b{gensym}
  @i{n.} @i{Trad.} 
   an @i{uninterned} @i{symbol}.
   See the @i{function} @b{gensym}.
 
-@IGindex{global declaration}
+@IGindex global declaration
 @item @b{global declaration}
  @i{n.} 
   a @i{form} that makes certain kinds of information about 
   code globally available; that is, a @b{proclaim} @i{form} 
   or a @b{declaim} @i{form}.
 
-@IGindex{global environment}
+@IGindex global environment
 @item @b{global environment}
  @i{n.} 
   that part of an @i{environment} that contains @i{bindings}
   with @i{indefinite scope} and @i{indefinite extent}.
 
-@IGindex{global variable}
+@IGindex global variable
 @item @b{global variable}
  @i{n.}
   a @i{dynamic variable} or a @i{constant variable}.
 
-@IGindex{glyph}
+@IGindex glyph
 @item @b{glyph}
  @i{n.} 
   a visual representation.
   ``Graphic characters have associated glyphs.''
 
-@IGindex{go}
+@IGindex go
 @item @b{go}
  @i{v.} 
   to transfer control to a @i{go point}.
   See the @i{special operator} @b{go}.
 
-@IGindex{go point}
+@IGindex go point
 @item @b{go point}
 
   one of possibly several @i{exit points} that are @i{established} 
   by @b{tagbody} (or other abstractions, such as @b{prog}, 
   which are built from @b{tagbody}).
 
-@IGindex{go tag}
+@IGindex go tag
 @item @b{go tag}
  @i{n.} 
   the @i{symbol} or @i{integer} that, within the @i{lexical scope} 
   of a @b{tagbody} @i{form}, names an @i{exit point}
   @i{established} by that @b{tagbody} @i{form}.
 
-@IGindex{graphic}
+@IGindex graphic
 @item @b{graphic}
  @i{adj.} (of a @i{character})
   being a ``printing'' or ``displayable'' @i{character} 
@@ -2711,25 +2711,25 @@ transitive verb
 @subheading @b{H}
 @table @asis
 
-@IGindex{handle}
+@IGindex handle
 @item @b{handle}
  @i{v.} (of a @i{condition} being @i{signaled})
   to perform a non-local transfer of control, terminating the ongoing
   @i{signaling} of the @i{condition}.
 
-@IGindex{handler}
+@IGindex handler
 @item @b{handler}
  @i{n.} 
 
   a @i{condition handler}.
 
-@IGindex{hash table}
+@IGindex hash table
 @item @b{hash table}
  @i{n.} 
   an @i{object} of @i{type} @b{hash-table}, 
   which provides a mapping from @i{keys} to @i{values}.
 
-@IGindex{home package}
+@IGindex home package
 @item @b{home package}
  @i{n.} (of a @i{symbol})
   the @i{package}, if any, which is contents of the @i{package cell} 
@@ -2743,7 +2743,7 @@ transitive verb
 @subheading @b{I}
 @table @asis
 
-@IGindex{I/O customization variable}
+@IGindex I/O customization variable
 @item @b{I/O customization variable}
  @i{n.}
   one of the @i{stream variables} in Figure 26--2, 
@@ -2763,18 +2763,18 @@ transitive verb
 @end group
 @end format
 
-@IGindex{identical}
+@IGindex identical
 @item @b{identical}
  @i{adj.} 
   the @i{same} under @b{eq}.
 
-@IGindex{identifier}
+@IGindex identifier
 @item @b{identifier}
  @i{n.}        
   1. a @i{symbol} used to identify or to distinguish @i{names}. 
   2. a @i{string} used the same way.            
 
-@IGindex{immutable}
+@IGindex immutable
 @item @b{immutable}
  @i{adj.}
   not subject to change, either because no @i{operator} is provided which is
@@ -2786,24 +2786,24 @@ transitive verb
   to make such modification are undefined.
   ``Numbers are immutable.''
 
-@IGindex{implementation}
+@IGindex implementation
 @item @b{implementation}
  @i{n.} 
   a system, mechanism, or body of @i{code} that implements the semantics of @r{Common Lisp}.
 
-@IGindex{implementation limit}
+@IGindex implementation limit
 @item @b{implementation limit}
  @i{n.} 
   a restriction imposed by an @i{implementation}.
 
-@IGindex{implementation-defined}
+@IGindex implementation-defined
 @item @b{implementation-defined}
  @i{adj.} 
   @i{implementation-dependent}, but required by this specification to be
   defined by each @i{conforming implementation} and to be documented by 
   the corresponding implementor.
 
-@IGindex{implementation-dependent}
+@IGindex implementation-dependent
 @item @b{implementation-dependent}
  @i{adj.} 
   describing a behavior or aspect of @r{Common Lisp} which has been deliberately left
@@ -2814,77 +2814,77 @@ transitive verb
   marked @i{implementation-dependent}, although in some cases
   such documentation might simply identify the item as ``undefined.''
 
-@IGindex{implementation-independent}
+@IGindex implementation-independent
 @item @b{implementation-independent}
  @i{adj.} 
   used to identify or emphasize a behavior or aspect of @r{Common Lisp} which does 
   not vary between @i{conforming implementations}.
 
-@IGindex{implicit block}
+@IGindex implicit block
 @item @b{implicit block}
  @i{n.} 
  a @i{block} introduced by a @i{macro form} 
  rather than by an explicit @b{block} @i{form}.
 
-@IGindex{implicit compilation}
+@IGindex implicit compilation
 @item @b{implicit compilation}
  @i{n.} 
  @i{compilation} performed during @i{evaluation}.
 
-@IGindex{implicit progn}
+@IGindex implicit progn
 @item @b{implicit progn}
  @i{n.} 
   an ordered set of adjacent @i{forms} appearing in another
   @i{form}, and defined by their context in that @i{form}
   to be executed as if within a @b{progn}.
 
-@IGindex{implicit tagbody}
+@IGindex implicit tagbody
 @item @b{implicit tagbody}
  @i{n.} 
   an ordered set of adjacent @i{forms} and/or @i{tags} 
   appearing in another @i{form}, and defined by their context 
   in that @i{form} to be executed as if within a @b{tagbody}.
 
-@IGindex{import}
+@IGindex import
 @item @b{import}
  @i{v.t.} (a @i{symbol} into a @i{package})
   to make the @i{symbol} be @i{present} in the @i{package}.
 
-@IGindex{improper list}
+@IGindex improper list
 @item @b{improper list}
  @i{n.} 
   a @i{list} which is not a @i{proper list}:  
   a @i{circular list} or a @i{dotted list}.
 
-@IGindex{inaccessible}
+@IGindex inaccessible
 @item @b{inaccessible}
  @i{adj.} 
   not @i{accessible}.
 
-@IGindex{indefinite extent}
+@IGindex indefinite extent
 @item @b{indefinite extent}
  @i{n.} 
   an @i{extent} whose duration is unlimited.
   ``Most Common Lisp objects have indefinite extent.''
 
-@IGindex{indefinite scope}
+@IGindex indefinite scope
 @item @b{indefinite scope}
  @i{n.} 
   @i{scope} that is unlimited.
 
-@IGindex{indicator}
+@IGindex indicator
 @item @b{indicator}
  @i{n.} 
   a @i{property indicator}.
 
-@IGindex{indirect instance}
+@IGindex indirect instance
 @item @b{indirect instance}
  @i{n.} (of a @i{class} C_1)
   an @i{object} of @i{class} C_2, 
   where C_2 is a @i{subclass} of C_1.
   ``An integer is an indirect instance of the class @b{number}.''
 
-@IGindex{inherit}
+@IGindex inherit
 @item @b{inherit}
  @i{v.t.} 
   1. to receive or acquire a quality, trait, or characteristic; 
@@ -2894,24 +2894,24 @@ transitive verb
   3. (a @i{package}) to make @i{symbols} @i{exported} by another
      @i{package} @i{accessible} by using @b{use-package}.
 
-@IGindex{initial pprint dispatch table}
+@IGindex initial pprint dispatch table
 @item @b{initial pprint dispatch table}
  @i{n.}
   the @i{value} of @b{*print-pprint-dispatch*} at the time the @i{Lisp image} is started.
 
-@IGindex{initial readtable}
+@IGindex initial readtable
 @item @b{initial readtable}
  @i{n.}
   the @i{value} of @b{*readtable*} at the time the @i{Lisp image} is started.
 
-@IGindex{initialization argument list}
+@IGindex initialization argument list
 @item @b{initialization argument list}
  @i{n.} 
   a @i{property list} of initialization argument @i{names} and @i{values}
   used in the protocol for initializing and reinitializing @i{instances} of @i{classes}.
   See @ref{Object Creation and Initialization}.
 
-@IGindex{initialization form}
+@IGindex initialization form
 @item @b{initialization form}
  @i{n.} 
   a @i{form} used to supply the initial @i{value} for a @i{slot}
@@ -2919,7 +2919,7 @@ transitive verb
   ``The initialization form for a slot in a @b{defclass} form
             is introduced by the keyword @t{:initform}.''
 
-@IGindex{input}
+@IGindex input
 @item @b{input}
  @i{adj.} (of a @i{stream})
   supporting input operations (@i{i.e.}, being a ``data source'').
@@ -2927,25 +2927,25 @@ transitive verb
   in which case it is sometimes called a @i{bidirectional} @i{stream}.
   See the @i{function} @b{input-stream-p}.
 
-@IGindex{instance}
+@IGindex instance
 @item @b{instance}
  @i{n.} 
   1. a @i{direct instance}.
   2. a @i{generalized instance}.
   3. an @i{indirect instance}.
 
-@IGindex{integer}
+@IGindex integer
 @item @b{integer}
  @i{n.} 
   an @i{object} of @i{type} @b{integer}, which represents a mathematical integer.
 
-@IGindex{interactive stream}
+@IGindex interactive stream
 @item @b{interactive stream}
  @i{n.} 
   a @i{stream} on which it makes sense to perform interactive querying.
   See @ref{Interactive Streams}.
 
-@IGindex{intern}
+@IGindex intern
 @item @b{intern}
  @i{v.t.} 
   1. (a @i{string} in a @i{package})
@@ -2958,13 +2958,13 @@ transitive verb
      are equivalent or have equivalent names under some predicate defined
      by the protocol are mapped to a single canonical object.
 
-@IGindex{internal symbol}
+@IGindex internal symbol
 @item @b{internal symbol}
  @i{n.} (of a @i{package})
   a symbol which is @i{accessible} in the @i{package},
   but which is not an @i{external symbol} of the @i{package}.
 
-@IGindex{internal time}
+@IGindex internal time
 @item @b{internal time}
  @i{n.}
   @i{time}, represented as an @i{integer} number of @i{internal time units}.
@@ -2972,14 +2972,14 @@ transitive verb
   from an arbitrarily chosen, @i{implementation-dependent} base.
   See @ref{Internal Time}.
 
-@IGindex{internal time unit}
+@IGindex internal time unit
 @item @b{internal time unit}
  @i{n.} 
   a unit of time equal to 1/n of a second, 
   for some @i{implementation-defined} @i{integer} value of n.
   See the @i{variable} @b{internal-time-units-per-second}.
 
-@IGindex{interned}
+@IGindex interned
 @item @b{interned}
  @i{adj.} @i{Trad.} 
   1. (of a @i{symbol}) @i{accessible}_3 in
@@ -2987,7 +2987,7 @@ transitive verb
   2. (of a @i{symbol} in a specific @i{package}) 
      @i{present} in that @i{package}.
 
-@IGindex{interpreted function}
+@IGindex interpreted function
 @item @b{interpreted function}
  @i{n.} 
   a @i{function} that is not a @i{compiled function}.
@@ -2995,7 +2995,7 @@ transitive verb
    has no @i{interpreted functions}, but a @i{conforming program}
    must not assume that all @i{functions} are @i{compiled functions}.)
 
-@IGindex{interpreted implementation}
+@IGindex interpreted implementation
 @item @b{interpreted implementation}
  @i{n.}
   an @i{implementation} that uses an execution strategy for 
@@ -3003,14 +3003,14 @@ transitive verb
   analysis pre-pass, and instead uses ``lazy'' (and sometimes repetitious)
   semantic analysis of @i{forms} as they are encountered during execution.
 
-@IGindex{interval designator}
+@IGindex interval designator
 @item @b{interval designator}
  @i{n.} (of @i{type} T)
   an ordered pair of @i{objects} that describe a @i{subtype} of T
   by delimiting an interval on the real number line.
   See @ref{Interval Designators}.
 
-@IGindex{invalid}
+@IGindex invalid
 @item @b{invalid}
  @i{n.}, @i{adj.}
   1. @i{n.}
@@ -3025,7 +3025,7 @@ transitive verb
      @i{constituent trait} @i{invalid}_1.
      See @i{Figure~2--8}.
 
-@IGindex{iteration form}
+@IGindex iteration form
 @item @b{iteration form}
  @i{n.}
   a @i{compound form} whose @i{operator} is named in Figure 26--3,
@@ -3045,7 +3045,7 @@ transitive verb
 @end group
 @end format
 
-@IGindex{iteration variable}
+@IGindex iteration variable
 @item @b{iteration variable}
  @i{n.}
   a @i{variable} V, the @i{binding} for which was created by an
@@ -3055,14 +3055,14 @@ transitive verb
 @subheading @b{K}
 @table @asis
 
-@IGindex{key}
+@IGindex key
 @item @b{key}
  @i{n.} 
   an @i{object} used for selection during retrieval. 
   See @i{association list}, @i{property list}, and @i{hash table}.
   Also, see @ref{Sequence Concepts}.
 
-@IGindex{keyword}
+@IGindex keyword
 @item @b{keyword}
  @i{n.} 
   1. a @i{symbol} the @i{home package} of which is the @t{KEYWORD} @i{package}.
@@ -3071,7 +3071,7 @@ transitive verb
      See @b{lambda}.
   3. @i{Idiom.} a @i{lambda list keyword}.
 
-@IGindex{keyword parameter}
+@IGindex keyword parameter
 @item @b{keyword parameter}
  @i{n.}
   A @i{parameter} for which a corresponding keyword @i{argument}
@@ -3079,7 +3079,7 @@ transitive verb
   If the @i{argument} is not supplied, a default value is used.
   See also @i{supplied-p parameter}.
 
-@IGindex{keyword/value pair}
+@IGindex keyword/value pair
 @item @b{keyword/value pair}
  @i{n.} 
   two successive @i{elements} (a @i{keyword} and a @i{value}, 
@@ -3089,12 +3089,12 @@ transitive verb
 @subheading @b{L}
 @table @asis
 
-@IGindex{lambda combination}
+@IGindex lambda combination
 @item @b{lambda combination}
  @i{n.} @i{Trad.} 
   a @i{lambda form}.
 
-@IGindex{lambda expression}
+@IGindex lambda expression
 @item @b{lambda expression}
  @i{n.} 
   a @i{list} which can be used in place of a @i{function name} in 
@@ -3104,7 +3104,7 @@ transitive verb
   first element is the @i{symbol} @t{lambda}.
   See @b{lambda}.
 
-@IGindex{lambda form}
+@IGindex lambda form
 @item @b{lambda form}
  @i{n.} 
   a @i{form} that is a @i{list} and that has a first element
@@ -3112,7 +3112,7 @@ transitive verb
   to be called on @i{arguments} which are the result of @i{evaluating}
   subsequent elements of the @i{lambda form}.
 
-@IGindex{lambda list}
+@IGindex lambda list
 @item @b{lambda list}
  @i{n.} 
   a @i{list} that specifies a set of @i{parameters} 
@@ -3123,7 +3123,7 @@ transitive verb
   an @i{extended lambda list},
   or a @i{modified lambda list}.
 
-@IGindex{lambda list keyword}
+@IGindex lambda list keyword
 @item @b{lambda list keyword}
  @i{n.} 
   a @i{symbol} whose @i{name} begins with @i{ampersand}
@@ -3131,19 +3131,19 @@ transitive verb
   Note that no @i{standardized} @i{lambda list keyword} 
   is in the @t{KEYWORD} @i{package}.
 
-@IGindex{lambda variable}
+@IGindex lambda variable
 @item @b{lambda variable}
  @i{n.} 
   a @i{formal parameter}, used to emphasize the @i{variable}'s
   relation to the @i{lambda list} that @i{established} it.
 
-@IGindex{leaf}
+@IGindex leaf
 @item @b{leaf}
  @i{n.} 
   1. an @i{atom} in a @i{tree}_1.
   2. a terminal node of a @i{tree}_2.
 
-@IGindex{leap seconds}
+@IGindex leap seconds
 @item @b{leap seconds}
  @i{n.}
   additional one-second intervals of time that are occasionally inserted 
@@ -3152,7 +3152,7 @@ transitive verb
   @i{leap seconds}; every day is assumed to be exactly 86400 seconds 
   long.
 
-@IGindex{left-parenthesis}
+@IGindex left-parenthesis
 @item @b{left-parenthesis}
  @i{n.}
   the @i{standard character} ``@t{(}'',
@@ -3161,7 +3161,7 @@ transitive verb
    or ``open parenthesis''
   See @i{Figure~2--5}.
 
-@IGindex{length}
+@IGindex length
 @item @b{length}
  @i{n.} (of a @i{sequence})
   the number of @i{elements} in the @i{sequence}.
@@ -3170,12 +3170,12 @@ transitive verb
    @i{fill pointer} even though the total allocated size of
    the @i{vector} might be larger.)
 
-@IGindex{lexical binding}
+@IGindex lexical binding
 @item @b{lexical binding}
  @i{n.} 
   a @i{binding} in a @i{lexical environment}.
 
-@IGindex{lexical closure}
+@IGindex lexical closure
 @item @b{lexical closure}
  @i{n.} 
   a @i{function} that, when invoked on @i{arguments}, executes
@@ -3184,7 +3184,7 @@ transitive verb
   augmented by @i{bindings} of the @i{function}'s @i{parameters}
   to the corresponding @i{arguments}.
 
-@IGindex{lexical environment}
+@IGindex lexical environment
 @item @b{lexical environment}
  @i{n.} 
   that part of the @i{environment} that contains @i{bindings}
@@ -3200,20 +3200,20 @@ transitive verb
   and
      @i{local declarations} (see @b{declare}).
 
-@IGindex{lexical scope}
+@IGindex lexical scope
 @item @b{lexical scope}
  @i{n.} 
   @i{scope} that is limited to a spatial or textual region within the
   establishing @i{form}.
   ``The names of parameters to a function normally are lexically scoped.''
 
-@IGindex{lexical variable}
+@IGindex lexical variable
 @item @b{lexical variable}
  @i{n.} 
   a @i{variable} the @i{binding} for which is in the
   @i{lexical environment}.
 
-@IGindex{Lisp image}
+@IGindex Lisp image
 @item @b{Lisp image}
  @i{n.}
   a running instantiation of a @r{Common Lisp} @i{implementation}.
@@ -3235,14 +3235,14 @@ transitive verb
     area that permits the sharing of some but not all @i{objects} are considered
     to be distinct @i{Lisp images}.)
 
-@IGindex{Lisp printer}
+@IGindex Lisp printer
 @item @b{Lisp printer}
  @i{n.} @i{Trad.} 
   the procedure that prints the character representation of an
   @i{object} onto a @i{stream}. (This procedure is implemented
   by the @i{function} @b{write}.)
 
-@IGindex{Lisp read-eval-print loop}
+@IGindex Lisp read-eval-print loop
 @item @b{Lisp read-eval-print loop}
  @i{n.} @i{Trad.} 
   an endless loop that @i{reads}_2 a @i{form},
@@ -3252,14 +3252,14 @@ transitive verb
   the default mode of interaction with @r{Common Lisp} during program development
   is through such a loop.
 
-@IGindex{Lisp reader}
+@IGindex Lisp reader
 @item @b{Lisp reader}
  @i{n.} @i{Trad.} 
   the procedure that parses character representations of @i{objects}
   from a @i{stream}, producing @i{objects}.
   (This procedure is implemented by the @i{function} @b{read}.)
 
-@IGindex{list}
+@IGindex list
 @item @b{list}
  @i{n.} 
   1. a chain of @i{conses} in which the @i{car} of each
@@ -3271,7 +3271,7 @@ transitive verb
          or @i{circular list}.
   2. the @i{type} that is the union of @b{null} and @b{cons}.
 
-@IGindex{list designator}
+@IGindex list designator
 @item @b{list designator}
  @i{n.}
   a @i{designator} for a @i{list} of @i{objects}; that is,
@@ -3282,7 +3282,7 @@ transitive verb
           whose @i{element} is that @i{non-nil} @i{atom})
        or a @i{proper list} (denoting itself).
 
-@IGindex{list structure}
+@IGindex list structure
 @item @b{list structure}
  @i{n.} (of a @i{list})
   the set of @i{conses} that make up the @i{list}.
@@ -3301,7 +3301,7 @@ transitive verb
    that any @i{conses} that are @i{elements} of the @i{list} 
    are not involved.)
 
-@IGindex{literal}
+@IGindex literal
 @item @b{literal}
  @i{adj.} (of an @i{object})
   referenced directly in a program rather than being computed by the program;
@@ -3313,18 +3313,18 @@ transitive verb
             the expressions @t{"one"}, @t{("two")}, and @t{"two"}
             are literal objects.''
 
-@IGindex{load}
+@IGindex load
 @item @b{load}
  @i{v.t.} (a @i{file})
   to cause the @i{code} contained in the @i{file} to be @i{executed}.
   See the @i{function} @b{load}.
 
-@IGindex{load time}
+@IGindex load time
 @item @b{load time}
  @i{n.}
   the duration of time that the loader is @i{loading} @i{compiled code}.
 
-@IGindex{load time value}
+@IGindex load time value
 @item @b{load time value}
  @i{n.} 
   an @i{object} referred to in @i{code} by a @b{load-time-value} 
@@ -3334,13 +3334,13 @@ transitive verb
   computed once as part of the process of @i{loading} the @i{compiled file},
   and not again.  See the @i{special operator} @b{load-time-value}.
 
-@IGindex{loader}
+@IGindex loader
 @item @b{loader}
  @i{n.}
   a facility that is part of Lisp and that @i{loads} a @i{file}.
   See the @i{function} @b{load}.
 
-@IGindex{local declaration}
+@IGindex local declaration
 @item @b{local declaration}
  @i{n.} 
   an @i{expression} which may appear only in specially designated
@@ -3348,26 +3348,26 @@ transitive verb
   the code contained within the containing @i{form}; 
   that is, a @b{declare} @i{expression}.
 
-@IGindex{local precedence order}
+@IGindex local precedence order
 @item @b{local precedence order}
  @i{n.} (of a @i{class})
   a @i{list} consisting of the @i{class} followed by its
   @i{direct superclasses} in the order mentioned in the defining
   @i{form} for the @i{class}.
 
-@IGindex{local slot}
+@IGindex local slot
 @item @b{local slot}
  @i{n.} (of a @i{class})
   a @i{slot} @i{accessible} in only one @i{instance}, 
   namely the @i{instance} in which the @i{slot} is allocated.
 
-@IGindex{logical block}
+@IGindex logical block
 @item @b{logical block}
  @i{n.}
   a conceptual grouping of related output used by the @i{pretty printer}.
   See the @i{macro} @b{pprint-logical-block} and @ref{Dynamic Control of the Arrangement of Output}.
 
-@IGindex{logical host}
+@IGindex logical host
 @item @b{logical host}
  @i{n.}
   an @i{object} of @i{implementation-dependent} nature 
@@ -3376,7 +3376,7 @@ transitive verb
   @i{logical pathnames} belonging to that host into @i{physical pathnames}.
   See @ref{Logical Pathnames}.
 
-@IGindex{logical host designator}
+@IGindex logical host designator
 @item @b{logical host designator}
  @i{n.}
   a @i{designator} for a @i{logical host}; that is,
@@ -3389,17 +3389,17 @@ transitive verb
    it is possible that an @i{implementation} might represent 
    a @i{logical host} as the @i{string} that names it.)
 
-@IGindex{logical pathname}
+@IGindex logical pathname
 @item @b{logical pathname}
  @i{n.} 
   an @i{object} of @i{type} @b{logical-pathname}.
 
-@IGindex{long float}
+@IGindex long float
 @item @b{long float}
  @i{n.} 
   an @i{object} of @i{type} @b{long-float}.
 
-@IGindex{loop keyword}
+@IGindex loop keyword
 @item @b{loop keyword}
  @i{n.} @i{Trad.}
   a symbol that is a specially recognized part of the syntax of 
@@ -3407,7 +3407,7 @@ transitive verb
   @i{name} (using @b{string=}), not by their identity; as such, they
   may be in any package.  A @i{loop keyword} is not a @i{keyword}.
 
-@IGindex{lowercase}
+@IGindex lowercase
 @item @b{lowercase}
  @i{adj.} (of a @i{character})
      being among @i{standard characters} corresponding to
@@ -3420,28 +3420,28 @@ transitive verb
 @subheading @b{M}
 @table @asis
 
-@IGindex{macro}
+@IGindex macro
 @item @b{macro}
  @i{n.} 
   1. a @i{macro form}
   2. a @i{macro function}.
   3. a @i{macro name}.
 
-@IGindex{macro character}
+@IGindex macro character
 @item @b{macro character}
  @i{n.} 
   a @i{character} which, when encountered by the @i{Lisp reader} 
   in its main dispatch loop, introduces a @i{reader macro}_1.
   (@i{Macro characters} have nothing to do with @i{macros}.)
 
-@IGindex{macro expansion}
+@IGindex macro expansion
 @item @b{macro expansion}
  @i{n.} 
   1. the process of translating a @i{macro form} into another
      @i{form}.
   2. the @i{form} resulting from this process.
 
-@IGindex{macro form}
+@IGindex macro form
 @item @b{macro form}
  @i{n.} 
   a @i{form} that stands for another @i{form} 
@@ -3452,7 +3452,7 @@ transitive verb
     or     a @i{form} that is a @i{symbol} that names a 
              @i{symbol macro}.
 
-@IGindex{macro function}
+@IGindex macro function
 @item @b{macro function}
  @i{n.} 
   a @i{function} of two arguments, a @i{form} and an 
@@ -3460,26 +3460,26 @@ transitive verb
   producing a @i{form} to be evaluated in place of the original
   argument @i{form}.
 
-@IGindex{macro lambda list}
+@IGindex macro lambda list
 @item @b{macro lambda list}
  @i{n.}
   an @i{extended lambda list} used in @i{forms} that @i{establish}
   @i{macro} definitions, such as @b{defmacro} and @b{macrolet}.
   See @ref{Macro Lambda Lists}.
 
-@IGindex{macro name}
+@IGindex macro name
 @item @b{macro name}
  @i{n.} 
   a @i{name} for which @b{macro-function} returns @i{true}
   and which when used as the first element of a @i{compound form}
   identifies that @i{form} as a @i{macro form}.
 
-@IGindex{macroexpand hook}
+@IGindex macroexpand hook
 @item @b{macroexpand hook}
  @i{n.}
   the @i{function} that is the @i{value} of @b{*macroexpand-hook*}.
 
-@IGindex{mapping}
+@IGindex mapping
 @item @b{mapping}
  @i{n.} 
   1. a type of iteration in which a @i{function} is successively 
@@ -3489,13 +3489,13 @@ transitive verb
      first set (the ``domain'') is assigned one element of the second
      set (the ``range'').
 
-@IGindex{metaclass}
+@IGindex metaclass
 @item @b{metaclass}
  @i{n.} 
   1. a @i{class} whose instances are @i{classes}.
   2. (of an @i{object}) the @i{class} of the @i{class} of the @i{object}.
 
-@IGindex{Metaobject Protocol}
+@IGindex Metaobject Protocol
 @item @b{Metaobject Protocol}
  @i{n.}
   one of many possible descriptions of how a @i{conforming implementation}
@@ -3507,7 +3507,7 @@ transitive verb
   consider making their @i{implementation} adhere to it where possible.
   It is described in detail in @i{The Art of the Metaobject Protocol}.
 
-@IGindex{method}
+@IGindex method
 @item @b{method}
  @i{n.} 
   an @i{object} that is part of a @i{generic function} and which
@@ -3515,7 +3515,7 @@ transitive verb
   behave when its @i{arguments} are @i{objects} of certain
   @i{classes} or with certain identities.
 
-@IGindex{method combination}
+@IGindex method combination
 @item @b{method combination}
  @i{n.} 
   1. generally, the composition of a set of @i{methods} to produce an
@@ -3524,26 +3524,26 @@ transitive verb
      of how the @i{method combination}_1 for one or more 
      specific @i{generic functions} is to be performed.
 
-@IGindex{method-defining form}
+@IGindex method-defining form
 @item @b{method-defining form}
  @i{n.} 
   a @i{form} that defines a @i{method} for a @i{generic function},
   whether explicitly or implicitly.  
   See @ref{Introduction to Generic Functions}.
 
-@IGindex{method-defining operator}
+@IGindex method-defining operator
 @item @b{method-defining operator}
  @i{n.}
   an @i{operator} corresponding to a @i{method-defining} @i{form}.
   See @i{Figure~7--1}.
 
-@IGindex{minimal compilation}
+@IGindex minimal compilation
 @item @b{minimal compilation}
  @i{n.}
   actions the @i{compiler} must take at compile time. 
   See @ref{Compilation Semantics}.
 
-@IGindex{modified lambda list}
+@IGindex modified lambda list
 @item @b{modified lambda list}
  @i{n.} 
   a list resembling an @i{ordinary lambda list} in form and purpose, 
@@ -3552,14 +3552,14 @@ transitive verb
   See @i{ordinary lambda list}.
   ``@b{deftype} uses a modified lambda list.''
 
-@IGindex{most recent}
+@IGindex most recent
 @item @b{most recent}
  @i{adj.}
   innermost;
   that is, having been @i{established} (and not yet @i{disestablished})
   more recently than any other of its kind.
 
-@IGindex{multiple escape}
+@IGindex multiple escape
 @item @b{multiple escape}
  @i{n.}, @i{adj.}
   1. @i{n.} the @i{syntax type} of a @i{character} 
@@ -3573,7 +3573,7 @@ transitive verb
      (In the @i{standard readtable},
       @i{vertical-bar} is a @i{multiple escape} @i{character}.)
 
-@IGindex{multiple values}
+@IGindex multiple values
 @item @b{multiple values}
  @i{n.} 
   1. more than one @i{value}.
@@ -3589,7 +3589,7 @@ transitive verb
 @subheading @b{N}
 @table @asis
 
-@IGindex{name}
+@IGindex name
 @item @b{name}
  @i{n.}, @i{v.t.} 
   1. @i{n.} an @i{identifier} by which an @i{object},
@@ -3611,7 +3611,7 @@ transitive verb
       which is not @i{null}.  Whether or not other @i{characters}
       have @i{names} is @i{implementation-dependent}.)
 
-@IGindex{named constant}
+@IGindex named constant
 @item @b{named constant}
  @i{n.} 
   a @i{variable} that is defined by @r{Common Lisp},
@@ -3621,7 +3621,7 @@ transitive verb
   ``The value of a named constant may not be changed
             by assignment or by binding.''
 
-@IGindex{namespace}
+@IGindex namespace
 @item @b{namespace}
  @i{n.} 
   1. @i{bindings} whose denotations are restricted to a particular kind.
@@ -3629,7 +3629,7 @@ transitive verb
   2. any @i{mapping} whose domain is a set of @i{names}.
      ``A package defines a namespace.''
 
-@IGindex{namestring}
+@IGindex namestring
 @item @b{namestring}
  @i{n.} 
   a @i{string} that represents a @i{filename}
@@ -3637,13 +3637,13 @@ transitive verb
          described in @ref{Syntax of Logical Pathname Namestrings},
      or some @i{implementation-defined} notation for naming a @i{physical pathname}.
 
-@IGindex{newline}
+@IGindex newline
 @item @b{newline}
  @i{n.}
   the @i{standard character} <@i{Newline}>,
   notated for the @i{Lisp reader} as @t{#\Newline}.
 
-@IGindex{next method}
+@IGindex next method
 @item @b{next method}
  @i{n.} 
   the next @i{method} to be invoked with respect to a given
@@ -3651,14 +3651,14 @@ transitive verb
   @i{classes}.  
   See @ref{Applying method combination to the sorted list of applicable methods}.
 
-@IGindex{nickname}
+@IGindex nickname
 @item @b{nickname}
  @i{n.} (of a @i{package})
   one of possibly several @i{names} that can be used to refer to
   the @i{package} but that is not the primary @i{name} 
   of the @i{package}.
 
-@IGindex{nil}
+@IGindex nil
 @item @b{nil}
  @i{n.} 
   the @i{object} that is at once
@@ -3667,17 +3667,17 @@ transitive verb
         the @i{boolean} (or @i{generalized boolean}) representing @i{false},
     and the @i{name} of the @i{empty type}.
 
-@IGindex{non-atomic}
+@IGindex non-atomic
 @item @b{non-atomic}
  @i{adj.} 
   being other than an @i{atom}; @i{i.e.}, being a @i{cons}.
 
-@IGindex{non-constant variable}
+@IGindex non-constant variable
 @item @b{non-constant variable}
  @i{n.}
   a @i{variable} that is not a @i{constant variable}.
 
-@IGindex{non-correctable}
+@IGindex non-correctable
 @item @b{non-correctable}
  @i{adj.} (of an @i{error})
   not intentionally @i{correctable}.
@@ -3690,28 +3690,28 @@ transitive verb
    however, there is no actual requirement on @i{conforming programs}
    or @i{conforming implementations} imposed by this term.)
 
-@IGindex{non-empty}
+@IGindex non-empty
 @item @b{non-empty}
  @i{adj.}
   having at least one @i{element}.
 
-@IGindex{non-generic function}
+@IGindex non-generic function
 @item @b{non-generic function}
  @i{n.} 
   a @i{function} that is not a @i{generic function}.
 
-@IGindex{non-graphic}
+@IGindex non-graphic
 @item @b{non-graphic}
  @i{adj.} (of a @i{character})
   not @i{graphic}.
   See @ref{Graphic Characters}.
 
-@IGindex{non-list}
+@IGindex non-list
 @item @b{non-list}
  @i{n.}, @i{adj.} 
   other than a @i{list}; @i{i.e.}, a @i{non-nil} @i{atom}.
 
-@IGindex{non-local exit}
+@IGindex non-local exit
 @item @b{non-local exit}
  @i{n.} 
   a transfer of control (and sometimes @i{values}) to 
@@ -3719,7 +3719,7 @@ transitive verb
   ``The operators @b{go}, @b{throw}, 
 	    and @b{return-from} cause a non-local exit.''
 
-@IGindex{non-nil}
+@IGindex non-nil
 @item @b{non-nil}
  @i{n.}, @i{adj.} 
   not @b{nil}.  Technically, any @i{object} which is not @b{nil} can be
@@ -3727,44 +3727,44 @@ transitive verb
   of the @i{object} as a @i{generalized boolean}.
   Referring to such an @i{object} as @i{non-nil} avoids this implication.
 
-@IGindex{non-null lexical environment}
+@IGindex non-null lexical environment
 @item @b{non-null lexical environment}
  @i{n.} 
   a @i{lexical environment} that has additional information not present in
   the @i{global environment}, such as one or more @i{bindings}.
 
-@IGindex{non-simple}
+@IGindex non-simple
 @item @b{non-simple}
  @i{adj.}
   not @i{simple}.
 
-@IGindex{non-terminating}
+@IGindex non-terminating
 @item @b{non-terminating}
  @i{adj.} (of a @i{macro character})
   being such that it is treated as a constituent @i{character}
   when it appears in the middle of an extended token.
   See @ref{Reader Algorithm}.
 
-@IGindex{non-top-level form}
+@IGindex non-top-level form
 @item @b{non-top-level form}
  @i{n.} 
   a @i{form} that, by virtue of its position as a @i{subform}
   of another @i{form}, is not a @i{top level form}.
   See @ref{Processing of Top Level Forms}.
 
-@IGindex{normal return}
+@IGindex normal return
 @item @b{normal return}
  @i{n.} 
   the natural transfer of control and @i{values} which occurs after
   the complete @i{execution} of a @i{form}.
 
-@IGindex{normalized}
+@IGindex normalized
 @item @b{normalized}
  @i{adj.}, @i{ANSI}, @i{IEEE} (of a @i{float})
   conforming to the description of ``normalized'' as described by @i{IEEE Standard for Binary Floating-Point Arithmetic}.
   See @i{denormalized}.
 
-@IGindex{null}
+@IGindex null
 @item @b{null}
  @i{adj.}, @i{n.} 
   1. @i{adj.} 
@@ -3784,17 +3784,17 @@ transitive verb
 	 if no specific value was requested.
   2. @i{n.} an @i{object} of @i{type} @b{null} (the only such @i{object} being @b{nil}).
 
-@IGindex{null lexical environment}
+@IGindex null lexical environment
 @item @b{null lexical environment}
  @i{n.} 
   the @i{lexical environment} which has no @i{bindings}.
 
-@IGindex{number}
+@IGindex number
 @item @b{number}
  @i{n.}
   an @i{object} of @i{type} @b{number}.
 
-@IGindex{numeric}
+@IGindex numeric
 @item @b{numeric}
  @i{adj.} (of a @i{character})
      being one of the @i{standard characters} @t{0} through @i{9},
@@ -3805,7 +3805,7 @@ transitive verb
 @subheading @b{O}
 @table @asis
 
-@IGindex{object}
+@IGindex object
 @item @b{object}
  @i{n.} 
   1. any Lisp datum. 
@@ -3820,7 +3820,7 @@ transitive verb
      ``The function @b{symbol-function} takes a function name 
 	       and returns a function object.''
 
-@IGindex{object-traversing}
+@IGindex object-traversing
 @item @b{object-traversing}
  @i{adj.} 
   operating in succession on components of an @i{object}.
@@ -3828,14 +3828,14 @@ transitive verb
 	    @b{with-package-iterator} and @b{count}
  	    perform object-traversing operations.''
 
-@IGindex{open}
+@IGindex open
 @item @b{open}
  @i{adj.}, @i{v.t.} (a @i{file})
   1. @i{v.t.} to create and return a @i{stream} to the @i{file}.
   2. @i{adj.} (of a @i{stream})
      having been @i{opened}_1, but not yet @i{closed}.
 
-@IGindex{operator}
+@IGindex operator
 @item @b{operator}
  @i{n.} 
   1. a @i{function}, @i{macro}, or @i{special operator}.
@@ -3849,7 +3849,7 @@ transitive verb
      either an @i{operator}_2
      or a @i{lambda expression}, and which is never @t{(setf @i{symbol})}.
 
-@IGindex{optimize quality}
+@IGindex optimize quality
 @item @b{optimize quality}
  @i{n.} 
   one of several aspects of a program that might be optimizable by
@@ -3867,33 +3867,33 @@ transitive verb
     @t{speed} (of the object code).
   @i{Implementations} may define additional @i{optimize qualities}.
 
-@IGindex{optional parameter}
+@IGindex optional parameter
 @item @b{optional parameter}
  @i{n.}
   A @i{parameter} for which a corresponding positional @i{argument}
   is optional.  If the @i{argument} is not supplied, a default value
   is used.  See also @i{supplied-p parameter}.
 
-@IGindex{ordinary function}
+@IGindex ordinary function
 @item @b{ordinary function}
  @i{n.} 
   a @i{function} that is not a @i{generic function}.
 
-@IGindex{ordinary lambda list}
+@IGindex ordinary lambda list
 @item @b{ordinary lambda list}
  @i{n.} 
   the kind of @i{lambda list} used by @b{lambda}.
   See @i{modified lambda list} and @i{extended lambda list}.
   ``@b{defun} uses an ordinary lambda list.''
 
-@IGindex{otherwise inaccessible part}
+@IGindex otherwise inaccessible part
 @item @b{otherwise inaccessible part}
  @i{n.} (of an @i{object}, O_1)
   an @i{object}, O_2, which would be made @i{inaccessible} if 
   O_1 were made @i{inaccessible}.  (Every @i{object} is an
   @i{otherwise inaccessible part} of itself.)
 
-@IGindex{output}
+@IGindex output
 @item @b{output}
  @i{adj.} (of a @i{stream})
   supporting output operations (@i{i.e.}, being a ``data sink'').
@@ -3905,12 +3905,12 @@ transitive verb
 @subheading @b{P}
 @table @asis
 
-@IGindex{package}
+@IGindex package
 @item @b{package}
  @i{n.} 
   an @i{object} of @i{type} @b{package}.
 
-@IGindex{package cell}
+@IGindex package cell
 @item @b{package cell}
  @i{n.} @i{Trad.} (of a @i{symbol})
   The @i{place} in a @i{symbol} that holds one of
@@ -3919,7 +3919,7 @@ transitive verb
   @b{nil} if no such @i{package} exists or is known.
   See the @i{function} @b{symbol-package}.
 
-@IGindex{package designator}
+@IGindex package designator
 @item @b{package designator}
  @i{n.}
   a @i{designator} for a @i{package}; that is,
@@ -3931,7 +3931,7 @@ transitive verb
 		       or as one of its @i{nicknames}),
    or a @i{package} (denoting itself).
 
-@IGindex{package marker}
+@IGindex package marker
 @item @b{package marker}
  @i{n.} 
   a character which is used in the textual notation for a symbol 
@@ -3939,7 +3939,7 @@ transitive verb
   is @i{colon} in the @i{standard readtable}.
   See @ref{Character Syntax}.
 
-@IGindex{package prefix}
+@IGindex package prefix
 @item @b{package prefix}
  @i{n.} 
   a notation preceding the @i{name} of a @i{symbol} in text that is
@@ -3947,7 +3947,7 @@ transitive verb
   followed by one or more @i{package markers}, and which indicates that
   the symbol is looked up in the indicated @i{package}.
 
-@IGindex{package registry}
+@IGindex package registry
 @item @b{package registry}
  @i{n.}
   A mapping of @i{names} to @i{package} @i{objects}.
@@ -3959,7 +3959,7 @@ transitive verb
   and @b{list-all-packages} operate only on @i{packages} that exist
   in the @i{package registry}.
 
-@IGindex{pairwise}
+@IGindex pairwise
 @item @b{pairwise}
  @i{adv.} (of an adjective on a set)
   applying individually to all possible pairings of elements of the set.
@@ -3968,7 +3968,7 @@ transitive verb
             B and C are disjoint, and
             A and C are disjoint.''
 
-@IGindex{parallel}
+@IGindex parallel
 @item @b{parallel}
  @i{adj.} @i{Trad.} (of @i{binding} or @i{assignment})
   done in the style of @b{psetq}, @b{let}, or @b{do};
@@ -3978,7 +3978,7 @@ transitive verb
   since the @i{forms} that produce @i{values} are evaluated @i{sequentially}.
   See @i{sequential}.
 
-@IGindex{parameter}
+@IGindex parameter
 @item @b{parameter}
  @i{n.} 
   1. (of a @i{function})
@@ -3997,7 +3997,7 @@ transitive verb
      ``In @t{"~3,'0D"}, the number @t{3} and the character
 	       @t{#\0} are parameters to the @t{~D} format directive.''
 
-@IGindex{parameter specializer}
+@IGindex parameter specializer
 @item @b{parameter specializer}
  @i{n.} 
   1. (of a @i{method}) an @i{expression} which constrains the
@@ -4007,7 +4007,7 @@ transitive verb
   2. a @i{class},
      or a @i{list} @t{(eql @i{object})}.
 
-@IGindex{parameter specializer name}
+@IGindex parameter specializer name
 @item @b{parameter specializer name}
  @i{n.} 
   1. (of a @i{method} definition) an expression used in code to
@@ -4019,7 +4019,7 @@ transitive verb
 
      or a @i{list} @t{(eql @i{form})}.
 
-@IGindex{pathname}
+@IGindex pathname
 @item @b{pathname}
  @i{n.} 
   an @i{object} of @i{type} @b{pathname}, which is a structured representation 
@@ -4031,7 +4031,7 @@ transitive verb
     a ``type,'' and
     a ``version.''
 
-@IGindex{pathname designator}
+@IGindex pathname designator
 @item @b{pathname designator}
  @i{n.}
   a @i{designator} for a @i{pathname}; that is,
@@ -4048,7 +4048,7 @@ transitive verb
     or a @i{pathname} (denoting itself).
   See @ref{File Operations on Open and Closed Streams}.
 
-@IGindex{physical pathname}
+@IGindex physical pathname
 @item @b{physical pathname}
  @i{n.}
   a @i{pathname} that is not a @i{logical pathname}.
@@ -4058,24 +4058,24 @@ transitive verb
 	         abstract concept, and the other to an object (a form), but the usages
 		 have become blurred.]
 
-@IGindex{place}
+@IGindex place
 @item @b{place}
  @i{n.} 
   1. a @i{form} which is suitable for use as a @i{generalized reference}.
   2. the conceptual location referred to by such a @i{place}_1.
 
-@IGindex{plist}
+@IGindex plist
 @item @b{plist}
  pronounced 'p\=e ,list  @i{n.} 
   a @i{property list}.
 
-@IGindex{portable}
+@IGindex portable
 @item @b{portable}
  @i{adj.} (of @i{code})
   required to produce equivalent results and observable side effects
   in all @i{conforming implementations}.
 
-@IGindex{potential copy}
+@IGindex potential copy
 @item @b{potential copy}
  @i{n.} (of an @i{object} O_1 subject to constriants)
   an @i{object} O_2 that if the specified constraints are satisfied
@@ -4084,7 +4084,7 @@ transitive verb
   resembles a @i{copy} of O_1 except that it has been modified as
   necessary to satisfy the constraints.
 
-@IGindex{potential number}
+@IGindex potential number
 @item @b{potential number}
  @i{n.} 
   A textual notation that might be parsed by the @i{Lisp reader} 
@@ -4094,7 +4094,7 @@ transitive verb
   a @i{number} or it is not.
   See @ref{Potential Numbers as Tokens}.
 
-@IGindex{pprint dispatch table}
+@IGindex pprint dispatch table
 @item @b{pprint dispatch table}
  @i{n.} 
   an @i{object} that can be the @i{value} of @b{*print-pprint-dispatch*} 
@@ -4102,13 +4102,13 @@ transitive verb
   @b{*print-pretty*} is @i{true}.
   See @ref{Pretty Print Dispatch Tables}.
 
-@IGindex{predicate}
+@IGindex predicate
 @item @b{predicate}
  @i{n.} 
   a @i{function} that returns a @i{generalized boolean}
   as its first value.
 
-@IGindex{present}
+@IGindex present
 @item @b{present}
  @i{n.}
   1. (of a @i{feature} in a @i{Lisp image})
@@ -4118,12 +4118,12 @@ transitive verb
      being accessible in that @i{package} directly,
      rather than being inherited from another @i{package}.
 
-@IGindex{pretty print}
+@IGindex pretty print
 @item @b{pretty print}
  @i{v.t.} (an @i{object})
   to invoke the @i{pretty printer} on the @i{object}.
 
-@IGindex{pretty printer}
+@IGindex pretty printer
 @item @b{pretty printer}
  @i{n.} 
   the procedure that prints the character representation of an
@@ -4134,14 +4134,14 @@ transitive verb
   makes it easier for human readers to parse visually.
   See the @i{variable} @b{*print-pprint-dispatch*} and @ref{The Lisp Pretty Printer}.
 
-@IGindex{pretty printing stream}
+@IGindex pretty printing stream
 @item @b{pretty printing stream}
  @i{n.} 
   a @i{stream} that does pretty printing.  Such streams are created by
   the @i{function} @b{pprint-logical-block} as a link between the output stream 
   and the logical block.
 
-@IGindex{primary method}
+@IGindex primary method
 @item @b{primary method}
  @i{n.} 
   a member of one of two sets of @i{methods} 
@@ -4151,7 +4151,7 @@ transitive verb
   How these sets are determined is dependent on the @i{method combination} type;
   see @ref{Introduction to Methods}.
 
-@IGindex{primary value}
+@IGindex primary value
 @item @b{primary value}
  @i{n.} (of @i{values} resulting from the
 				   @i{evaluation} of a @i{form})
@@ -4159,7 +4159,7 @@ transitive verb
   ``The primary value returned by @b{truncate} is an
             integer quotient, truncated toward zero.''
 
-@IGindex{principal}
+@IGindex principal
 @item @b{principal}
  @i{adj.} (of a value returned by a @r{Common Lisp} @i{function} that
 			        implements a mathematically irrational or transcendental 
@@ -4168,12 +4168,12 @@ transitive verb
   mathematical function, being the particular @i{value} which the corresponding
   @r{Common Lisp} @i{function} has been defined to return.
 
-@IGindex{print name}
+@IGindex print name
 @item @b{print name}
  @i{n.} @i{Trad.} (usually of a @i{symbol})
   a @i{name}_3.
 
-@IGindex{printer control variable}
+@IGindex printer control variable
 @item @b{printer control variable}
  @i{n.} 
   a @i{variable} whose specific purpose is to control some action
@@ -4182,109 +4182,109 @@ transitive verb
   or else some @i{implementation-defined} @i{variable} which is
      defined by the @i{implementation} to be a @i{printer control variable}.
 
-@IGindex{printer escaping}
+@IGindex printer escaping
 @item @b{printer escaping}
  @i{n.}
   The combined state of the @i{printer control variables}
   @b{*print-escape*} and @b{*print-readably*}.
   If the value of either @b{*print-readably*} or @b{*print-escape*} is @i{true}, 
   then @i{printer escaping}
-@IGindex{printer escaping}
+@IGindex printer escaping
  is ``enabled'';
   otherwise (if the values of both @b{*print-readably*} and @b{*print-escape*}
 	     are @i{false}), 
   then @i{printer escaping} is ``disabled''.
 
-@IGindex{printing}
+@IGindex printing
 @item @b{printing}
  @i{adj.} (of a @i{character})
   being a @i{graphic} @i{character} other than @i{space}.
 
-@IGindex{process}
+@IGindex process
 @item @b{process}
  @i{v.t.} (a @i{form} by the @i{compiler})
   to perform @i{minimal compilation}, determining the time of 
   evaluation for a @i{form}, and possibly @i{evaluating} that
   @i{form} (if required).
 
-@IGindex{processor}
+@IGindex processor
 @item @b{processor}
  @i{n.}, @i{ANSI}
   an @i{implementation}.
 
-@IGindex{proclaim}
+@IGindex proclaim
 @item @b{proclaim}
  @i{v.t.} (a @i{proclamation})
   to @i{establish} that @i{proclamation}.
 
-@IGindex{proclamation}
+@IGindex proclamation
 @item @b{proclamation}
  @i{n.} 
   a @i{global declaration}.
 
-@IGindex{prog tag}
+@IGindex prog tag
 @item @b{prog tag}
  @i{n.} @i{Trad.} 
   a @i{go tag}.
 
-@IGindex{program}
+@IGindex program
 @item @b{program}
  @i{n.} @i{Trad.} 
   @r{Common Lisp} @i{code}.
 
-@IGindex{programmer}
+@IGindex programmer
 @item @b{programmer}
  @i{n.}
   an active entity, typically a human, that writes a @i{program},
   and that might or might not also be a @i{user} of the @i{program}.
 
-@IGindex{programmer code}
+@IGindex programmer code
 @item @b{programmer code}
  @i{n.} 
   @i{code} that is supplied by the programmer;
   that is, @i{code} that is not @i{system code}.
 
-@IGindex{proper list}
+@IGindex proper list
 @item @b{proper list}
  @i{n.} 
   A @i{list} terminated by the @i{empty list}.
   (The @i{empty list} is a @i{proper list}.)
   See @i{improper list}.
 
-@IGindex{proper name}
+@IGindex proper name
 @item @b{proper name}
  @i{n.} (of a @i{class})
   a @i{symbol} that @i{names} the @i{class} whose @i{name}
   is that @i{symbol}. 
   See the @i{functions} @b{class-name} and @b{find-class}.
 
-@IGindex{proper sequence}
+@IGindex proper sequence
 @item @b{proper sequence}
  @i{n.} 
   a @i{sequence} which is not an @i{improper list}; 
   that is, a @i{vector} or a @i{proper list}.
 
-@IGindex{proper subtype}
+@IGindex proper subtype
 @item @b{proper subtype}
  @i{n.} (of a @i{type})
   a @i{subtype} of the @i{type} which is not the @i{same} @i{type}
   as the @i{type} (@i{i.e.}, its @i{elements} are a ``proper subset'' of the 
   @i{type}).
 
-@IGindex{property}
+@IGindex property
 @item @b{property}
  @i{n.} (of a @i{property list})
   1. a conceptual pairing of a @i{property indicator} and its
      associated @i{property value} on a @i{property list}.
   2. a @i{property value}.
 
-@IGindex{property indicator}
+@IGindex property indicator
 @item @b{property indicator}
  @i{n.} (of a @i{property list}) 
   the @i{name} part of a @i{property}, used as a @i{key}
   when looking up a @i{property value} on a @i{property list}. 
 
-@IGindex{property list}
+@IGindex property list
 @item @b{property list}
  @i{n.} 
 
@@ -4298,14 +4298,14 @@ transitive verb
   2. (of a @i{symbol})
      the component of the @i{symbol} containing a @i{property list}.
 
-@IGindex{property value}
+@IGindex property value
 @item @b{property value}
  @i{n.} (of a @i{property indicator} on 
 				  a @i{property list})
   the @i{object} associated with the @i{property indicator}
   on the @i{property list}.
 
-@IGindex{purports to conform}
+@IGindex purports to conform
 @item @b{purports to conform}
  @i{v.}
   makes a good-faith claim of conformance.  
@@ -4321,12 +4321,12 @@ transitive verb
 @subheading @b{Q}
 @table @asis
 
-@IGindex{qualified method}
+@IGindex qualified method
 @item @b{qualified method}
  @i{n.} 
   a @i{method} that has one or more @i{qualifiers}.
 
-@IGindex{qualifier}
+@IGindex qualifier
 @item @b{qualifier}
  @i{n.} (of a @i{method} for a @i{generic function})
   one of possibly several @i{objects} used to annotate the @i{method} 
@@ -4337,13 +4337,13 @@ transitive verb
   and
    the semantics of those @i{qualifiers}.
 
-@IGindex{query I/O}
+@IGindex query I/O
 @item @b{query I/O}
  @i{n.} 
   the @i{bidirectional} @i{stream}
   that is the @i{value} of the @i{variable} @b{*query-io*}.
 
-@IGindex{quoted object}
+@IGindex quoted object
 @item @b{quoted object}
  @i{n.} 
   an @i{object} which is the second element of a
@@ -4353,7 +4353,7 @@ transitive verb
 @subheading @b{R}
 @table @asis
 
-@IGindex{radix}
+@IGindex radix
 @item @b{radix}
  @i{n.}
   an @i{integer} between 2 and 36, inclusive, which can be used 
@@ -4369,23 +4369,23 @@ transitive verb
    than @t{10}, so ``9b8a'' and ``9B8A'' denote the same @i{radix}
    @t{16} number.)
 
-@IGindex{random state}
+@IGindex random state
 @item @b{random state}
  @i{n.} 
   an @i{object} of @i{type} @b{random-state}.
 
-@IGindex{rank}
+@IGindex rank
 @item @b{rank}
  @i{n.} 
   a non-negative @i{integer} indicating the number of
   @i{dimensions} of an @i{array}.
 
-@IGindex{ratio}
+@IGindex ratio
 @item @b{ratio}
  @i{n.} 
   an @i{object} of @i{type} @b{ratio}.
 
-@IGindex{ratio marker}
+@IGindex ratio marker
 @item @b{ratio marker}
  @i{n.} 
   a character which is used in the textual notation for a @i{ratio}
@@ -4393,12 +4393,12 @@ transitive verb
   is @i{slash} in the @i{standard readtable}.
   See @ref{Character Syntax}.
 
-@IGindex{rational}
+@IGindex rational
 @item @b{rational}
  @i{n.} 
   an @i{object} of @i{type} @b{rational}.
 
-@IGindex{read}
+@IGindex read
 @item @b{read}
  @i{v.t.} 
 
@@ -4408,19 +4408,19 @@ transitive verb
   2. (an @i{object} from a @i{stream})
      to parse an @i{object} from its representation on the @i{stream}.
 
-@IGindex{readably}
+@IGindex readably
 @item @b{readably}
  @i{adv.} (of a manner of printing an @i{object} O_1)
   in such a way as to permit the @i{Lisp Reader} to later @i{parse}
   the printed output into an @i{object} O_2 that is @i{similar} to O_1.
 
-@IGindex{reader}
+@IGindex reader
 @item @b{reader}
  @i{n.}
   1. a @i{function} that @i{reads}_1 a @i{variable} or @i{slot}.
   2. the @i{Lisp reader}.
 
-@IGindex{reader macro}
+@IGindex reader macro
 @item @b{reader macro}
  @i{n.}
   1. a textual notation introduced by dispatch on one or two @i{characters} 
@@ -4434,19 +4434,19 @@ transitive verb
           @i{character} that follows it.
   (A @i{reader macro} is not a kind of @i{macro}.)
 
-@IGindex{reader macro function}
+@IGindex reader macro function
 @item @b{reader macro function}
  @i{n.}
   a @i{function} @i{designator} that denotes a @i{function}
   that implements a @i{reader macro}_2.
   See the @i{functions} @b{set-macro-character} and @b{set-dispatch-macro-character}.
 
-@IGindex{readtable}
+@IGindex readtable
 @item @b{readtable}
  @i{n.}
   an @i{object} of @i{type} @b{readtable}.
 
-@IGindex{readtable case}
+@IGindex readtable case
 @item @b{readtable case}
  @i{n.}
   an attribute of a @i{readtable}
@@ -4457,7 +4457,7 @@ transitive verb
         and the @i{Lisp printer}.
   See @ref{Effect of Readtable Case on the Lisp Reader} and @ref{Effect of Readtable Case on the Lisp Printer}.
 
-@IGindex{readtable designator}
+@IGindex readtable designator
 @item @b{readtable designator}
  @i{n.}
   a @i{designator} for a @i{readtable}; that is,
@@ -4466,14 +4466,14 @@ transitive verb
        @b{nil} (denoting the @i{standard readtable}),
     or a @i{readtable} (denoting itself).
 
-@IGindex{recognizable subtype}
+@IGindex recognizable subtype
 @item @b{recognizable subtype}
  @i{n.} (of a @i{type})
   a @i{subtype} of the @i{type} which can be reliably detected 
   to be such by the @i{implementation}.
   See the @i{function} @b{subtypep}.
 
-@IGindex{reference}
+@IGindex reference
 @item @b{reference}
  @i{n.}, @i{v.t.} 
   1. @i{n.} an act or occurrence of referring to an @i{object},
@@ -4483,7 +4483,7 @@ transitive verb
      @i{exit point}, a @i{tag}, or an @i{environment},
      usually by @i{name}.
 
-@IGindex{registered package}
+@IGindex registered package
 @item @b{registered package}
  @i{n.}
   a @i{package} @i{object} that is installed in the @i{package registry}.
@@ -4494,7 +4494,7 @@ transitive verb
    are @i{registered packages}.  @i{Registered packages} can be turned into
    @i{unregistered packages} by @b{delete-package}.)
 
-@IGindex{relative}
+@IGindex relative
 @item @b{relative}
  @i{adj.}
   1. (of a @i{time})
@@ -4511,45 +4511,45 @@ transitive verb
 	       pathname if the host file system is Unix.''
   See @i{absolute}.
 
-@IGindex{repertoire}
+@IGindex repertoire
 @item @b{repertoire}
  @i{n.}, @i{ISO}
   a @i{subtype} of @b{character}.  See @ref{Character Repertoires}.
 
-@IGindex{report}
+@IGindex report
 @item @b{report}
  @i{n.} (of a @i{condition})
   to @i{call} the @i{function} @b{print-object} on the @i{condition} 
   in an @i{environment} where the @i{value} of @b{*print-escape*} is @i{false}.
 
-@IGindex{report message}
+@IGindex report message
 @item @b{report message}
  @i{n.}
   the text that is output by a @i{condition reporter}.
 
-@IGindex{required parameter}
+@IGindex required parameter
 @item @b{required parameter}
  @i{n.}
   A @i{parameter} for which a corresponding positional @i{argument}
   must be supplied when @i{calling} the @i{function}.
 
-@IGindex{rest list}
+@IGindex rest list
 @item @b{rest list}
  @i{n.} (of a @i{function} having a @i{rest parameter})
   The @i{list} to which the @i{rest parameter} is @i{bound} on some
   particular @i{call} to the @i{function}.
 
-@IGindex{rest parameter}
+@IGindex rest parameter
 @item @b{rest parameter}
  @i{n.}
   A @i{parameter} which was introduced by @b{&rest}.
 
-@IGindex{restart}
+@IGindex restart
 @item @b{restart}
  @i{n.} 
   an @i{object} of @i{type} @b{restart}.
 
-@IGindex{restart designator}
+@IGindex restart designator
 @item @b{restart designator}
  @i{n.}
   a @i{designator} for a @i{restart}; that is,
@@ -4560,7 +4560,7 @@ transitive verb
 	  @i{restart} whose @i{name} is that @i{symbol}),
     or a @i{restart} (denoting itself).
 
-@IGindex{restart function}
+@IGindex restart function
 @item @b{restart function}
  @i{n.}
   a @i{function} that invokes a @i{restart}, as if by @b{invoke-restart}.
@@ -4581,7 +4581,7 @@ transitive verb
 @end group
 @end format
 
-@IGindex{return}
+@IGindex return
 @item @b{return}
  @i{v.t.} (of @i{values})
   1. (from a @i{block}) to transfer control and @i{values} from the @i{block};
@@ -4589,12 +4589,12 @@ transitive verb
      without doing any further evaluation of the @i{forms} in its body.
   2. (from a @i{form}) to @i{yield} the @i{values}.
 
-@IGindex{return value}
+@IGindex return value
 @item @b{return value}
  @i{n.} @i{Trad.} 
   a @i{value}_1
 
-@IGindex{right-parenthesis}
+@IGindex right-parenthesis
 @item @b{right-parenthesis}
  @i{n.}
   the @i{standard character} ``@t{)}'',
@@ -4603,25 +4603,25 @@ transitive verb
    or ``close parenthesis''
   See @i{Figure~2--5}.
 
-@IGindex{run time}
+@IGindex run time
 @item @b{run time}
  @i{n.}
   1. @i{load time}
   2. @i{execution time}
 
-@IGindex{run-time compiler}
+@IGindex run-time compiler
 @item @b{run-time compiler}
  @i{n.}
   refers to the @b{compile} function or to @i{implicit compilation}, 
   for which the compilation and run-time @i{environments} are maintained 
   in the same @i{Lisp image}.
 
-@IGindex{run-time definition}
+@IGindex run-time definition
 @item @b{run-time definition}
  @i{n.}
   a definition in the @i{run-time environment}.
 
-@IGindex{run-time environment}
+@IGindex run-time environment
 @item @b{run-time environment}
  @i{n.}
   the @i{environment} in which a program is @i{executed}.
@@ -4630,7 +4630,7 @@ transitive verb
 @subheading @b{S}
 @table @asis
 
-@IGindex{safe}
+@IGindex safe
 @item @b{safe}
  @i{adj.} 
   1. (of @i{code})
@@ -4639,7 +4639,7 @@ transitive verb
      See @b{optimize}.
   2. (of a @i{call}) a @i{safe call}.
 
-@IGindex{safe call}
+@IGindex safe call
 @item @b{safe call}
  @i{n.}
   a @i{call} in which 
@@ -4649,7 +4649,7 @@ transitive verb
   are all @i{safe}_1 @i{code}.
   For more detailed information, see @ref{Safe and Unsafe Calls}.
 
-@IGindex{same}
+@IGindex same
 @item @b{same}
  @i{adj.} 
   1. (of @i{objects} under a specified @i{predicate}) 
@@ -4672,7 +4672,7 @@ transitive verb
 				      @t{(unsigned-byte 1)},
 				  and @t{bit} are the same.''
 
-@IGindex{satisfy the test}
+@IGindex satisfy the test
 @item @b{satisfy the test}
  @i{v.} 
        (of an @i{object} being considered by a @i{sequence function})
@@ -4699,7 +4699,7 @@ transitive verb
      returns @i{false} given the same @i{arguments}.
      See @ref{Satisfying a Two-Argument Test}.
 
-@IGindex{scope}
+@IGindex scope
 @item @b{scope}
  @i{n.} 
   the structural or textual region of code in which @i{references} 
@@ -4707,13 +4707,13 @@ transitive verb
   a @i{tag}, or an @i{environment} (usually by @i{name}) 
   can occur.
 
-@IGindex{script}
+@IGindex script
 @item @b{script}
  @i{n.} @i{ISO}
   one of possibly several sets that form an @i{exhaustive partition}
   of the type @b{character}.  See @ref{Character Scripts}.
 
-@IGindex{secondary value}
+@IGindex secondary value
 @item @b{secondary value}
  @i{n.} (of @i{values} resulting from the
 				   @i{evaluation} of a @i{form})
@@ -4721,13 +4721,13 @@ transitive verb
   or else @b{nil} if there are fewer than two @i{values}.
   ``The secondary value returned by @b{truncate} is a remainder.''
 
-@IGindex{section}
+@IGindex section
 @item @b{section}
  @i{n.}
   a partitioning of output by a @i{conditional newline} on a @i{pretty printing stream}.
   See @ref{Dynamic Control of the Arrangement of Output}.
 
-@IGindex{self-evaluating object}
+@IGindex self-evaluating object
 @item @b{self-evaluating object}
  @i{n.}
   an @i{object} that is neither a @i{symbol} nor a
@@ -4736,7 +4736,7 @@ transitive verb
   it @i{yields} itself as its only @i{value}.
   ``Strings are self-evaluating objects.''
 
-@IGindex{semi-standard}
+@IGindex semi-standard
 @item @b{semi-standard}
  @i{adj.} (of a language feature)
   not required to be implemented by any @i{conforming implementation},
@@ -4747,19 +4747,19 @@ transitive verb
   among @i{implementations} that might stand in the way of future 
   standardization.
 
-@IGindex{semicolon}
+@IGindex semicolon
 @item @b{semicolon}
  @i{n.}
   the @i{standard character} that is called ``semicolon'' (@t{;}).
   See @i{Figure~2--5}.
 
-@IGindex{sequence}
+@IGindex sequence
 @item @b{sequence}
  @i{n.} 
   1. an ordered collection of elements
   2. a @i{vector} or a @i{list}.
 
-@IGindex{sequence function}
+@IGindex sequence function
 @item @b{sequence function}
  @i{n.}
   one of the @i{functions} in @i{Figure~17--1},
@@ -4767,7 +4767,7 @@ transitive verb
      that operates on one or more @i{sequences}.
      and that is defined by the @i{implementation} to be a @i{sequence function}.
 
-@IGindex{sequential}
+@IGindex sequential
 @item @b{sequential}
  @i{adj.} @i{Trad.} (of @i{binding} or @i{assignment})
   done in the style of @b{setq}, @b{let*}, or @b{do*};
@@ -4775,12 +4775,12 @@ transitive verb
   with the @i{assignments} or @i{bindings} of the @i{variables} (or @i{places}).
   See @i{parallel}.
 
-@IGindex{sequentially}
+@IGindex sequentially
 @item @b{sequentially}
  @i{adv.}
   in a @i{sequential} way.
 
-@IGindex{serious condition}
+@IGindex serious condition
 @item @b{serious condition}
  @i{n.} 
   a @i{condition} of @i{type} @b{serious-condition}, 
@@ -4788,26 +4788,26 @@ transitive verb
   severe that entry into the @i{debugger} should be expected if 
   the @i{condition} is @i{signaled} but not @i{handled}.
 
-@IGindex{session}
+@IGindex session
 @item @b{session}
  @i{n.}
   the conceptual aggregation of events in a @i{Lisp image} from the time
   it is started to the time it is terminated.
 
-@IGindex{set}
+@IGindex set
 @item @b{set}
  @i{v.t.} @i{Trad.} (any @i{variable}
 				     or a @i{symbol} that 
 				        is the @i{name} of a @i{dynamic variable})
   to @i{assign} the @i{variable}.
 
-@IGindex{setf expander}
+@IGindex setf expander
 @item @b{setf expander}
  @i{n.} 
   a function used by @b{setf} to compute the @i{setf expansion}
   of a @i{place}.
 
-@IGindex{setf expansion}
+@IGindex setf expansion
 @item @b{setf expansion}
  @i{n.} 
   a set of five @i{expressions}_1 that, taken together, describe 
@@ -4816,17 +4816,17 @@ transitive verb
        @i{place} are evaluated.
   See @ref{Setf Expansions}.
 
-@IGindex{setf function}
+@IGindex setf function
 @item @b{setf function}
  @i{n.}
   a @i{function} whose @i{name} is @t{(setf @i{symbol})}.
 
-@IGindex{setf function name}
+@IGindex setf function name
 @item @b{setf function name}
  @i{n.} (of a @i{symbol} @i{S})
   the @i{list} @t{(setf @i{S})}.
 
-@IGindex{shadow}
+@IGindex shadow
 @item @b{shadow}
  @i{v.t.} 
   1. to override the meaning of.
@@ -4838,12 +4838,12 @@ transitive verb
      ``That package shadows the symbol @t{cl:car} with
                its own symbol @t{car}.''
 
-@IGindex{shadowing symbol}
+@IGindex shadowing symbol
 @item @b{shadowing symbol}
  @i{n.} (in a @i{package})
   an @i{element} of the @i{package}'s @i{shadowing symbols list}.
 
-@IGindex{shadowing symbols list}
+@IGindex shadowing symbols list
 @item @b{shadowing symbols list}
  @i{n.} (of a @i{package})
   a @i{list}, associated with the @i{package}, 
@@ -4851,7 +4851,7 @@ transitive verb
   detected when packages are @i{used}.
   See the @i{function} @b{package-shadowing-symbols}.
 
-@IGindex{shared slot}
+@IGindex shared slot
 @item @b{shared slot}
  @i{n.} (of a @i{class}) 
   a @i{slot} @i{accessible} in more than one @i{instance} 
@@ -4860,31 +4860,31 @@ transitive verb
   @i{indirect instances} whose @i{class} does not 
   @i{shadow}_1 the @i{slot}.
 
-@IGindex{sharpsign}
+@IGindex sharpsign
 @item @b{sharpsign}
  @i{n.}
   the @i{standard character} that is variously called ``number sign,'' ``sharp,''
   or ``sharp sign'' (@t{#}).
   See @i{Figure~2--5}.
 
-@IGindex{short float}
+@IGindex short float
 @item @b{short float}
  @i{n.} 
   an @i{object} of @i{type} @b{short-float}.
 
-@IGindex{sign}
+@IGindex sign
 @item @b{sign}
  @i{n.} 
   one of the @i{standard characters} ``@t{+}'' or ``@t{-}''.
 
-@IGindex{signal}
+@IGindex signal
 @item @b{signal}
  @i{v.} 
   to announce, using a standard protocol, that a particular situation,
   represented by a @i{condition}, has been detected.  
   See @ref{Condition System Concepts}.
 
-@IGindex{signature}
+@IGindex signature
 @item @b{signature}
  @i{n.} (of a @i{method})
   a description of the @i{parameters} and
@@ -4894,12 +4894,12 @@ transitive verb
   @i{argument} conventions for its other, non-required 
   @i{arguments}.
 
-@IGindex{similar}
+@IGindex similar
 @item @b{similar}
  @i{adj.} (of two @i{objects})
   defined to be equivalent under the @i{similarity} relationship.
 
-@IGindex{similarity}
+@IGindex similarity
 @item @b{similarity}
  @i{n.}
   a two-place conceptual equivalence predicate, 
@@ -4908,7 +4908,7 @@ transitive verb
   can be understood to be equivalent under this predicate.
   See @ref{Literal Objects in Compiled Files}.
 
-@IGindex{simple}
+@IGindex simple
 @item @b{simple}
  @i{adj.}
   1. (of an @i{array}) being of @i{type} @b{simple-array}.
@@ -4917,38 +4917,38 @@ transitive verb
      or else having @i{implementation-defined} @i{attributes}
       each of which has the @i{null} value for that @i{attribute}.
 
-@IGindex{simple array}
+@IGindex simple array
 @item @b{simple array}
  @i{n.} 
   an @i{array} of @i{type} @b{simple-array}.
 
-@IGindex{simple bit array}
+@IGindex simple bit array
 @item @b{simple bit array}
  @i{n.}
   a @i{bit array} that is a @i{simple array};
   that is, an @i{object} of @i{type} @t{(simple-array bit)}.
 
-@IGindex{simple bit vector}
+@IGindex simple bit vector
 @item @b{simple bit vector}
  @i{n.} 
   a @i{bit vector} of @i{type} @b{simple-bit-vector}.
 
-@IGindex{simple condition}
+@IGindex simple condition
 @item @b{simple condition}
  @i{n.} 
   a @i{condition} of @i{type} @b{simple-condition}.
 
-@IGindex{simple general vector}
+@IGindex simple general vector
 @item @b{simple general vector}
  @i{n.} 
   a @i{simple vector}.
 
-@IGindex{simple string}
+@IGindex simple string
 @item @b{simple string}
  @i{n.} 
   a @i{string} of @i{type} @b{simple-string}.
 
-@IGindex{simple vector}
+@IGindex simple vector
 @item @b{simple vector}
  @i{n.}
   a @i{vector} of @i{type} @b{simple-vector},
@@ -4956,7 +4956,7 @@ transitive verb
   Not all @i{vectors} that are @i{simple} are @i{simple vectors}---only
   those that have @i{element type} @b{t}.
 
-@IGindex{single escape}
+@IGindex single escape
 @item @b{single escape}
  @i{n.}, @i{adj.}
   1. @i{n.} the @i{syntax type} of a @i{character} 
@@ -4970,12 +4970,12 @@ transitive verb
      (In the @i{standard readtable},
       @i{slash} is the only @i{single escape}.)
 
-@IGindex{single float}
+@IGindex single float
 @item @b{single float}
  @i{n.} 
   an @i{object} of @i{type} @b{single-float}.
 
-@IGindex{single-quote}
+@IGindex single-quote
 @item @b{single-quote}
  @i{n.}
   the @i{standard character} that is variously called
@@ -4985,18 +4985,18 @@ transitive verb
    or ``single quote'' (@t{'}).
   See @i{Figure~2--5}.
 
-@IGindex{singleton}
+@IGindex singleton
 @item @b{singleton}
  @i{adj.} (of a @i{sequence})
   having only one @i{element}.
   ``@t{(list 'hello)} returns a singleton list.''
 
-@IGindex{situation}
+@IGindex situation
 @item @b{situation}
  @i{n.} 
   the @i{evaluation} of a @i{form} in a specific @i{environment}.
 
-@IGindex{slash}
+@IGindex slash
 @item @b{slash}
  @i{n.}
   the @i{standard character} that is variously called
@@ -5004,19 +5004,19 @@ transitive verb
     or ``slash'' (@t{/}).
   See @i{Figure~2--5}.
 
-@IGindex{slot}
+@IGindex slot
 @item @b{slot}
  @i{n.} 
   a component of an @i{object} that can store a @i{value}.
 
-@IGindex{slot specifier}
+@IGindex slot specifier
 @item @b{slot specifier}
  @i{n.}
   a representation of a @i{slot} 
   that includes the @i{name} of the @i{slot} and zero or more @i{slot} options.
   A @i{slot} option pertains only to a single @i{slot}.
 
-@IGindex{source code}
+@IGindex source code
 @item @b{source code}
  @i{n.} 
   @i{code} representing @i{objects} suitable for @i{evaluation}
@@ -5025,19 +5025,19 @@ transitive verb
 
     or by @i{compiler macro expansion}).
 
-@IGindex{source file}
+@IGindex source file
 @item @b{source file}
  @i{n.} 
   a @i{file} which contains a textual representation of @i{source code},
   that can be edited, @i{loaded}, or @i{compiled}.
 
-@IGindex{space}
+@IGindex space
 @item @b{space}
  @i{n.}
   the @i{standard character} <@i{Space}>,
   notated for the @i{Lisp reader} as @t{#\Space}.
 
-@IGindex{special form}
+@IGindex special form
 @item @b{special form}
  @i{n.} 
   a @i{list}, other than a @i{macro form}, which is a
@@ -5046,7 +5046,7 @@ transitive verb
   @i{environment} or control flow or both.  The first element of
   a @i{special form} is a @i{special operator}.
 
-@IGindex{special operator}
+@IGindex special operator
 @item @b{special operator}
  @i{n.} 
   one of a fixed set of @i{symbols}, 
@@ -5054,19 +5054,19 @@ transitive verb
   that may appear in the @i{car} of
   a @i{form} in order to identify the @i{form} as a @i{special form}.
 
-@IGindex{special variable}
+@IGindex special variable
 @item @b{special variable}
  @i{n.} @i{Trad.}
   a @i{dynamic variable}.
 
-@IGindex{specialize}
+@IGindex specialize
 @item @b{specialize}
  @i{v.t.} (a @i{generic function})
   to define a @i{method} for the @i{generic function}, or in other words,
   to refine the behavior of the @i{generic function} by giving it a specific
   meaning for a particular set of @i{classes} or @i{arguments}. 
 
-@IGindex{specialized}
+@IGindex specialized
 @item @b{specialized}
  @i{adj.} 
   1. (of a @i{generic function})
@@ -5078,14 +5078,14 @@ transitive verb
      ``@t{(make-array 5 :element-type 'bit)} makes an array of length
 	       five that is specialized for bits.''
 
-@IGindex{specialized lambda list}
+@IGindex specialized lambda list
 @item @b{specialized lambda list}
  @i{n.}
   an @i{extended lambda list} used in @i{forms} that @i{establish}
   @i{method} definitions, such as @b{defmethod}.
   See @ref{Specialized Lambda Lists}.
 
-@IGindex{spreadable argument list designator}
+@IGindex spreadable argument list designator
 @item @b{spreadable argument list designator}
  @i{n.}
   a @i{designator} for a @i{list} of @i{objects}; that is,
@@ -5097,7 +5097,7 @@ transitive verb
   ``The list (1 2 (3 4 5)) is a spreadable argument list designator for
 	    the list (1 2 3 4 5).''
 
-@IGindex{stack allocate}
+@IGindex stack allocate
 @item @b{stack allocate}
  @i{v.t.} @i{Trad.} 
   to allocate in a non-permanent way, such as on a stack.  Stack-allocation
@@ -5110,53 +5110,53 @@ transitive verb
   from @i{implementation} to @i{implementation}.  No
   @i{implementation} is ever required to perform stack-allocation.
 
-@IGindex{stack-allocated}
+@IGindex stack-allocated
 @item @b{stack-allocated}
  @i{adj.} @i{Trad.} 
   having been @i{stack allocated}.
 
-@IGindex{standard character}
+@IGindex standard character
 @item @b{standard character}
  @i{n.} 
   a @i{character} of @i{type} @b{standard-char}, which is one of a fixed set of 96
   such @i{characters} required to be present in all @i{conforming implementations}.
   See @ref{Standard Characters}.
 
-@IGindex{standard class}
+@IGindex standard class
 @item @b{standard class}
  @i{n.} 
   a @i{class} that is a @i{generalized instance} of @i{class} @b{standard-class}.
 
-@IGindex{standard generic function}
+@IGindex standard generic function
 @item @b{standard generic function}
 
   a @i{function} of @i{type} @b{standard-generic-function}.
 
-@IGindex{standard input}
+@IGindex standard input
 @item @b{standard input}
  @i{n.} 
   the @i{input} @i{stream} which is the @i{value} of the @i{dynamic variable}
   @b{*standard-input*}.
 
-@IGindex{standard method combination}
+@IGindex standard method combination
 @item @b{standard method combination}
  @i{n.} 
   the @i{method combination} named @b{standard}.
 
-@IGindex{standard object}
+@IGindex standard object
 @item @b{standard object}
  @i{n.} 
   an @i{object} that is 
   a @i{generalized instance} 
   of @i{class} @b{standard-object}.
 
-@IGindex{standard output}
+@IGindex standard output
 @item @b{standard output}
  @i{n.} 
   the @i{output} @i{stream} which is the @i{value} of the @i{dynamic variable}
   @b{*standard-output*}.
 
-@IGindex{standard pprint dispatch table}
+@IGindex standard pprint dispatch table
 @item @b{standard pprint dispatch table}
  @i{n.}
   A @i{pprint dispatch table} that is @i{different} from 
@@ -5173,7 +5173,7 @@ transitive verb
    As such, this phrase should be seen as an indefinite reference 
    in all cases except for anaphoric references.)
 
-@IGindex{standard readtable}
+@IGindex standard readtable
 @item @b{standard readtable}
  @i{n.}
   A @i{readtable} that is @i{different} from the @i{initial readtable},
@@ -5187,27 +5187,27 @@ transitive verb
    As such, this phrase should be seen as an indefinite reference 
    in all cases except for anaphoric references.)
 
-@IGindex{standard syntax}
+@IGindex standard syntax
 @item @b{standard syntax}
  @i{n.}
   the syntax represented by the @i{standard readtable} 
   and used as a reference syntax throughout this document.
   See @ref{Character Syntax}.
 
-@IGindex{standardized}
+@IGindex standardized
 @item @b{standardized}
  @i{adj.} (of a @i{name}, @i{object}, or definition)
   having been defined by @r{Common Lisp}.
   ``All standardized variables that are required to 
 	    hold bidirectional streams have ``@t{-io*}'' in their name.''
 
-@IGindex{startup environment}
+@IGindex startup environment
 @item @b{startup environment}
  @i{n.}
   the @i{global environment} of the running @i{Lisp image} 
   from which the @i{compiler} was invoked.
 
-@IGindex{step}
+@IGindex step
 @item @b{step}
  @i{v.t.}, @i{n.} 
   1. @i{v.t.} (an iteration @i{variable}) to @i{assign} the @i{variable}
@@ -5217,14 +5217,14 @@ transitive verb
   3. @i{v.t.} (@i{code}) to specially execute the @i{code}, pausing at
      intervals to allow user confirmation or intervention, usually for debugging.
 
-@IGindex{stream}
+@IGindex stream
 @item @b{stream}
  @i{n.} 
   an @i{object} that can be used with an input or output function to
   identify an appropriate source or sink of @i{characters} or 
   @i{bytes} for that operation.
 
-@IGindex{stream associated with a file}
+@IGindex stream associated with a file
 @item @b{stream associated with a file}
  @i{n.} 
   a @i{file stream}, or a @i{synonym stream} the @i{target} 
@@ -5237,7 +5237,7 @@ transitive verb
       @b{make-string-input-stream},
    or @b{make-string-output-stream}.
 
-@IGindex{stream designator}
+@IGindex stream designator
 @item @b{stream designator}
  @i{n.}
   a @i{designator} for a @i{stream}; that is,
@@ -5250,17 +5250,17 @@ transitive verb
              for @i{output} @i{stream designators}),
    or a @i{stream} (denoting itself).
 
-@IGindex{stream element type}
+@IGindex stream element type
 @item @b{stream element type}
  @i{n.} (of a @i{stream})
   the @i{type} of data for which the @i{stream} is specialized.
 
-@IGindex{stream variable}
+@IGindex stream variable
 @item @b{stream variable}
  @i{n.}
   a @i{variable} whose @i{value} must be a @i{stream}.
 
-@IGindex{stream variable designator}
+@IGindex stream variable designator
 @item @b{stream variable designator}
  @i{n.}
   a @i{designator} for a @i{stream variable}; that is,
@@ -5273,13 +5273,13 @@ transitive verb
              for @i{output} @i{stream variable designators}),
    or some other @i{symbol} (denoting itself).
 
-@IGindex{string}
+@IGindex string
 @item @b{string}
  @i{n.} 
   a specialized @i{vector} that is of @i{type} @b{string},
   and whose elements are of @i{type} @b{character} or a @i{subtype} of @i{type} @b{character}.
 
-@IGindex{string designator}
+@IGindex string designator
 @item @b{string designator}
  @i{n.}
   a @i{designator} for a @i{string}; that is,
@@ -5294,27 +5294,27 @@ transitive verb
   @i{implementations} that extend @b{string} must extend the meaning of 
   this term in a compatible way.
 
-@IGindex{string equal}
+@IGindex string equal
 @item @b{string equal}
  @i{adj.} 
   the @i{same} under @b{string-equal}.
 
-@IGindex{string stream}
+@IGindex string stream
 @item @b{string stream}
  @i{n.} 
   a @i{stream} of @i{type} @b{string-stream}.
 
-@IGindex{structure}
+@IGindex structure
 @item @b{structure}
  @i{n.} 
   an @i{object} of @i{type} @b{structure-object}.
 
-@IGindex{structure class}
+@IGindex structure class
 @item @b{structure class}
  @i{n.} 
   a @i{class} that is a @i{generalized instance} of @i{class} @b{structure-class}.
 
-@IGindex{structure name}
+@IGindex structure name
 @item @b{structure name}
  @i{n.}
   a @i{name} defined with @b{defstruct}.
@@ -5322,19 +5322,19 @@ transitive verb
   but there may be @i{implementation-dependent} situations 
   in which this is not so, if the @t{:type} option to @b{defstruct} is used.
 
-@IGindex{style warning}
+@IGindex style warning
 @item @b{style warning}
  @i{n.}
   a @i{condition} of @i{type} @b{style-warning}.
 
-@IGindex{subclass}
+@IGindex subclass
 @item @b{subclass}
  @i{n.} 
   a @i{class} that @i{inherits} from another @i{class}, 
   called a @i{superclass}.
   (No @i{class} is a @i{subclass} of itself.)
 
-@IGindex{subexpression}
+@IGindex subexpression
 @item @b{subexpression}
  @i{n.} (of an @i{expression})
   an @i{expression} that is contained within the @i{expression}. 
@@ -5343,7 +5343,7 @@ transitive verb
    @i{expression} since the @i{same} @i{object} can at once be
    a @i{subexpression} in one context, and not in another.)
 
-@IGindex{subform}
+@IGindex subform
 @item @b{subform}
  @i{n.} (of a @i{form})
   an @i{expression} that is a @i{subexpression} of the @i{form},
@@ -5352,19 +5352,19 @@ transitive verb
   ``@t{(f x)} and @t{x}, but not @t{exit}, are subforms of
 	    @t{(return-from exit (f x))}.''
 
-@IGindex{subrepertoire}
+@IGindex subrepertoire
 @item @b{subrepertoire}
  @i{n.} 
   a subset of a @i{repertoire}.
 
-@IGindex{subtype}
+@IGindex subtype
 @item @b{subtype}
  @i{n.} 
   a @i{type} whose membership is the same as or a proper subset of the
   membership of another @i{type}, called a @i{supertype}.
   (Every @i{type} is a @i{subtype} of itself.)
 
-@IGindex{superclass}
+@IGindex superclass
 @item @b{superclass}
  @i{n.} 
   a @i{class} from which another @i{class} 
@@ -5372,7 +5372,7 @@ transitive verb
   (No @i{class} is a @i{superclass} of itself.)
   See @i{subclass}.
 
-@IGindex{supertype}
+@IGindex supertype
 @item @b{supertype}
  @i{n.} 
   a @i{type} whose membership is the same as or a proper superset
@@ -5380,7 +5380,7 @@ transitive verb
   (Every @i{type} is a @i{supertype} of itself.)
   See @i{subtype}.
 
-@IGindex{supplied-p parameter}
+@IGindex supplied-p parameter
 @item @b{supplied-p parameter}
  @i{n.}
   a @i{parameter} which recieves its @i{generalized boolean} value
@@ -5389,18 +5389,18 @@ transitive verb
   (such as an @i{optional parameter} or a @i{rest parameter}).
   See @ref{Ordinary Lambda Lists}.
 
-@IGindex{symbol}
+@IGindex symbol
 @item @b{symbol}
  @i{n.} 
   an @i{object} of @i{type} @b{symbol}.
 
-@IGindex{symbol macro}
+@IGindex symbol macro
 @item @b{symbol macro}
  @i{n.} 
   a @i{symbol} that stands for another @i{form}.
   See the @i{macro} @b{symbol-macrolet}.
 
-@IGindex{synonym stream}
+@IGindex synonym stream
 @item @b{synonym stream}
  @i{n.} 
   1. a @i{stream} of @i{type} @b{synonym-stream}, 
@@ -5415,27 +5415,27 @@ transitive verb
      a @i{synonym stream} which has the @i{symbol} as its
      @i{synonym stream symbol}.
 
-@IGindex{synonym stream symbol}
+@IGindex synonym stream symbol
 @item @b{synonym stream symbol}
  @i{n.} (of a @i{synonym stream})
   the @i{symbol} which names the @i{dynamic variable} which has as its
   @i{value} another @i{stream} for which the @i{synonym stream}
   is an alias.
 
-@IGindex{syntax type}
+@IGindex syntax type
 @item @b{syntax type}
  @i{n.} (of a @i{character})
   one of several classifications, enumerated in @i{Figure~2--6},
   that are used for dispatch during parsing by the @i{Lisp reader}.
   See @ref{Character Syntax Types}.
 
-@IGindex{system class}
+@IGindex system class
 @item @b{system class}
  @i{n.} 
   a @i{class} that may be of @i{type} @b{built-in-class} in a @i{conforming implementation}
   and hence cannot be inherited by @i{classes} defined by @i{conforming programs}.
 
-@IGindex{system code}
+@IGindex system code
 @item @b{system code}
  @i{n.} 
   @i{code} supplied by the @i{implementation} to implement this specification
@@ -5448,7 +5448,7 @@ transitive verb
 @subheading @b{T}
 @table @asis
 
-@IGindex{t}
+@IGindex t
 @item @b{t}
  @i{n.} 
   1. a. the @i{boolean} representing true.
@@ -5461,13 +5461,13 @@ transitive verb
      @i{supertype} of all @i{types} (including itself).
   3. the @i{name} of the @i{superclass} of all @i{classes} except itself.
 
-@IGindex{tag}
+@IGindex tag
 @item @b{tag}
  @i{n.} 
   1. a @i{catch tag}.
   2. a @i{go tag}.
 
-@IGindex{tail}
+@IGindex tail
 @item @b{tail}
  @i{n.} (of a @i{list})
   an @i{object} that is the @i{same} as either some @i{cons}
@@ -5475,7 +5475,7 @@ transitive verb
   the @i{list}.
   ``The empty list is a tail of every proper list.''
 
-@IGindex{target}
+@IGindex target
 @item @b{target}
  @i{n.} 
   1. (of a @i{constructed stream}) 
@@ -5489,38 +5489,38 @@ transitive verb
    @i{target} of the first item in the chain, not the immediate target
    of the last item.)
 
-@IGindex{terminal I/O}
+@IGindex terminal I/O
 @item @b{terminal I/O}
  @i{n.} 
   the @i{bidirectional} @i{stream}
   that is the @i{value} of the @i{variable} @b{*terminal-io*}.
 
-@IGindex{terminating}
+@IGindex terminating
 @item @b{terminating}
  @i{n.} (of a @i{macro character})
   being such that, if it appears while parsing a token, it terminates that token.
   See @ref{Reader Algorithm}.
 
-@IGindex{tertiary value}
+@IGindex tertiary value
 @item @b{tertiary value}
  @i{n.} (of @i{values} resulting from the
 				   @i{evaluation} of a @i{form})
   the third @i{value}, if any,
   or else @b{nil} if there are fewer than three @i{values}.
 
-@IGindex{throw}
+@IGindex throw
 @item @b{throw}
  @i{v.} 
   to transfer control and @i{values} to a @i{catch}.
   See the @i{special operator} @b{throw}.
 
-@IGindex{tilde}
+@IGindex tilde
 @item @b{tilde}
  @i{n.}
   the @i{standard character} that is called ``tilde'' (@t{~}).
   See @i{Figure~2--5}.
 
-@IGindex{time}
+@IGindex time
 @item @b{time}
 
   a representation of a point (@i{absolute} @i{time}) 
@@ -5528,7 +5528,7 @@ transitive verb
   on a time line.
   See @i{decoded time}, @i{internal time}, and @i{universal time}.
 
-@IGindex{time zone}
+@IGindex time zone
 @item @b{time zone}
  @i{n.}
   a @i{rational} multiple of @t{1/3600} between @t{-24} (inclusive)
@@ -5542,13 +5542,13 @@ transitive verb
     that accompanies it does not depend on whether daylight savings time
     is in effect.)
 
-@IGindex{token}
+@IGindex token
 @item @b{token}
  @i{n.}
   a textual representation for a @i{number} or a @i{symbol}.
   See @ref{Interpretation of Tokens}.
 
-@IGindex{top level form}
+@IGindex top level form
 @item @b{top level form}
  @i{n.} 
   a @i{form} which is processed specially by @b{compile-file} for
@@ -5558,13 +5558,13 @@ transitive verb
   are not @i{subforms} of any other @i{form},
   and certain other cases.  See @ref{Processing of Top Level Forms}.
 
-@IGindex{trace output}
+@IGindex trace output
 @item @b{trace output}
  @i{n.} 
   the @i{output} @i{stream} which is the @i{value} of the @i{dynamic variable}
   @b{*trace-output*}.
 
-@IGindex{tree}
+@IGindex tree
 @item @b{tree}
  @i{n.} 
   1. a binary recursive data structure made up of @i{conses} and
@@ -5576,7 +5576,7 @@ transitive verb
   2. in general, any recursive data structure that has some notion of
      ``branches'' and @i{leaves}.
 
-@IGindex{tree structure}
+@IGindex tree structure
 @item @b{tree structure}
  @i{n.} (of a @i{tree}_1)
   the set of @i{conses} that make up the @i{tree}.
@@ -5587,7 +5587,7 @@ transitive verb
   are not themselves part of its @i{tree structure} 
   unless they are also @i{conses}.
 
-@IGindex{true}
+@IGindex true
 @item @b{true}
  @i{n.} 
   any @i{object} 
@@ -5595,14 +5595,14 @@ transitive verb
   and that is used to represent the success of a @i{predicate} test.
   See @i{t}_1.
 
-@IGindex{truename}
+@IGindex truename
 @item @b{truename}
  @i{n.} 
   1. the canonical @i{filename} of a @i{file} in the @i{file system}.
      See @ref{Truenames}.
   2. a @i{pathname} representing a @i{truename}_1.
 
-@IGindex{two-way stream}
+@IGindex two-way stream
 @item @b{two-way stream}
  @i{n.} 
   a @i{stream} of @i{type} @b{two-way-stream},
@@ -5610,7 +5610,7 @@ transitive verb
        receives its input  from an associated @i{input}  @i{stream} 
    and sends    its output to   an associated @i{output} @i{stream}.
 
-@IGindex{type}
+@IGindex type
 @item @b{type}
  @i{n.} 
   1. a set of @i{objects}, usually with common structure, behavior, or purpose.
@@ -5621,21 +5621,21 @@ transitive verb
      a @i{subtype} of that @i{type}.
      ``The type @b{vector} is an array type.''
 
-@IGindex{type declaration}
+@IGindex type declaration
 @item @b{type declaration}
  @i{n.} 
   a @i{declaration} that asserts that every reference to a 
   specified @i{binding} within the scope of the @i{declaration}
   results in some @i{object} of the specified @i{type}.
 
-@IGindex{type equivalent}
+@IGindex type equivalent
 @item @b{type equivalent}
  @i{adj.} (of two @i{types} X and Y)
   having the same @i{elements};
   that is, X is a @i{subtype} of Y 
        and Y is a @i{subtype} of X.
 
-@IGindex{type expand}
+@IGindex type expand
 @item @b{type expand}
  @i{n.}
   to fully expand a @i{type specifier}, removing any references to
@@ -5645,7 +5645,7 @@ transitive verb
   situations involving @i{type specifiers} are most easily described
   in terms of a fully expanded @i{type specifier}.)
 
-@IGindex{type specifier}
+@IGindex type specifier
 @item @b{type specifier}
  @i{n.} 
   an @i{expression} that denotes a @i{type}.
@@ -5657,38 +5657,38 @@ transitive verb
 @subheading @b{U}
 @table @asis
 
-@IGindex{unbound}
+@IGindex unbound
 @item @b{unbound}
  @i{adj.} 
   not having an associated denotation in a @i{binding}.
   See @i{bound}.
 
-@IGindex{unbound variable}
+@IGindex unbound variable
 @item @b{unbound variable}
  @i{n.}
   a @i{name} that is syntactically plausible as the name of a
   @i{variable} but which is not @i{bound} 
   in the @i{variable} @i{namespace}.
 
-@IGindex{undefined function}
+@IGindex undefined function
 @item @b{undefined function}
  @i{n.}
   a @i{name} that is syntactically plausible as the name of a
   @i{function} but which is not @i{bound}
   in the @i{function} @i{namespace}.
 
-@IGindex{unintern}
+@IGindex unintern
 @item @b{unintern}
  @i{v.t.} (a @i{symbol} in a @i{package})
   to make the @i{symbol} not be @i{present} in that @i{package}.
   (The @i{symbol} might continue to be @i{accessible} by inheritance.)
 
-@IGindex{uninterned}
+@IGindex uninterned
 @item @b{uninterned}
  @i{adj.} (of a @i{symbol}) 
   not @i{accessible} in any @i{package}; @i{i.e.}, not @i{interned}_1.
 
-@IGindex{universal time}
+@IGindex universal time
 @item @b{universal time}
  @i{n.}
   @i{time}, represented as a non-negative @i{integer} number of seconds.
@@ -5696,19 +5696,19 @@ transitive verb
   from the beginning of the year 1900 (ignoring @i{leap seconds}).
   See @ref{Universal Time}.
 
-@IGindex{unqualified method}
+@IGindex unqualified method
 @item @b{unqualified method}
  @i{n.} 
   a @i{method} with no @i{qualifiers}.
 
-@IGindex{unregistered package}
+@IGindex unregistered package
 @item @b{unregistered package}
  @i{n.}
   a @i{package} @i{object} that is not present in the @i{package registry}.
   An @i{unregistered package} has no @i{name}; @i{i.e.}, its @i{name} is @b{nil}.
   See the @i{function} @b{delete-package}.
 
-@IGindex{unsafe}
+@IGindex unsafe
 @item @b{unsafe}
  @i{adj.} (of @i{code})
   not @i{safe}.  (Note that, unless explicitly specified otherwise,
@@ -5718,13 +5718,13 @@ transitive verb
   means that certain kinds of error checking are not reliably enabled
   but does not guarantee that error checking is definitely disabled.)
 
-@IGindex{unsafe call}
+@IGindex unsafe call
 @item @b{unsafe call}
  @i{n.}
   a @i{call} that is not a @i{safe call}.
   For more detailed information, see @ref{Safe and Unsafe Calls}.
 
-@IGindex{upgrade}
+@IGindex upgrade
 @item @b{upgrade}
  @i{v.t.} (a declared @i{type} to an actual @i{type})
   1. (when creating an @i{array})
@@ -5738,7 +5738,7 @@ transitive verb
      when choosing an appropriately @i{specialized} @i{complex} representation.
      See the @i{function} @b{upgraded-complex-part-type}.
 
-@IGindex{upgraded array element type}
+@IGindex upgraded array element type
 @item @b{upgraded array element type}
  @i{n.} (of a @i{type})
   a @i{type} that is a @i{supertype} of the @i{type}
@@ -5747,7 +5747,7 @@ transitive verb
   for object creation or type discrimination.
   See @ref{Array Upgrading}.
 
-@IGindex{upgraded complex part type}
+@IGindex upgraded complex part type
 @item @b{upgraded complex part type}
  @i{n.} (of a @i{type})
   a @i{type} that is a @i{supertype} of the @i{type}
@@ -5756,7 +5756,7 @@ transitive verb
   for object creation or type discrimination.
   See the @i{function} @b{upgraded-complex-part-type}.
 
-@IGindex{uppercase}
+@IGindex uppercase
 @item @b{uppercase}
  @i{adj.} (of a @i{character})
      being among @i{standard characters} corresponding to
@@ -5765,7 +5765,7 @@ transitive verb
       that is defined by the @i{implementation} to be @i{uppercase}.
   See @ref{Characters With Case}.
 
-@IGindex{use}
+@IGindex use
 @item @b{use}
  @i{v.t.} (a @i{package} P_1)
   to @i{inherit} the @i{external symbols} of P_1.
@@ -5775,14 +5775,14 @@ transitive verb
    unless they are explicitly @i{exported}.)
   ``The package @t{CL-USER} uses the package @t{CL}.''
 
-@IGindex{use list}
+@IGindex use list
 @item @b{use list}
  @i{n.} (of a @i{package})
   a (possibly empty) @i{list} associated with each @i{package}
   which determines what other @i{packages} are currently being
   @i{used} by that @i{package}.
 
-@IGindex{user}
+@IGindex user
 @item @b{user}
  @i{n.} 
   an active entity, typically a human, that invokes or interacts with a
@@ -5792,7 +5792,7 @@ transitive verb
 @subheading @b{V}
 @table @asis
 
-@IGindex{valid array dimension}
+@IGindex valid array dimension
 @item @b{valid array dimension}
  @i{n.} 
   a @i{fixnum} suitable for use as an @i{array} @i{dimension}.
@@ -5803,7 +5803,7 @@ transitive verb
   that the product of all of the @i{dimensions} be less than the @i{value} of 
   @b{array-total-size-limit}.
 
-@IGindex{valid array index}
+@IGindex valid array index
 @item @b{valid array index}
  @i{n.} (of an @i{array})
   a @i{fixnum} suitable for use as one of possibly several indices needed
@@ -5820,7 +5820,7 @@ transitive verb
 	    valid array indices for the first  dimension are @t{0} and~@t{1}, and
 	    valid array indices for the second dimension are @t{0}, @t{1} and~@t{2}.''
 
-@IGindex{valid array row-major index}
+@IGindex valid array row-major index
 @item @b{valid array row-major index}
  @i{n.} (of an @i{array},
 					     which might have any number 
@@ -5831,7 +5831,7 @@ transitive verb
   Such a @i{fixnum} must be greater than or equal to zero,
   and less than the @i{array total size} of the @i{array}.
 
-@IGindex{valid fill pointer}
+@IGindex valid fill pointer
 @item @b{valid fill pointer}
  @i{n.} (of an @i{array})
   a @i{fixnum} suitable for use as a @i{fill pointer} for the @i{array}.
@@ -5842,13 +5842,13 @@ transitive verb
 		 text found in make-pathname, but look wrong to me.
 		 I'll fix them later.]
 
-@IGindex{valid logical pathname host}
+@IGindex valid logical pathname host
 @item @b{valid logical pathname host}
  @i{n.}
   a @i{string} that has been defined as the name of a @i{logical host}.
   See the @i{function} @b{load-logical-pathname-translations}.
 
-@IGindex{valid pathname device}
+@IGindex valid pathname device
 @item @b{valid pathname device}
  @i{n.}
      a @i{string},
@@ -5857,7 +5857,7 @@ transitive verb
   or some other @i{object} defined by the @i{implementation} 
       to be a @i{valid pathname device}.
 
-@IGindex{valid pathname directory}
+@IGindex valid pathname directory
 @item @b{valid pathname directory}
  @i{n.}
      a @i{string},
@@ -5870,13 +5870,13 @@ transitive verb
   or some other @i{object} defined by the @i{implementation} 
       to be a @i{valid directory component}.
 
-@IGindex{valid pathname host}
+@IGindex valid pathname host
 @item @b{valid pathname host}
  @i{n.}
      a @i{valid physical pathname host}
   or a @i{valid logical pathname host}.
 
-@IGindex{valid pathname name}
+@IGindex valid pathname name
 @item @b{valid pathname name}
  @i{n.}
      a @i{string},
@@ -5886,7 +5886,7 @@ transitive verb
   or some other @i{object} defined by the @i{implementation} 
      to be a @i{valid pathname name}.
 
-@IGindex{valid pathname type}
+@IGindex valid pathname type
 @item @b{valid pathname type}
  @i{n.}
      a @i{string},
@@ -5894,7 +5894,7 @@ transitive verb
      @t{:wild},
      @t{:unspecific}.
 
-@IGindex{valid pathname version}
+@IGindex valid pathname version
 @item @b{valid pathname version}
  @i{n.}
      a non-negative @i{integer},
@@ -5905,7 +5905,7 @@ transitive verb
  The symbols @t{:oldest}, @t{:previous}, and @t{:installed} are
  @i{semi-standard} special version symbols.
 
-@IGindex{valid physical pathname host}
+@IGindex valid physical pathname host
 @item @b{valid physical pathname host}
  @i{n.}
    any of
@@ -5914,7 +5914,7 @@ transitive verb
      or the symbol @t{:unspecific},
    that is recognized by the implementation as the name of a host.
 
-@IGindex{valid sequence index}
+@IGindex valid sequence index
 @item @b{valid sequence index}
  @i{n.} (of a @i{sequence})
   an @i{integer} suitable for use to name an @i{element} 
@@ -5925,7 +5925,7 @@ transitive verb
   (If the @i{sequence} is an @i{array},
    the @i{valid sequence index} is further constrained to be a @i{fixnum}.)
 
-@IGindex{value}
+@IGindex value
 @item @b{value}
  @i{n.} 
   1. a. one of possibly several @i{objects} that are the result of
@@ -5944,7 +5944,7 @@ transitive verb
 	a  @i{property list},
      or a  @i{hash table}.
 
-@IGindex{value cell}
+@IGindex value cell
 @item @b{value cell}
  @i{n.} @i{Trad.} (of a @i{symbol})
   The @i{place} which holds the @i{value}, if any, of the
@@ -5952,18 +5952,18 @@ transitive verb
   and which is @i{accessed} by @b{symbol-value}.
   See @i{cell}.
 
-@IGindex{variable}
+@IGindex variable
 @item @b{variable}
  @i{n.} 
   a @i{binding} in which a @i{symbol} is the @i{name}
   used to refer to an @i{object}.
 
-@IGindex{vector}
+@IGindex vector
 @item @b{vector}
  @i{n.} 
   a one-dimensional @i{array}.
 
-@IGindex{vertical-bar}
+@IGindex vertical-bar
 @item @b{vertical-bar}
  @i{n.}
   the @i{standard character} that is called ``vertical bar'' (@t{|}).
@@ -5973,7 +5973,7 @@ transitive verb
 @subheading @b{W}
 @table @asis
 
-@IGindex{whitespace}
+@IGindex whitespace
 @item @b{whitespace}
  @i{n.} 
   1. one or more @i{characters} that are
@@ -5987,7 +5987,7 @@ transitive verb
         having the @i{whitespace}_@{2a@} @i{syntax type}_2.
      c. @i{n.} a @i{whitespace}_@{2b@} @i{character}.
 
-@IGindex{wild}
+@IGindex wild
 @item @b{wild}
  @i{adj.}
   1. (of a @i{namestring}) using an @i{implementation-defined}
@@ -6003,7 +6003,7 @@ transitive verb
      or @t{:wild-inferors}.
      See the @i{function} @b{wild-pathname-p}.
 
-@IGindex{write}
+@IGindex write
 @item @b{write}
  @i{v.t.} 
 
@@ -6013,7 +6013,7 @@ transitive verb
   2. (an @i{object} to a @i{stream})
      to output a representation of the @i{object} to the @i{stream}.
 
-@IGindex{writer}
+@IGindex writer
 @item @b{writer}
  @i{n.}
   a @i{function} that @i{writes}_1 a @i{variable} or @i{slot}.
@@ -6022,7 +6022,7 @@ transitive verb
 @subheading @b{Y}
 @table @asis
 
-@IGindex{yield}
+@IGindex yield
 @item @b{yield}
  @i{v.t.} (@i{values})
   to produce the @i{values} as the result of @i{evaluation}.
diff --git a/gcl/info/chap-3.texi b/gcl/info/chap-3.texi
index e40d96345..3b99d6feb 100644
--- a/gcl/info/chap-3.texi
+++ b/gcl/info/chap-3.texi
@@ -24,7 +24,7 @@ from direct interpretation of a @i{form} representing a @i{program}
 to invocation of @i{compiled code} produced by a @i{compiler}.
 
 @i{Evaluation}
-@IGindex{evaluation}
+@IGindex evaluation
  is the process by which a @i{program} is @i{executed} in @r{Common Lisp}.
 The mechanism of @i{evaluation} is manifested
  both implicitly through the effect of the @i{Lisp read-eval-print loop},
@@ -59,19 +59,19 @@ is described in @ref{The Evaluation Model}.
 @subsection Introduction to Environments
 
 A @i{binding}
-@IGindex{binding}
+@IGindex binding
  is an association between a @i{name} and
 that which the name denotes.  @i{Bindings} are @i{established}
 in a @i{lexical environment} or a @i{dynamic environment}
 by particular @i{special operators}.
 
 An @i{environment}
-@IGindex{environment}
+@IGindex environment
  is a set of @i{bindings} and other information
 used during evaluation (@i{e.g.}, to associate meanings with names).
 
 @i{Bindings} in an @i{environment} are partitioned into @i{namespaces}
-@IGindex{namespace}
+@IGindex namespace
 .
 A single @i{name} can simultaneously have more than one
 associated @i{binding} per @i{environment},
@@ -89,7 +89,7 @@ but can have only one associated @i{binding} per @i{namespace}.
 @subsubsection The Global Environment
 
 The @i{global environment}
-@IGindex{global environment}
+@IGindex global environment
  is that part of an @i{environment}
 that contains @i{bindings} with both @i{indefinite scope} 
 and @i{indefinite extent}.
@@ -115,7 +115,7 @@ information about @i{proclamations}.
 @subsubsection Dynamic Environments
 
 A @i{dynamic environment}
-@IGindex{dynamic environment}
+@IGindex dynamic environment
  for @i{evaluation} is that part of an
 @i{environment} that contains @i{bindings} whose duration
 is bounded by points of @i{establishment} and @i{disestablishment} 
@@ -151,7 +151,7 @@ associated with its name in the @i{global environment}.
 @subsubsection Lexical Environments
 
 A @i{lexical environment}
-@IGindex{lexical environment}
+@IGindex lexical environment
  for @i{evaluation} at some position in a @i{program}
 is that part of the @i{environment} that contains information having 
 @i{lexical scope} within the @i{forms} containing that position.
@@ -189,7 +189,7 @@ associated with its name in the @i{global environment}.
 @subsubsection The Null Lexical Environment
 
 The @i{null lexical environment}
-@IGindex{null lexical environment}
+@IGindex null lexical environment
  is equivalent to the @i{global environment}.
 
 Although in general the representation of an @i{environment} @i{object}
@@ -202,7 +202,7 @@ the @i{null lexical environment}.
 
 Some @i{operators} make use of an @i{object}, 
 called an @i{environment object}
-@IGindex{environment object}
+@IGindex environment object
 ,
 that represents the set of @i{lexical bindings} needed to perform
 semantic analysis on a @i{form} in a given @i{lexical environment}.
@@ -805,7 +805,7 @@ the same @i{name} N are textually nested, then references to N
 within the inner @i{form} refer to the @i{binding} established by
 the inner @i{form}; the inner @i{binding} for N
 @i{shadows}
-@IGindex{shadow}
+@IGindex shadow
  the outer @i{binding} for N.  Outside the inner
 @i{form} but inside the outer one, references to N refer to the
 @i{binding} established by the outer @i{form}.  For example:
@@ -1019,28 +1019,28 @@ See @b{multiple-values-limit} and @b{values-list}.
 The following terminology is used in this section.
 
 The @i{compiler}
-@IGindex{compiler}
+@IGindex compiler
  is a utility that translates code into an
 @i{implementation-dependent} form that might be represented or
 executed efficiently.
 The term @i{compiler}
-@IGindex{compiler}
+@IGindex compiler
  refers to both of the @i{functions}
 @b{compile} and @b{compile-file}.
 
 The term @i{compiled code}
-@IGindex{compiled code}
+@IGindex compiled code
  refers to 
 @i{objects} representing compiled programs, such as @i{objects} constructed
 by @b{compile} or by @b{load} when @i{loading} a @i{compiled file}.
 
 The term @i{implicit compilation}
-@IGindex{implicit compilation}
+@IGindex implicit compilation
  refers to @i{compilation}
 performed during @i{evaluation}.
 
 The term @i{literal object}
-@IGindex{literal object}
+@IGindex literal object
  refers to 
      a quoted @i{object} 
   or a @i{self-evaluating object} 
@@ -1048,7 +1048,7 @@ The term @i{literal object}
 A @i{constant variable} is not itself a @i{literal object}.
 
 The term @i{coalesce}
-@IGindex{coalesce}
+@IGindex coalesce
  is defined as follows.
 Suppose @t{A} and @t{B} are two @i{literal constants} in the @i{source code},
 and that @t{A'} and @t{B'} are the corresponding @i{objects} in the @i{compiled code}.
@@ -1057,19 +1057,19 @@ If @t{A'} and @t{B'} are @b{eql} but
 that @t{A} and @t{B} have been coalesced by the compiler.
 
 The term @i{minimal compilation}
-@IGindex{minimal compilation}
+@IGindex minimal compilation
  refers to actions the compiler
 must take at @i{compile time}. These actions are specified in 
 @ref{Compilation Semantics}.
 
 The verb @i{process}
-@IGindex{process}
+@IGindex process
  refers to performing @i{minimal compilation},
 determining the time of evaluation for a @i{form},
 and possibly @i{evaluating} that @i{form} (if required).
 
 The term @i{further compilation}
-@IGindex{further compilation}
+@IGindex further compilation
  refers to
 @i{implementation-dependent} compilation beyond @i{minimal compilation}.
 That is, @i{processing} does not imply complete compilation.
@@ -1085,13 +1085,13 @@ distinguished:
   the @i{run-time environment}.
 
 The @i{startup environment}
-@IGindex{startup environment}
+@IGindex startup environment
  is
 the @i{environment} of the @i{Lisp image} 
 from which the @i{compiler} was invoked.
 
 The @i{compilation environment}
-@IGindex{compilation environment}
+@IGindex compilation environment
  is maintained by the compiler
 and is used to hold definitions and declarations to be used internally
 by the compiler.  Only those parts of a definition needed for correct
@@ -1102,14 +1102,14 @@ the compiler. It is unspecified whether a definition available in the
 initiated in the @i{startup environment} or @i{evaluation environment}.
 
 The @i{evaluation environment}
-@IGindex{evaluation environment}
+@IGindex evaluation environment
  is a @i{run-time environment}
 in which macro expanders and code specified by @b{eval-when}
 to be evaluated are evaluated.  All evaluations initiated by the
 @i{compiler} take place in the @i{evaluation environment}.
 
 The @i{run-time environment}
-@IGindex{run-time environment}
+@IGindex run-time environment
  is the 
 @i{environment} in which the program being compiled will be executed.
 
@@ -1123,7 +1123,7 @@ and the @i{startup environment} and @i{evaluation environment}
 might be @i{identical}.
 
 The term @i{compile time}
-@IGindex{compile time}
+@IGindex compile time
  refers to the duration of time that
 the compiler is processing @i{source code}.
 At @i{compile time},
@@ -1132,7 +1132,7 @@ and  the @i{evaluation environment}
 are available.
 
 The term @i{compile-time definition}
-@IGindex{compile-time definition}
+@IGindex compile-time definition
  refers to a definition in
 the @i{compilation environment}.
 For example, when compiling a file, 
@@ -1141,18 +1141,18 @@ if it is declared @b{inline}.
 This definition might not be available in the @i{evaluation environment}.
 
 The term @i{run time}
-@IGindex{run time}
+@IGindex run time
  refers to the duration of time that the
 loader is loading compiled code or compiled code is being executed.
 At run time, only the @i{run-time environment} is available.
 
 The term @i{run-time definition}
-@IGindex{run-time definition}
+@IGindex run-time definition
  refers to a definition in the
 @i{run-time environment}.
 
 The term @i{run-time compiler}
-@IGindex{run-time compiler}
+@IGindex run-time compiler
  refers to the @i{function} @b{compile}
 or @i{implicit compilation}, for which the compilation and run-time 
 @i{environments} are maintained in the same @i{Lisp image}.
@@ -1345,26 +1345,26 @@ each @i{implementation}.
 
 @item @t{*}  
 All @i{compiler macro}
-@IGindex{compiler macro}
+@IGindex compiler macro
  calls appearing in the
 @i{source code} being compiled are expanded, if at all, at compile time;
 they will not be expanded at run time.
 
 @item @t{*}  
 All @i{macro}
-@IGindex{macro}
+@IGindex macro
  and 
 @i{symbol macro}
-@IGindex{symbol macro}
+@IGindex symbol macro
  calls
 appearing in the source code being compiled are expanded at compile time
 in such a way that they will not be expanded again at run time.
 @b{macrolet}
-@IRindex{macrolet}
+@IRindex macrolet
 
 and
 @b{symbol-macrolet}
-@IRindex{symbol-macrolet}
+@IRindex symbol-macrolet
 
 are effectively replaced by
 @i{forms} corresponding to their bodies in which calls to 
@@ -1372,15 +1372,15 @@ are effectively replaced by
 
 @item @t{*}  
 The first @i{argument} in a @b{load-time-value}
-@IRindex{load-time-value}
+@IRindex load-time-value
 
 @i{form} 
 in @i{source code} processed by @b{compile}
-@IRindex{compile}
+@IRindex compile
 
 is @i{evaluated} at @i{compile time};
 in @i{source code} processed by @b{compile-file}
-@IRindex{compile-file}
+@IRindex compile-file
 , 
 the compiler arranges for it to be @i{evaluated} at @i{load time}.
 In either case, the result of the @i{evaluation}
@@ -1579,7 +1579,7 @@ is not necessarily the @i{null lexical environment}.)
 
 @item 5.  
 If the form is an @b{eval-when}
-@IRindex{eval-when}
+@IRindex eval-when
  form, it is
 handled according to Figure 3--7.
 
@@ -1781,11 +1781,11 @@ by the @i{file compiler}.
 An @i{object} that can be used as a @i{literal} @i{object} 
 in @i{code} to be processed by the @i{file compiler} is called an
 @i{externalizable object}
-@IGindex{externalizable object}
+@IGindex externalizable object
 .
 
 We define that two @i{objects} are @i{similar}
-@IGindex{similar}
+@IGindex similar
  if they satisfy
 a two-place conceptual equivalence predicate (defined below), which is
 independent of the @i{Lisp image} so that the two @i{objects} in
@@ -1800,7 +1800,7 @@ as a @i{literal object}, the @i{loader} will construct a @i{similar}
 @i{object}.
 
 The set of @i{objects} that are @i{externalizable objects}
-@IGindex{externalizable object}
+@IGindex externalizable object
  are those
 for which the new conceptual term ``@i{similar}'' is defined, such that
 when a @i{compiled file} is @i{loaded}, an @i{object} can be constructed
@@ -2156,19 +2156,19 @@ See @b{with-compilation-unit}.
 @c including concept-decls
 
 @i{Declarations}
-@IGindex{declaration}
+@IGindex declaration
  provide a way of specifying information for use by
 program processors, such as the evaluator or the compiler.
 
 @i{Local declarations}
-@IGindex{local declaration}
+@IGindex local declaration
 
 can be embedded in executable code using @b{declare}.
 @i{Global declarations}
-@IGindex{global declaration}
+@IGindex global declaration
 , 
 or @i{proclamations}
-@IGindex{proclamation}
+@IGindex proclamation
 ,
 are established by @b{proclaim} or @b{declaim}.
 
@@ -2192,16 +2192,16 @@ or a @i{proclamation}.
 In general, an @i{implementation} is free to ignore
 @i{declaration specifiers} except for the
      @b{declaration}
-@IRindex{declaration}
+@IRindex declaration
 ,
      @b{notinline}
-@IRindex{notinline}
+@IRindex notinline
 ,
      @b{safety}
-@IRindex{safety}
+@IRindex safety
 ,
  and @b{special}
-@IRindex{special}
+@IRindex special
  @i{declaration specifiers}.
 
 A @b{declaration} @i{declaration} must suppress warnings
@@ -2224,7 +2224,7 @@ A @b{special} @i{declaration} must be processed by all @i{implementations}.
 @subsection Declaration Specifiers
 
 A @i{declaration specifier}
-@IGindex{declaration specifier}
+@IGindex declaration specifier
  is an @i{expression} that can appear at
 top level of a @b{declare} expression or a @b{declaim} form, or as 
 the argument to @b{proclaim}.
@@ -2237,7 +2237,7 @@ the @i{declaration identifier}.
 
 Figure 3--9 shows a list of all 
 @i{declaration identifiers}
-@IGindex{declaration identifier}
+@IGindex declaration identifier
 
 defined by this standard.
 
@@ -2285,14 +2285,14 @@ do not apply to @i{bindings}.
 A @i{declaration} that appears at the head of a binding @i{form} 
 and applies to a @i{variable} or @i{function} @i{binding} 
 made by that @i{form} is called a @i{bound declaration}
-@IGindex{bound declaration}
+@IGindex bound declaration
 ; 
 such a @i{declaration} affects both the @i{binding} and
 any references within the @i{scope} of the @i{declaration}.  
 
 @i{Declarations} that are not @i{bound declarations} are called
 @i{free declarations}
-@IGindex{free declaration}
+@IGindex free declaration
 .
 
 A @i{free declaration} in a @i{form} F1 that applies to a @i{binding}
@@ -2435,7 +2435,7 @@ and therefore refers to the @i{dynamic binding} of @t{x}.
 @c including concept-bvl
 
 A @i{lambda list}
-@IGindex{lambda list}
+@IGindex lambda list
  is a @i{list} that
 specifies a set of @i{parameters} (sometimes called @i{lambda variables})
 and a protocol for receiving @i{values} for those @i{parameters}.
@@ -2505,7 +2505,7 @@ to @i{lambda lists}.
 @subsection Ordinary Lambda Lists
 
 An @i{ordinary lambda list}
-@IGindex{ordinary lambda list}
+@IGindex ordinary lambda list
  is used to describe how a set of
 @i{arguments} is received by an @i{ordinary} @i{function}.  
 The @i{defined names} in Figure 3--12 are those which use
@@ -2607,7 +2607,7 @@ The other parameters are then processed using any remaining arguments.
 @node Specifiers for optional parameters, A specifier for a rest parameter, Specifiers for the required parameters, Ordinary Lambda Lists
 @subsubsection Specifiers for optional parameters
 
-@IRindex{&optional}
+@IRindex &optional
 
 If @b{&optional} is present,
 the optional parameter specifiers are those following 
@@ -2632,7 +2632,7 @@ an argument had been supplied for the corresponding @i{var}.
 @node A specifier for a rest parameter, Specifiers for keyword parameters, Specifiers for optional parameters, Ordinary Lambda Lists
 @subsubsection A specifier for a rest parameter
 
-@IRindex{&rest}
+@IRindex &rest
 
 @b{&rest}, if present, must be followed by a single @i{rest parameter}
 specifier, which in turn must be followed by another 
@@ -2649,9 +2649,9 @@ The value of a @i{rest parameter}
 is permitted, but not required, to share structure with the
 last argument to @b{apply}.
 
-@IRindex{&key}
+@IRindex &key
 
-@IRindex{&allow-other-keys}
+@IRindex &allow-other-keys
 
 @node Specifiers for keyword parameters, Suppressing Keyword Argument Checking, A specifier for a rest parameter, Ordinary Lambda Lists
 @subsubsection Specifiers for keyword parameters
@@ -2780,7 +2780,7 @@ is @i{false}.
 @node Specifiers for @b{&aux} variables, Examples of Ordinary Lambda Lists, Examples of Suppressing Keyword Argument Checking, Ordinary Lambda Lists
 @subsubsection Specifiers for @b{&aux} variables
 
-@IRindex{&aux}
+@IRindex &aux
 
 These are not really parameters.  If the @i{lambda list keyword}
 @b{&aux} is present, all specifiers after it are auxiliary variable
@@ -2892,7 +2892,7 @@ a @i{true} value causes any extraneous named arguments, including
 @subsection Generic Function Lambda Lists
 
 A @i{generic function lambda list}
-@IGindex{generic function lambda list}
+@IGindex generic function lambda list
  is used to describe the overall shape of
 the argument list to be accepted by a @i{generic function}.
 Individual @i{method} @i{signatures} might contribute additional 
@@ -2944,7 +2944,7 @@ The use of @b{&aux} is not allowed.
 @subsection Specialized Lambda Lists
 
 A @i{specialized lambda list}
-@IGindex{specialized lambda list}
+@IGindex specialized lambda list
  is used to @i{specialize} a @i{method}
 for a particular @i{signature} and to describe how @i{arguments} matching
 that @i{signature} are received by the @i{method}.  
@@ -2996,7 +2996,7 @@ or @i{object} for which that @i{parameter} is @i{specialized}.
 @subsection Macro Lambda Lists
 
 A @i{macro lambda list}
-@IGindex{macro lambda list}
+@IGindex macro lambda list
  is used in describing @i{macros} 
 defined by the @i{operators} in Figure 3--17.
 
@@ -3070,7 +3070,7 @@ just as in an @i{ordinary lambda list}.
 Both may contain default initialization forms and @i{supplied-p parameters}.
 
 @b{&body}
-@IRindex{&body}
+@IRindex &body
 
 is identical in function to @b{&rest},
 but it can be used to inform certain output-formatting 
@@ -3084,7 +3084,7 @@ see @ref{Destructuring by Lambda Lists}.
 for details, see @ref{Destructuring by Lambda Lists}.
 
 @b{&whole}
-@IRindex{&whole}
+@IRindex &whole
 
 is followed by a single variable that is bound to the
 entire macro-call form; this is the value that the @i{macro function}
@@ -3103,7 +3103,7 @@ The use of @b{&whole} does not affect the pattern of arguments
      specified.
 
 @b{&environment}
-@IRindex{&environment}
+@IRindex &environment
 
 is followed by a single variable that is bound
 to an @i{environment} representing the @i{lexical environment} in which the
@@ -3310,7 +3310,7 @@ Stands by itself.
 @subsection Destructuring Lambda Lists
 
 A @i{destructuring lambda list}
-@IGindex{destructuring lambda list}
+@IGindex destructuring lambda list
  is used by @b{destructuring-bind}.
 
 @i{Destructuring lambda lists} are closely related to 
@@ -3352,7 +3352,7 @@ A @i{destructuring lambda list} has the following syntax:
 @subsection Boa Lambda Lists
 
 A @i{boa lambda list}
-@IGindex{boa lambda list}
+@IGindex boa lambda list
  is a @i{lambda list} that is syntactically 
 like an @i{ordinary lambda list}, but that is processed in
 ``@b{b}y @b{o}rder of @b{a}rgument'' style.
@@ -3462,7 +3462,7 @@ might also be used this way.
 @subsection Defsetf Lambda Lists
 
 A @i{defsetf lambda list}
-@IGindex{defsetf lambda list}
+@IGindex defsetf lambda list
  is used by @b{defsetf}.
 
 A @i{defsetf lambda list} has the following syntax:
@@ -3501,7 +3501,7 @@ and that it permits use of @b{&environment},
 @subsection Deftype Lambda Lists
 
 A @i{deftype lambda list}
-@IGindex{deftype lambda list}
+@IGindex deftype lambda list
  is used by @b{deftype}.
 
 A @i{deftype lambda list} has the same syntax as a @i{macro lambda list},
@@ -3516,7 +3516,7 @@ for that @i{parameter} is the @i{symbol} @b{*} (rather than @b{nil}).
 @subsection Define-modify-macro Lambda Lists
 
 A @i{define-modify-macro lambda list}
-@IGindex{define-modify-macro lambda list}
+@IGindex define-modify-macro lambda list
  is used by 
 @b{define-modify-macro}.
 
@@ -3545,7 +3545,7 @@ which could refer to such @i{bindings}.  See the @i{macro} @b{define-modify-macr
 @subsection Define-method-combination Arguments Lambda Lists
 
 A @i{define-method-combination arguments lambda list}
-@IGindex{define-method-combination arguments lambda list}
+@IGindex define-method-combination arguments lambda list
  is used by 
 the @t{:arguments} option to @b{define-method-combination}.
 
@@ -3612,7 +3612,7 @@ is present.
 @subsubsection Safe and Unsafe Calls
 
 A @i{call} is a @i{safe call}
-@IGindex{safe call}
+@IGindex safe call
  if each of the following is
 either @i{safe} @i{code} or @i{system code} (other than
 @i{system code} that results from @i{macro expansion} of 
@@ -3695,7 +3695,7 @@ the point of @i{functional evaluation} of the name @b{call-next-method}.
 @end table
 
 An @i{unsafe call}
-@IGindex{unsafe call}
+@IGindex unsafe call
  is a @i{call} that is not a @i{safe call}.
 
 The informal intent is that the @i{programmer} can rely on a @i{call}
@@ -4289,22 +4289,22 @@ in any @i{function form},
 
 @i{situation}---One of the @i{symbols} 
 		    @t{:compile-toplevel}
-@c @IKindex{compile-toplevel}
+@c @IKindex compile-toplevel
 ,
 		    @t{:load-toplevel}
-@c @IKindex{load-toplevel}
+@c @IKindex load-toplevel
 ,
 		    @t{:execute}
-@c @IKindex{execute}
+@c @IKindex execute
 ,
 		    @b{compile}
-@IRindex{compile}
+@IRindex compile
 ,
 		    @b{load}
-@IRindex{load}
+@IRindex load
 , or
 		    @b{eval}
-@IRindex{eval}
+@IRindex eval
 .
 
 The use of @b{eval}, @b{compile}, and @b{load} is deprecated.
@@ -4530,9 +4530,9 @@ will take place only once when the @i{file} is @i{loaded}, but
 the order of evaluation with respect to the evaluation of
 @i{top level forms} in the file is @i{implementation-dependent}.
 
-@ITindex{order of evaluation}
+@ITindex order of evaluation
 
-@ITindex{evaluation order}
+@ITindex evaluation order
 
 If a @b{load-time-value} expression appears within a function compiled
 with @b{compile}, the @i{form} is evaluated at compile time in a
@@ -6571,15 +6571,15 @@ compiler or other program processor.
 
 @t{(optimize @{@i{quality} | (@i{quality} @i{value})@}*)}
 
-@IRindex{compilation-speed}
+@IRindex compilation-speed
 
-@IRindex{debug}
+@IRindex debug
 
-@IRindex{safety}
+@IRindex safety
 
-@IRindex{space}
+@IRindex space
 
-@IRindex{speed}
+@IRindex speed
 
 @subsubheading  Arguments::
 
diff --git a/gcl/info/chap-4.texi b/gcl/info/chap-4.texi
index 195e3aa40..0b2258786 100644
--- a/gcl/info/chap-4.texi
+++ b/gcl/info/chap-4.texi
@@ -61,7 +61,7 @@ For more information, see @ref{Generic Functions and Methods}.
 
 The @i{class} of the @i{class} of an @i{object} 
 is called its @i{metaclass}
-@IGindex{metaclass}
+@IGindex metaclass
 .
 For more information about @i{metaclasses},
 see @ref{Meta-Objects}.
@@ -232,7 +232,7 @@ If a @i{type specifier} is a @i{list}, the @i{car} of the @i{list}
 is a @i{symbol}, and the rest of the @i{list} is subsidiary
 @i{type} information.  Such a @i{type specifier} is called 
 a @i{compound type specifier}
-@IGindex{compound type specifier}
+@IGindex compound type specifier
 .
 Except as explicitly stated otherwise,
 the subsidiary items can be unspecified.
@@ -324,7 +324,7 @@ Defining a structure by using @b{defstruct} without using
  or class to be a new @i{type specifier} @i{symbol}.
 @item @t{*}  
 @b{deftype} can be used to define @i{derived type specifiers}
-@IGindex{derived type specifier}
+@IGindex derived type specifier
 ,
  which act as `abbreviations' for other @i{type specifiers}.
 @end table
@@ -440,10 +440,10 @@ especially relevant to understanding the object system.
 @subsection Introduction to Classes
 
 A @i{class}
-@IGindex{class}
+@IGindex class
  is an @i{object} that determines the structure and behavior 
 of a set of other @i{objects}, which are called its @i{instances}
-@IGindex{instance}
+@IGindex instance
 .   
 
 A @i{class} can inherit structure and behavior from other @i{classes}.
@@ -468,21 +468,21 @@ If C= @t{(find-class S)}, we say that C is the @i{class} @i{named} S.
 
 A @i{class} C_1 is 
 a @i{direct superclass}
-@IGindex{direct superclass}
+@IGindex direct superclass
  of a @i{class} C_2
 if C_2 explicitly designates C_1 
 as a @i{superclass} in its definition.
 In this case C_2 is a @i{direct subclass}
-@IGindex{direct subclass}
+@IGindex direct subclass
  of C_1.
 A @i{class} C_n is a @i{superclass}
-@IGindex{superclass}
+@IGindex superclass
  of 
 a @i{class} C_1 if there exists a series of
 @i{classes} C_2,...,C_@{n-1@} such that 
 C_@{i+1@} is a @i{direct superclass} of C_i for 1 <= i<n.
 In this case, C_1 is a @i{subclass}
-@IGindex{subclass}
+@IGindex subclass
  of C_n.
 A @i{class} is considered neither a @i{superclass} nor a @i{subclass} of itself.
 That is, if C_1 is a @i{superclass} of C_2, 
@@ -491,13 +491,13 @@ The set of @i{classes} consisting of some given @i{class} C
 along with all of its @i{superclasses} is called ``C and its superclasses.''
 
 Each @i{class} has a @i{class precedence list}
-@IGindex{class precedence list}
+@IGindex class precedence list
 ,
 which is a total ordering on the set of the given @i{class} and its @i{superclasses}.
 The total ordering is expressed as a list ordered from most specific to least specific.
 The @i{class precedence list} is used in several ways.  In general, more
 specific @i{classes} can @i{shadow}
-@IGindex{shadow}
+@IGindex shadow
 _1 features that would
 otherwise be inherited from less specific @i{classes}.
 The @i{method} selection and combination process uses 
@@ -507,7 +507,7 @@ from most specific to least specific.
 When a @i{class} is defined, the order in which its direct @i{superclasses}
 are mentioned in the defining form is important.  Each @i{class} has a
 @i{local precedence order}
-@IGindex{local precedence order}
+@IGindex local precedence order
 , which is a @i{list} consisting of the
 @i{class} followed by its @i{direct superclasses} in the order mentioned
 in the defining @i{form}.
@@ -541,7 +541,7 @@ systems is discussed in @ref{Integrating Types and Classes}.
 @i{instances} of @i{classes}. 
 The @i{class} of the @i{class} of an @i{object} is termed
 the @i{metaclass}
-@IGindex{metaclass}
+@IGindex metaclass
  of that @i{object}. When no misinterpretation is
 possible, the term @i{metaclass} is used to refer to a @i{class}
 that has @i{instances} that are themselves @i{classes}. The @i{metaclass}
@@ -606,7 +606,7 @@ The list of the direct @i{superclasses} of the new @i{class}.
 
 @item @t{*}  
 A set of @i{slot specifiers}
-@IGindex{slot specifier}
+@IGindex slot specifier
 .
   Each @i{slot specifier} includes the @i{name} of the @i{slot} 
   and zero or more @i{slot} options.  A @i{slot} option pertains 
@@ -735,11 +735,11 @@ error of @i{type} @b{program-error} is signaled.
 The @b{defclass} form for a @i{class} provides a total ordering
 on that @i{class} and its direct @i{superclasses}.  This ordering is
 called the @i{local precedence order}
-@IGindex{local precedence order}
+@IGindex local precedence order
 .  It is an ordered list of the
 @i{class} and its direct @i{superclasses}. The
 @i{class precedence list}
-@IGindex{class precedence list}
+@IGindex class precedence list
  for a class C is a total ordering on
 C and its @i{superclasses} that is consistent with the
 @i{local precedence orders} for each of C and its @i{superclasses}.
@@ -1518,7 +1518,7 @@ Other @i{functions} might also be of @i{type} @b{compiled-function}.
 @subsubheading  Description::
 
 A @i{generic function}
-@IGindex{generic function}
+@IGindex generic function
  is a @i{function} whose behavior
 depends on the @i{classes} or identities of the @i{arguments}
 supplied to it.  A generic function object contains a set of
diff --git a/gcl/info/chap-5.texi b/gcl/info/chap-5.texi
index 07d1fed30..69b4e23c0 100644
--- a/gcl/info/chap-5.texi
+++ b/gcl/info/chap-5.texi
@@ -24,10 +24,10 @@
 @subsection Overview of Places and Generalized Reference
 
 A @i{generalized reference}
-@IGindex{generalized reference}
+@IGindex generalized reference
  is the use of a @i{form},
 sometimes called a @i{place}
-@IGindex{place}
+@IGindex place
 ,
 as if it were a @i{variable} that could be read and written.
 The @i{value} of a @i{place} is 
@@ -115,9 +115,9 @@ For all @i{places} defined by this specification
 (@i{e.g.}, @b{getf}, @b{ldb}, ...),
 this order of evaluation is left-to-right.
 
-@ITindex{order of evaluation}
+@ITindex order of evaluation
 
-@ITindex{evaluation order}
+@ITindex evaluation order
 
 When a @i{place} is derived from a macro expansion,
 this rule is applied after the macro is expanded to find the appropriate @i{place}. 
@@ -186,9 +186,9 @@ or none of the cases hold in
 @item 4.  
 For @b{assert}, the order of evaluation of the generalized 
 references is not specified.
-@ITindex{order of evaluation}
+@ITindex order of evaluation
 
-@ITindex{evaluation order}
+@ITindex evaluation order
 
 @end table
 
@@ -2568,10 +2568,11 @@ The @i{primary value} of each @i{form} is assigned to the corresponding @i{var}.
 
 @w{@i{pair} ::=var form}
 
+@iftex
 @subsubheading  Pronunciation::
 
-@b{psetq}: pronounced  @tex p\=e'set ,ky\"u 
-@end tex
+@b{psetq}: pronounced p\=e'set ,ky\"u 
+@end iftex
 
 @subsubheading  Arguments and Values::
 
@@ -2724,9 +2725,9 @@ to which a @b{throw} is transferring control.
 @t{(throw 'bar @i{form})}.
 
 The order of execution of @b{catch} follows:
-@ITindex{order of evaluation}
+@ITindex order of evaluation
 
-@ITindex{evaluation order}
+@ITindex evaluation order
 
 @table @asis
 
@@ -4559,9 +4560,9 @@ and the @b{unless} @i{form} returns @b{nil}.
 
 @w{@i{clause} ::=normal-clause | otherwise-clause}
 
-@IRindex{otherwise}
+@IRindex otherwise
 
-@IRindex{t}
+@IRindex t
 
 @subsubheading  Arguments and Values::
 
@@ -4732,9 +4733,9 @@ message.
 
 @w{@i{clause} ::=normal-clause | otherwise-clause}
 
-@IRindex{otherwise}
+@IRindex otherwise
 
-@IRindex{t}
+@IRindex t
 
 @subsubheading  Arguments and Values::
 
@@ -5123,9 +5124,9 @@ is defined to always behave in the same way as
 
 in order that the rules for order of evaluation and side-effects be consistent
 with those used by @b{setf}.
-@ITindex{order of evaluation}
+@ITindex order of evaluation
 
-@ITindex{evaluation order}
+@ITindex evaluation order
 
 See @ref{VALUES Forms as Places}.
 
diff --git a/gcl/info/chap-6.texi b/gcl/info/chap-6.texi
index 9d4cc29d0..68e4d9328 100644
--- a/gcl/info/chap-6.texi
+++ b/gcl/info/chap-6.texi
@@ -373,9 +373,9 @@ For more information, see @ref{Miscellaneous Clauses}.
 @node Order of Execution, Destructuring, Summary of Miscellaneous Clauses, Overview of the Loop Facility
 @subsubsection Order of Execution
 
-@ITindex{order of evaluation}
+@ITindex order of evaluation
 
-@ITindex{evaluation order}
+@ITindex evaluation order
 
   With the exceptions listed below, clauses are executed in the loop body
   in the order in which they appear in the source.  Execution is repeated 
@@ -688,9 +688,9 @@ For example, either ``@t{from x by y}'' or ``@t{by y from x}'' is permitted.
 However, because left-to-right order of evaluation is preserved,
 the effects will be different in the case of side effects.
 
-@ITindex{order of evaluation}
+@ITindex order of evaluation
 
-@ITindex{evaluation order}
+@ITindex evaluation order
 
 Consider:
 
diff --git a/gcl/info/chap-7.texi b/gcl/info/chap-7.texi
index 502ff9156..3a4f34e91 100644
--- a/gcl/info/chap-7.texi
+++ b/gcl/info/chap-7.texi
@@ -22,7 +22,7 @@ The @i{generic function} @b{make-instance} creates and returns a new
 @i{instance} of a @i{class}.  The first argument is a @i{class} or
 the @i{name} of a @i{class}, and the remaining arguments form an 
 @i{initialization argument list}
-@IGindex{initialization argument list}
+@IGindex initialization argument list
 .
 
 The initialization of a new @i{instance} consists of several distinct
@@ -295,9 +295,9 @@ used to initialize a @i{slot} only if no initialization argument
 associated with that @i{slot} is given as an argument to 
 @b{make-instance} or is defaulted by @t{:default-initargs}.
 
-@ITindex{order of evaluation}
+@ITindex order of evaluation
 
-@ITindex{evaluation order}
+@ITindex evaluation order
 
 The order of evaluation of default value @i{forms} for initialization
 arguments and the order of evaluation of @t{:initform} forms are
@@ -386,7 +386,6 @@ The following is an example of the above rules:
    (:default-initargs a 1 b 2))
 @end example
 
-@center 
 @example
 @format
 @group
@@ -1075,7 +1074,7 @@ the @i{method} @i{accesses} the @i{local slot}.
 @subsection Introduction to Generic Functions
 
 A @i{generic function}
-@IGindex{generic function}
+@IGindex generic function
  is a function whose behavior depends on
 the @i{classes} or identities of the @i{arguments} supplied to it.
 A @i{generic function} @i{object} 
@@ -1153,7 +1152,7 @@ The only @i{standardized} @i{operator} in this category is @b{defgeneric}.
 Some @i{operators} define @i{methods} for a @i{generic function}.
 These @i{operators} will be referred to as
 @i{method-defining operators}
-@IGindex{method-defining operator}
+@IGindex method-defining operator
 ;
 their associated @i{forms} are called @i{method-defining forms}.
 The @i{standardized} @i{method-defining operators} are listed in Figure 7--2.
@@ -1235,7 +1234,7 @@ an error is signaled.  If a @i{method-defining operator} that cannot specify
 a @i{lambda list} for that @i{generic function} is derived from the
 @i{lambda list} of the @i{method} in the @i{method-defining form} in such a way
 as to be @i{congruent} with it.  For a discussion of @i{congruence}
-@IGindex{congruence}
+@IGindex congruence
 ,
 see @ref{Congruent Lambda-lists for all Methods of a Generic Function}.
 
@@ -1292,7 +1291,7 @@ selection to determine whether an argument satisfies a @i{parameter specializer}
 
 A method all of whose @i{parameter specializers} are 
 the @i{class} @b{t} is called a @i{default method}
-@IGindex{default method}
+@IGindex default method
 ; it is always applicable but
 may be shadowed by a more specific method.
 
@@ -1475,7 +1474,7 @@ both @t{picture-class} and @t{character-class}.
 When a @i{generic function} is called with particular arguments, it must
 determine the code to execute.  This code is called the 
 @i{effective method}
-@IGindex{effective method}
+@IGindex effective method
  for those @i{arguments}.
 The @i{effective method} is a 
 combination of the @i{applicable methods} in the @i{generic function}
@@ -1573,7 +1572,7 @@ That method can call the next most specific
 method by using the @i{function} @b{call-next-method}.  The method that
 @b{call-next-method} will call is referred to as the 
 @i{next method}
-@IGindex{next method}
+@IGindex next method
 .  The predicate @b{next-method-p} tests whether a next
 method exists.  If @b{call-next-method} is called and there is no
 next most specific method, the generic function @b{no-next-method}
@@ -1608,7 +1607,7 @@ the @b{define-method-combination} @i{macro}.
 @node Standard Method Combination, Declarative Method Combination, Applying method combination to the sorted list of applicable methods, Method Selection and Combination
 @subsubsection Standard Method Combination
 
-@IRindex{standard}
+@IRindex standard
 
 Standard method combination is supported by the @i{class} @b{standard-generic-function}.
 It is used if no other type of method
@@ -1757,25 +1756,25 @@ other operators that specify generic function options.
 
 The names of the built-in  method combination types are listed in Figure 7--3.
 
-@IRindex{+}
+@IRindex +
 
-@IRindex{and}
+@IRindex and
 
-@IRindex{append}
+@IRindex append
 
-@IRindex{list}
+@IRindex list
 
-@IRindex{max}
+@IRindex max
 
-@IRindex{min}
+@IRindex min
 
-@IRindex{nconc}
+@IRindex nconc
 
-@IRindex{or}
+@IRindex or
 
-@IRindex{progn}
+@IRindex progn
 
-@IRindex{standard}
+@IRindex standard
 
 @format
 @group
@@ -3797,29 +3796,26 @@ of an accessor for the @i{instance}.
 
 A @b{with-accessors} expression of the form:
 
-@center 
 @example
 
-@w{@t{(with-accessors} (@r{slot-entry}_1 ...@r{slot-entry}_n) @i{instance-form} @r{form}_1 ...@r{form}_k)}@*
+@center @w{@t{(with-accessors} (@r{slot-entry}_1 ...@r{slot-entry}_n) @i{instance-form} @r{form}_1 ...@r{form}_k)}@*
 @end example
 
 @noindent
 expands into the equivalent of
 
-@center 
 @example
 
-@w{@t{(}@t{let ((}in @i{instance-form}@t{))}}@*
+@center @w{@t{(}@t{let ((}in @i{instance-form}@t{))}}@*
 @w{ @t{(symbol-macrolet (}@r{Q}_1... @r{Q}_n@t{)} @r{form}_1 ...@r{form}_k@t{))}}@*
 @end example
 
 @noindent
 where @r{Q}_i is 
 
-@center
 @example
-@t{(}@r{variable-name}_i () 
-@t{(@r{accessor-name}_i in))}
+@center @t{(}@r{variable-name}_i () 
+@center @t{(@r{accessor-name}_i in))}
 @end example
 
 
@@ -3919,39 +3915,35 @@ of a @i{slot} in the @i{instance}.
 
 A @b{with-slots} expression of the form:
 
-@center 
 @example
 
-@w{@t{(with-slots} (@r{slot-entry}_1 ...@r{slot-entry}_n) @i{instance-form} @r{form}_1 ...@r{form}_k)}@*
+@center @w{@t{(with-slots} (@r{slot-entry}_1 ...@r{slot-entry}_n) @i{instance-form} @r{form}_1 ...@r{form}_k)}@*
 @end example
 
 @noindent
 expands into the equivalent of
 
-@center 
 @example
 
-@w{@t{(}@t{let ((}in @i{instance-form}@t{))}}@*
+@center @w{@t{(}@t{let ((}in @i{instance-form}@t{))}}@*
 @w{ @t{(symbol-macrolet (}@r{Q}_1... @r{Q}_n@t{)} @r{form}_1 ...@r{form}_k@t{))}}@*
 @end example
 
 @noindent
 where @r{Q}_i is 
 
-@center 
 @example
-@t{(}@r{slot-entry}_i () 
-@t{(slot-value }in '@r{slot-entry}_i@t{))}
+@center @t{(}@r{slot-entry}_i () 
+@center @t{(slot-value }in '@r{slot-entry}_i@t{))}
 @end example
 
 @noindent
 if @r{slot-entry}_i is a @i{symbol}
 and is
 
-@center 
 @example
-@t{(}@r{variable-name}_i () 
-@t{(slot-value }in '@r{slot-name}_i@t{))}
+@center @t{(}@r{variable-name}_i () 
+@center @t{(slot-value }in '@r{slot-name}_i@t{))}
 @end example
 
 
@@ -3959,9 +3951,8 @@ and is
 if @r{slot-entry}_i
 is of the form 
 
-@center 
 @example
-@t{(}@r{variable-name}_i 
+@center @t{(}@r{variable-name}_i 
 @r{slot-name}_i@t{)}
 @end example
 
diff --git a/gcl/info/chap-9.texi b/gcl/info/chap-9.texi
index 67ebc715a..a5e91fb4f 100644
--- a/gcl/info/chap-9.texi
+++ b/gcl/info/chap-9.texi
@@ -212,7 +212,7 @@ implicitly.  Macros such as @b{ccase}, @b{ctypecase},
 
 A number of the functions in the condition system take arguments which
 are identified as @i{condition designators}
-@IGindex{condition designator}
+@IGindex condition designator
 .
 By convention, those arguments are notated as
 
@@ -275,10 +275,10 @@ If the @t{:report} argument to @b{define-condition} is used,
 a print function is defined that is called whenever 
 the defined @i{condition} is printed while the @i{value} of @b{*print-escape*} is @i{false}. 
 This function is called the @i{condition reporter}
-@IGindex{condition reporter}
+@IGindex condition reporter
 ;
 the text which it outputs is called a @i{report message}
-@IGindex{report message}
+@IGindex report message
 .
 
 When a @i{condition} is printed and @b{*print-escape*}
@@ -1095,9 +1095,9 @@ actually fixing the problem).
 
 The order of evaluation of the @i{places} is not specified;
 see @ref{Evaluation of Subforms to Places}.
-@ITindex{order of evaluation}
+@ITindex order of evaluation
 
-@ITindex{evaluation order}
+@ITindex evaluation order
 
 If a @i{place} @i{form} is supplied that produces more values than there
 are store variables, the extra values are ignored. If the supplied 
@@ -3576,7 +3576,8 @@ signaled.
  (defun read-new-value ()
    (format t "Enter a new value: ")
    (multiple-value-list (eval (read))))
-@result{}  READ-NEW-VALUE@page
+@result{}  READ-NEW-VALUE
+@page
  (defun verify-or-fix-perfect-sundae (ice-cream sauce topping)
    (do ()
       ((all-start-with-same-letter ice-cream sauce topping))
@@ -4061,15 +4062,15 @@ where the handler may wish to supply a replacement datum for one-time use.
 @node abort (Function), , use-value, Conditions Dictionary
 @subsection abort, continue, muffle-warning, store-value, use-value          [Function]
 
-@IRindex{abort}
+@IRindex abort
 
-@IRindex{continue}
+@IRindex continue
 
-@IRindex{muffle-warning}
+@IRindex muffle-warning
 
-@IRindex{store-value}
+@IRindex store-value
 
-@IRindex{use-value}
+@IRindex use-value
 
 @code{abort}  @i{@r{&optional} condition} 
        @result{}  #<NoValue>
diff --git a/gcl/info/chap-a.texi b/gcl/info/chap-a.texi
index d672e8ad8..a907ef1b5 100644
--- a/gcl/info/chap-a.texi
+++ b/gcl/info/chap-a.texi
@@ -47,7 +47,7 @@ For a list of deprecated features, see @ref{Deprecated Language Features}.
 @subsection Removed Types
 
 The @i{type} @t{string-char}
-@ICindex{string-char}
+@ICindex string-char
  was removed.
 
 @node Removed Operators, Removed Argument Conventions, Removed Types, Removed Language Features
@@ -56,30 +56,30 @@ The @i{type} @t{string-char}
 The functions
 
 @t{int-char}
-@ICindex{int-char}
+@ICindex int-char
 ,
 @t{char-bits}
-@ICindex{char-bits}
+@ICindex char-bits
 ,
 @t{char-font}
-@ICindex{char-font}
+@ICindex char-font
 ,
 @t{make-char}
-@ICindex{make-char}
+@ICindex make-char
 ,
 @t{char-bit}
-@ICindex{char-bit}
+@ICindex char-bit
 ,
 @t{set-char-bit}
-@ICindex{set-char-bit}
+@ICindex set-char-bit
 ,
 @t{string-char-p}
-@ICindex{string-char-p}
+@ICindex string-char-p
 ,
 
 and
 @t{commonp}
-@ICindex{commonp}
+@ICindex commonp
 
 were removed.
 
@@ -89,10 +89,10 @@ The @i{special operator} @t{compiler-let} was removed.
 @subsection Removed Argument Conventions
 
 The @i{font} argument to @b{digit-char}
-@IRindex{digit-char}
+@IRindex digit-char
  was removed.
 The @i{bits} and @i{font} arguments to @b{code-char}
-@IRindex{code-char}
+@IRindex code-char
 
 were removed.
 
@@ -102,26 +102,26 @@ were removed.
 The variables
 
 @t{char-font-limit}
-@ICindex{char-font-limit}
+@ICindex char-font-limit
 ,
 @t{char-bits-limit}
-@ICindex{char-bits-limit}
+@ICindex char-bits-limit
 ,
 @t{char-control-bit}
-@ICindex{char-control-bit}
+@ICindex char-control-bit
 ,
 @t{char-meta-bit}
-@ICindex{char-meta-bit}
+@ICindex char-meta-bit
 ,
 @t{char-super-bit}
-@ICindex{char-super-bit}
+@ICindex char-super-bit
 ,
 @t{char-hyper-bit}
-@ICindex{char-hyper-bit}
+@ICindex char-hyper-bit
 ,
 
 and @t{*break-on-warnings*}
-@ICindex{*break-on-warnings*}
+@ICindex *break-on-warnings*
 
 were removed.
 
@@ -135,13 +135,13 @@ The ``@t{#,}'' @i{reader macro} in @i{standard syntax} was removed.
 
 The @i{packages} 
      @t{LISP}
-@IPindex{lisp}
+@IPindex lisp
 ,
      @t{USER}
-@IPindex{user}
+@IPindex user
 ,
  and @t{SYSTEM}
-@IPindex{system}
+@IPindex system
 
 are no longer required.  It is valid for @i{packages} with one or more of these
 names to be provided by a @i{conforming implementation} as extensions.
diff --git a/gcl/info/gcl-si.texi b/gcl/info/gcl-si.texi
index 7035dd6c3..2cbda2968 100755
--- a/gcl/info/gcl-si.texi
+++ b/gcl/info/gcl-si.texi
@@ -10,6 +10,7 @@
 
 @c @smallbook
 @setfilename gcl-si.info
+@settitle GCL SI Manual
 @synindex vr fn
 
 @c to update the menus do: 
diff --git a/gcl/info/gcl-tk.texi b/gcl/info/gcl-tk.texi
index 025b77019..1befdad23 100755
--- a/gcl/info/gcl-tk.texi
+++ b/gcl/info/gcl-tk.texi
@@ -10,6 +10,7 @@
 
 @c @smallbook
 @setfilename gcl-tk.info
+@settitle GCL TK Manual
 @synindex vr fn
 
 @c to update the menus do: 
